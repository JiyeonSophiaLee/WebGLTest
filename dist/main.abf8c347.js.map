{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","three.module.js","stats.module.js","main.js"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","scalar","Error","constructor","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","round","sqrt","angle","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","isMatrix3","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","isTexture","HTMLImageElement","ImageBitmap","getDataURL","data","Vector4","z","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","isVector3","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","size","halfSize","_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","toJSON","instanceColor","serialize","library","element","isScene","background","isColor","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","u","p3","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBeforeCompile","newValue","flatShading","currentValue","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","srcPlanes","dstPlanes","isMaterial","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","delta","getHSL","color1","color2","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","materialIndex","needsUpdate","getNormalMatrix","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","negate","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_vector1","_vector2","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","line","startSign","endSign","intersectsPlane","optionalNormalMatrix","referencePoint","coplanarPoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","hasAttribute","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","getParameters","shadows","isMeshStandardMaterial","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","disable","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","bindXRFramebuffer","framebuffer","bindFramebuffer","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","convert","glInternalFormat","mipmap","isDepthTexture","isCompressedTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","glTextureType","isTexture3D","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","onSessionEnd","forEach","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","material2","getProgram","window","setFromProjectionMatrix","projectObject","opaqueObjects","transmissiveObjects","transparentObjects","renderObjects","renderTransmissiveObjects","onAfterRender","isLOD","intersectsSprite","isImmediateRenderObject","needsAntialias","renderTargetType","currentToneMapping","camera2","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","framebufferBound","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","texSubImage3D","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","weight","getComponent","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","sum","ShapeUtils","contour","pts","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","OctahedronGeometry","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TextGeometry","text","font","isFont","generateShapes","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","closed","frames","P","generateBufferData","generateSegment","generateIndices","getPointAt","WireframeGeometry","edge","edges","o","ol","edge1","edge2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","ParametricBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TextBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","ior","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","dataUriRegex","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","AnimationLoader","setPath","setWithCredentials","CompressedTextureLoader","setResponseType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","lengths","getLengths","cacheArcLengths","current","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","absarc","absellipse","firstPoint","lastPoint","Shape","holesPts","getPointsHoles","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","makeOrthographic","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","arrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","geometryShapes","bufferGeometryLoader","details","setTextures","loadImage","deserializeImage","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","bind","setResourcePath","ImageBitmapLoader","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","toShapes","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","resolvedProperty","propertyIndex","targetObject","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","ImmediateRenderObject","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","_floatView","_int32View","DataUtils","val","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","MAX_SAMPLES","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_createPlanes","_lodPlanes","_sizeLods","_sigmas","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","_isLDR","_createRenderTarget","tmpMesh","cubeCamera","upSign","forwardSign","originalAutoClear","useSolidColor","convertSRGBToLinear","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","_getEncodings","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","setBuffer","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","revision","__THREE__","Stats","createElement","cssText","showPanel","addPanel","panel","appendChild","dom","beginTime","fpsPanel","Panel","msPanel","self","memPanel","begin","usedJSHeapSize","jsHeapSizeLimit","fg","bg","PR","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","textBaseline","fillStyle","fillRect","fillText","globalAlpha","maxValue","clock","THREE","innerWidth","innerHeight","axesHelper","positionKF","scaleKF","qInitial","qFinal","quaternionKF","colorKF","opacityKF","clipAction","body","onWindowResize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","file":"main.abf8c347.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n const REVISION = '130dev';\n const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n const CullFaceNone = 0;\n const CullFaceBack = 1;\n const CullFaceFront = 2;\n const CullFaceFrontBack = 3;\n const BasicShadowMap = 0;\n const PCFShadowMap = 1;\n const PCFSoftShadowMap = 2;\n const VSMShadowMap = 3;\n const FrontSide = 0;\n const BackSide = 1;\n const DoubleSide = 2;\n const FlatShading = 1;\n const SmoothShading = 2;\n const NoBlending = 0;\n const NormalBlending = 1;\n const AdditiveBlending = 2;\n const SubtractiveBlending = 3;\n const MultiplyBlending = 4;\n const CustomBlending = 5;\n const AddEquation = 100;\n const SubtractEquation = 101;\n const ReverseSubtractEquation = 102;\n const MinEquation = 103;\n const MaxEquation = 104;\n const ZeroFactor = 200;\n const OneFactor = 201;\n const SrcColorFactor = 202;\n const OneMinusSrcColorFactor = 203;\n const SrcAlphaFactor = 204;\n const OneMinusSrcAlphaFactor = 205;\n const DstAlphaFactor = 206;\n const OneMinusDstAlphaFactor = 207;\n const DstColorFactor = 208;\n const OneMinusDstColorFactor = 209;\n const SrcAlphaSaturateFactor = 210;\n const NeverDepth = 0;\n const AlwaysDepth = 1;\n const LessDepth = 2;\n const LessEqualDepth = 3;\n const EqualDepth = 4;\n const GreaterEqualDepth = 5;\n const GreaterDepth = 6;\n const NotEqualDepth = 7;\n const MultiplyOperation = 0;\n const MixOperation = 1;\n const AddOperation = 2;\n const NoToneMapping = 0;\n const LinearToneMapping = 1;\n const ReinhardToneMapping = 2;\n const CineonToneMapping = 3;\n const ACESFilmicToneMapping = 4;\n const CustomToneMapping = 5;\n \n const UVMapping = 300;\n const CubeReflectionMapping = 301;\n const CubeRefractionMapping = 302;\n const EquirectangularReflectionMapping = 303;\n const EquirectangularRefractionMapping = 304;\n const CubeUVReflectionMapping = 306;\n const CubeUVRefractionMapping = 307;\n const RepeatWrapping = 1000;\n const ClampToEdgeWrapping = 1001;\n const MirroredRepeatWrapping = 1002;\n const NearestFilter = 1003;\n const NearestMipmapNearestFilter = 1004;\n const NearestMipMapNearestFilter = 1004;\n const NearestMipmapLinearFilter = 1005;\n const NearestMipMapLinearFilter = 1005;\n const LinearFilter = 1006;\n const LinearMipmapNearestFilter = 1007;\n const LinearMipMapNearestFilter = 1007;\n const LinearMipmapLinearFilter = 1008;\n const LinearMipMapLinearFilter = 1008;\n const UnsignedByteType = 1009;\n const ByteType = 1010;\n const ShortType = 1011;\n const UnsignedShortType = 1012;\n const IntType = 1013;\n const UnsignedIntType = 1014;\n const FloatType = 1015;\n const HalfFloatType = 1016;\n const UnsignedShort4444Type = 1017;\n const UnsignedShort5551Type = 1018;\n const UnsignedShort565Type = 1019;\n const UnsignedInt248Type = 1020;\n const AlphaFormat = 1021;\n const RGBFormat = 1022;\n const RGBAFormat = 1023;\n const LuminanceFormat = 1024;\n const LuminanceAlphaFormat = 1025;\n const RGBEFormat = RGBAFormat;\n const DepthFormat = 1026;\n const DepthStencilFormat = 1027;\n const RedFormat = 1028;\n const RedIntegerFormat = 1029;\n const RGFormat = 1030;\n const RGIntegerFormat = 1031;\n const RGBIntegerFormat = 1032;\n const RGBAIntegerFormat = 1033;\n \n const RGB_S3TC_DXT1_Format = 33776;\n const RGBA_S3TC_DXT1_Format = 33777;\n const RGBA_S3TC_DXT3_Format = 33778;\n const RGBA_S3TC_DXT5_Format = 33779;\n const RGB_PVRTC_4BPPV1_Format = 35840;\n const RGB_PVRTC_2BPPV1_Format = 35841;\n const RGBA_PVRTC_4BPPV1_Format = 35842;\n const RGBA_PVRTC_2BPPV1_Format = 35843;\n const RGB_ETC1_Format = 36196;\n const RGB_ETC2_Format = 37492;\n const RGBA_ETC2_EAC_Format = 37496;\n const RGBA_ASTC_4x4_Format = 37808;\n const RGBA_ASTC_5x4_Format = 37809;\n const RGBA_ASTC_5x5_Format = 37810;\n const RGBA_ASTC_6x5_Format = 37811;\n const RGBA_ASTC_6x6_Format = 37812;\n const RGBA_ASTC_8x5_Format = 37813;\n const RGBA_ASTC_8x6_Format = 37814;\n const RGBA_ASTC_8x8_Format = 37815;\n const RGBA_ASTC_10x5_Format = 37816;\n const RGBA_ASTC_10x6_Format = 37817;\n const RGBA_ASTC_10x8_Format = 37818;\n const RGBA_ASTC_10x10_Format = 37819;\n const RGBA_ASTC_12x10_Format = 37820;\n const RGBA_ASTC_12x12_Format = 37821;\n const RGBA_BPTC_Format = 36492;\n const SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n const SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n const SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n const SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n const SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n const SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n const SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n const SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n const SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n const SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n const SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n const SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n const SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n const SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n const LoopOnce = 2200;\n const LoopRepeat = 2201;\n const LoopPingPong = 2202;\n const InterpolateDiscrete = 2300;\n const InterpolateLinear = 2301;\n const InterpolateSmooth = 2302;\n const ZeroCurvatureEnding = 2400;\n const ZeroSlopeEnding = 2401;\n const WrapAroundEnding = 2402;\n const NormalAnimationBlendMode = 2500;\n const AdditiveAnimationBlendMode = 2501;\n const TrianglesDrawMode = 0;\n const TriangleStripDrawMode = 1;\n const TriangleFanDrawMode = 2;\n const LinearEncoding = 3000;\n const sRGBEncoding = 3001;\n const GammaEncoding = 3007;\n const RGBEEncoding = 3002;\n const LogLuvEncoding = 3003;\n const RGBM7Encoding = 3004;\n const RGBM16Encoding = 3005;\n const RGBDEncoding = 3006;\n const BasicDepthPacking = 3200;\n const RGBADepthPacking = 3201;\n const TangentSpaceNormalMap = 0;\n const ObjectSpaceNormalMap = 1;\n \n const ZeroStencilOp = 0;\n const KeepStencilOp = 7680;\n const ReplaceStencilOp = 7681;\n const IncrementStencilOp = 7682;\n const DecrementStencilOp = 7683;\n const IncrementWrapStencilOp = 34055;\n const DecrementWrapStencilOp = 34056;\n const InvertStencilOp = 5386;\n \n const NeverStencilFunc = 512;\n const LessStencilFunc = 513;\n const EqualStencilFunc = 514;\n const LessEqualStencilFunc = 515;\n const GreaterStencilFunc = 516;\n const NotEqualStencilFunc = 517;\n const GreaterEqualStencilFunc = 518;\n const AlwaysStencilFunc = 519;\n \n const StaticDrawUsage = 35044;\n const DynamicDrawUsage = 35048;\n const StreamDrawUsage = 35040;\n const StaticReadUsage = 35045;\n const DynamicReadUsage = 35049;\n const StreamReadUsage = 35041;\n const StaticCopyUsage = 35046;\n const DynamicCopyUsage = 35050;\n const StreamCopyUsage = 35042;\n \n const GLSL1 = '100';\n const GLSL3 = '300 es';\n \n /**\n  * https://github.com/mrdoob/eventdispatcher.js/\n  */\n \n class EventDispatcher {\n \n\t addEventListener( type, listener ) {\n \n\t\t if ( this._listeners === undefined ) this._listeners = {};\n \n\t\t const listeners = this._listeners;\n \n\t\t if ( listeners[ type ] === undefined ) {\n \n\t\t\t listeners[ type ] = [];\n \n\t\t }\n \n\t\t if ( listeners[ type ].indexOf( listener ) === - 1 ) {\n \n\t\t\t listeners[ type ].push( listener );\n \n\t\t }\n \n\t }\n \n\t hasEventListener( type, listener ) {\n \n\t\t if ( this._listeners === undefined ) return false;\n \n\t\t const listeners = this._listeners;\n \n\t\t return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n \n\t }\n \n\t removeEventListener( type, listener ) {\n \n\t\t if ( this._listeners === undefined ) return;\n \n\t\t const listeners = this._listeners;\n\t\t const listenerArray = listeners[ type ];\n \n\t\t if ( listenerArray !== undefined ) {\n \n\t\t\t const index = listenerArray.indexOf( listener );\n \n\t\t\t if ( index !== - 1 ) {\n \n\t\t\t\t listenerArray.splice( index, 1 );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t dispatchEvent( event ) {\n \n\t\t if ( this._listeners === undefined ) return;\n \n\t\t const listeners = this._listeners;\n\t\t const listenerArray = listeners[ event.type ];\n \n\t\t if ( listenerArray !== undefined ) {\n \n\t\t\t event.target = this;\n \n\t\t\t // Make a copy, in case listeners are removed while iterating.\n\t\t\t const array = listenerArray.slice( 0 );\n \n\t\t\t for ( let i = 0, l = array.length; i < l; i ++ ) {\n \n\t\t\t\t array[ i ].call( this, event );\n \n\t\t\t }\n \n\t\t\t event.target = null;\n \n\t\t }\n \n\t }\n \n }\n \n const _lut = [];\n \n for ( let i = 0; i < 256; i ++ ) {\n \n\t _lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n \n }\n \n let _seed = 1234567;\n \n \n const DEG2RAD = Math.PI / 180;\n const RAD2DEG = 180 / Math.PI;\n \n // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n function generateUUID() {\n \n\t const d0 = Math.random() * 0xffffffff | 0;\n\t const d1 = Math.random() * 0xffffffff | 0;\n\t const d2 = Math.random() * 0xffffffff | 0;\n\t const d3 = Math.random() * 0xffffffff | 0;\n\t const uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t _lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t _lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t _lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n \n\t // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t return uuid.toUpperCase();\n \n }\n \n function clamp( value, min, max ) {\n \n\t return Math.max( min, Math.min( max, value ) );\n \n }\n \n // compute euclidian modulo of m % n\n // https://en.wikipedia.org/wiki/Modulo_operation\n function euclideanModulo( n, m ) {\n \n\t return ( ( n % m ) + m ) % m;\n \n }\n \n // Linear mapping from range <a1, a2> to range <b1, b2>\n function mapLinear( x, a1, a2, b1, b2 ) {\n \n\t return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n \n }\n \n // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n function inverseLerp( x, y, value ) {\n \n\t if ( x !== y ) {\n \n\t\t return ( value - x ) / ( y - x );\n \n\t\t  } else {\n \n\t\t return 0;\n \n\t\t  }\n \n }\n \n // https://en.wikipedia.org/wiki/Linear_interpolation\n function lerp( x, y, t ) {\n \n\t return ( 1 - t ) * x + t * y;\n \n }\n \n // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n function damp( x, y, lambda, dt ) {\n \n\t return lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n \n }\n \n // https://www.desmos.com/calculator/vcsjnyz7x4\n function pingpong( x, length = 1 ) {\n \n\t return length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n \n }\n \n // http://en.wikipedia.org/wiki/Smoothstep\n function smoothstep( x, min, max ) {\n \n\t if ( x <= min ) return 0;\n\t if ( x >= max ) return 1;\n \n\t x = ( x - min ) / ( max - min );\n \n\t return x * x * ( 3 - 2 * x );\n \n }\n \n function smootherstep( x, min, max ) {\n \n\t if ( x <= min ) return 0;\n\t if ( x >= max ) return 1;\n \n\t x = ( x - min ) / ( max - min );\n \n\t return x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n \n }\n \n // Random integer from <low, high> interval\n function randInt( low, high ) {\n \n\t return low + Math.floor( Math.random() * ( high - low + 1 ) );\n \n }\n \n // Random float from <low, high> interval\n function randFloat( low, high ) {\n \n\t return low + Math.random() * ( high - low );\n \n }\n \n // Random float from <-range/2, range/2> interval\n function randFloatSpread( range ) {\n \n\t return range * ( 0.5 - Math.random() );\n \n }\n \n // Deterministic pseudo-random float in the interval [ 0, 1 ]\n function seededRandom( s ) {\n \n\t if ( s !== undefined ) _seed = s % 2147483647;\n \n\t // Park-Miller algorithm\n \n\t _seed = _seed * 16807 % 2147483647;\n \n\t return ( _seed - 1 ) / 2147483646;\n \n }\n \n function degToRad( degrees ) {\n \n\t return degrees * DEG2RAD;\n \n }\n \n function radToDeg( radians ) {\n \n\t return radians * RAD2DEG;\n \n }\n \n function isPowerOfTwo( value ) {\n \n\t return ( value & ( value - 1 ) ) === 0 && value !== 0;\n \n }\n \n function ceilPowerOfTwo( value ) {\n \n\t return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n \n }\n \n function floorPowerOfTwo( value ) {\n \n\t return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n \n }\n \n function setQuaternionFromProperEuler( q, a, b, c, order ) {\n \n\t // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n \n\t // rotations are applied to the axes in the order specified by 'order'\n\t // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t // angles are in radians\n \n\t const cos = Math.cos;\n\t const sin = Math.sin;\n \n\t const c2 = cos( b / 2 );\n\t const s2 = sin( b / 2 );\n \n\t const c13 = cos( ( a + c ) / 2 );\n\t const s13 = sin( ( a + c ) / 2 );\n \n\t const c1_3 = cos( ( a - c ) / 2 );\n\t const s1_3 = sin( ( a - c ) / 2 );\n \n\t const c3_1 = cos( ( c - a ) / 2 );\n\t const s3_1 = sin( ( c - a ) / 2 );\n \n\t switch ( order ) {\n \n\t\t case 'XYX':\n\t\t\t q.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\t break;\n \n\t\t case 'YZY':\n\t\t\t q.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\t break;\n \n\t\t case 'ZXZ':\n\t\t\t q.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\t break;\n \n\t\t case 'XZX':\n\t\t\t q.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\t break;\n \n\t\t case 'YXY':\n\t\t\t q.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\t break;\n \n\t\t case 'ZYZ':\n\t\t\t q.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\t break;\n \n\t\t default:\n\t\t\t console.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n \n\t }\n \n }\n \n var MathUtils = /*#__PURE__*/Object.freeze({\n\t __proto__: null,\n\t DEG2RAD: DEG2RAD,\n\t RAD2DEG: RAD2DEG,\n\t generateUUID: generateUUID,\n\t clamp: clamp,\n\t euclideanModulo: euclideanModulo,\n\t mapLinear: mapLinear,\n\t inverseLerp: inverseLerp,\n\t lerp: lerp,\n\t damp: damp,\n\t pingpong: pingpong,\n\t smoothstep: smoothstep,\n\t smootherstep: smootherstep,\n\t randInt: randInt,\n\t randFloat: randFloat,\n\t randFloatSpread: randFloatSpread,\n\t seededRandom: seededRandom,\n\t degToRad: degToRad,\n\t radToDeg: radToDeg,\n\t isPowerOfTwo: isPowerOfTwo,\n\t ceilPowerOfTwo: ceilPowerOfTwo,\n\t floorPowerOfTwo: floorPowerOfTwo,\n\t setQuaternionFromProperEuler: setQuaternionFromProperEuler\n });\n \n class Vector2 {\n \n\t constructor( x = 0, y = 0 ) {\n \n\t\t this.x = x;\n\t\t this.y = y;\n \n\t }\n \n\t get width() {\n \n\t\t return this.x;\n \n\t }\n \n\t set width( value ) {\n \n\t\t this.x = value;\n \n\t }\n \n\t get height() {\n \n\t\t return this.y;\n \n\t }\n \n\t set height( value ) {\n \n\t\t this.y = value;\n \n\t }\n \n\t set( x, y ) {\n \n\t\t this.x = x;\n\t\t this.y = y;\n \n\t\t return this;\n \n\t }\n \n\t setScalar( scalar ) {\n \n\t\t this.x = scalar;\n\t\t this.y = scalar;\n \n\t\t return this;\n \n\t }\n \n\t setX( x ) {\n \n\t\t this.x = x;\n \n\t\t return this;\n \n\t }\n \n\t setY( y ) {\n \n\t\t this.y = y;\n \n\t\t return this;\n \n\t }\n \n\t setComponent( index, value ) {\n \n\t\t switch ( index ) {\n \n\t\t\t case 0: this.x = value; break;\n\t\t\t case 1: this.y = value; break;\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t getComponent( index ) {\n \n\t\t switch ( index ) {\n \n\t\t\t case 0: return this.x;\n\t\t\t case 1: return this.y;\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\n \n\t\t }\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this.x, this.y );\n \n\t }\n \n\t copy( v ) {\n \n\t\t this.x = v.x;\n\t\t this.y = v.y;\n \n\t\t return this;\n \n\t }\n \n\t add( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t return this.addVectors( v, w );\n \n\t\t }\n \n\t\t this.x += v.x;\n\t\t this.y += v.y;\n \n\t\t return this;\n \n\t }\n \n\t addScalar( s ) {\n \n\t\t this.x += s;\n\t\t this.y += s;\n \n\t\t return this;\n \n\t }\n \n\t addVectors( a, b ) {\n \n\t\t this.x = a.x + b.x;\n\t\t this.y = a.y + b.y;\n \n\t\t return this;\n \n\t }\n \n\t addScaledVector( v, s ) {\n \n\t\t this.x += v.x * s;\n\t\t this.y += v.y * s;\n \n\t\t return this;\n \n\t }\n \n\t sub( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t return this.subVectors( v, w );\n \n\t\t }\n \n\t\t this.x -= v.x;\n\t\t this.y -= v.y;\n \n\t\t return this;\n \n\t }\n \n\t subScalar( s ) {\n \n\t\t this.x -= s;\n\t\t this.y -= s;\n \n\t\t return this;\n \n\t }\n \n\t subVectors( a, b ) {\n \n\t\t this.x = a.x - b.x;\n\t\t this.y = a.y - b.y;\n \n\t\t return this;\n \n\t }\n \n\t multiply( v ) {\n \n\t\t this.x *= v.x;\n\t\t this.y *= v.y;\n \n\t\t return this;\n \n\t }\n \n\t multiplyScalar( scalar ) {\n \n\t\t this.x *= scalar;\n\t\t this.y *= scalar;\n \n\t\t return this;\n \n\t }\n \n\t divide( v ) {\n \n\t\t this.x /= v.x;\n\t\t this.y /= v.y;\n \n\t\t return this;\n \n\t }\n \n\t divideScalar( scalar ) {\n \n\t\t return this.multiplyScalar( 1 / scalar );\n \n\t }\n \n\t applyMatrix3( m ) {\n \n\t\t const x = this.x, y = this.y;\n\t\t const e = m.elements;\n \n\t\t this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n \n\t\t return this;\n \n\t }\n \n\t min( v ) {\n \n\t\t this.x = Math.min( this.x, v.x );\n\t\t this.y = Math.min( this.y, v.y );\n \n\t\t return this;\n \n\t }\n \n\t max( v ) {\n \n\t\t this.x = Math.max( this.x, v.x );\n\t\t this.y = Math.max( this.y, v.y );\n \n\t\t return this;\n \n\t }\n \n\t clamp( min, max ) {\n \n\t\t // assumes min < max, componentwise\n \n\t\t this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n \n\t\t return this;\n \n\t }\n \n\t clampScalar( minVal, maxVal ) {\n \n\t\t this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n \n\t\t return this;\n \n\t }\n \n\t clampLength( min, max ) {\n \n\t\t const length = this.length();\n \n\t\t return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n \n\t }\n \n\t floor() {\n \n\t\t this.x = Math.floor( this.x );\n\t\t this.y = Math.floor( this.y );\n \n\t\t return this;\n \n\t }\n \n\t ceil() {\n \n\t\t this.x = Math.ceil( this.x );\n\t\t this.y = Math.ceil( this.y );\n \n\t\t return this;\n \n\t }\n \n\t round() {\n \n\t\t this.x = Math.round( this.x );\n\t\t this.y = Math.round( this.y );\n \n\t\t return this;\n \n\t }\n \n\t roundToZero() {\n \n\t\t this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n \n\t\t return this;\n \n\t }\n \n\t negate() {\n \n\t\t this.x = - this.x;\n\t\t this.y = - this.y;\n \n\t\t return this;\n \n\t }\n \n\t dot( v ) {\n \n\t\t return this.x * v.x + this.y * v.y;\n \n\t }\n \n\t cross( v ) {\n \n\t\t return this.x * v.y - this.y * v.x;\n \n\t }\n \n\t lengthSq() {\n \n\t\t return this.x * this.x + this.y * this.y;\n \n\t }\n \n\t length() {\n \n\t\t return Math.sqrt( this.x * this.x + this.y * this.y );\n \n\t }\n \n\t manhattanLength() {\n \n\t\t return Math.abs( this.x ) + Math.abs( this.y );\n \n\t }\n \n\t normalize() {\n \n\t\t return this.divideScalar( this.length() || 1 );\n \n\t }\n \n\t angle() {\n \n\t\t // computes the angle in radians with respect to the positive x-axis\n \n\t\t const angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n \n\t\t return angle;\n \n\t }\n \n\t distanceTo( v ) {\n \n\t\t return Math.sqrt( this.distanceToSquared( v ) );\n \n\t }\n \n\t distanceToSquared( v ) {\n \n\t\t const dx = this.x - v.x, dy = this.y - v.y;\n\t\t return dx * dx + dy * dy;\n \n\t }\n \n\t manhattanDistanceTo( v ) {\n \n\t\t return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n \n\t }\n \n\t setLength( length ) {\n \n\t\t return this.normalize().multiplyScalar( length );\n \n\t }\n \n\t lerp( v, alpha ) {\n \n\t\t this.x += ( v.x - this.x ) * alpha;\n\t\t this.y += ( v.y - this.y ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t lerpVectors( v1, v2, alpha ) {\n \n\t\t this.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t this.y = v1.y + ( v2.y - v1.y ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t equals( v ) {\n \n\t\t return ( ( v.x === this.x ) && ( v.y === this.y ) );\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t this.x = array[ offset ];\n\t\t this.y = array[ offset + 1 ];\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t array[ offset ] = this.x;\n\t\t array[ offset + 1 ] = this.y;\n \n\t\t return array;\n \n\t }\n \n\t fromBufferAttribute( attribute, index, offset ) {\n \n\t\t if ( offset !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n \n\t\t }\n \n\t\t this.x = attribute.getX( index );\n\t\t this.y = attribute.getY( index );\n \n\t\t return this;\n \n\t }\n \n\t rotateAround( center, angle ) {\n \n\t\t const c = Math.cos( angle ), s = Math.sin( angle );\n \n\t\t const x = this.x - center.x;\n\t\t const y = this.y - center.y;\n \n\t\t this.x = x * c - y * s + center.x;\n\t\t this.y = x * s + y * c + center.y;\n \n\t\t return this;\n \n\t }\n \n\t random() {\n \n\t\t this.x = Math.random();\n\t\t this.y = Math.random();\n \n\t\t return this;\n \n\t }\n \n }\n \n Vector2.prototype.isVector2 = true;\n \n class Matrix3 {\n \n\t constructor() {\n \n\t\t this.elements = [\n \n\t\t\t 1, 0, 0,\n\t\t\t 0, 1, 0,\n\t\t\t 0, 0, 1\n \n\t\t ];\n \n\t\t if ( arguments.length > 0 ) {\n \n\t\t\t console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n \n\t\t }\n \n\t }\n \n\t set( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n \n\t\t const te = this.elements;\n \n\t\t te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n \n\t\t return this;\n \n\t }\n \n\t identity() {\n \n\t\t this.set(\n \n\t\t\t 1, 0, 0,\n\t\t\t 0, 1, 0,\n\t\t\t 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t copy( m ) {\n \n\t\t const te = this.elements;\n\t\t const me = m.elements;\n \n\t\t te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n \n\t\t return this;\n \n\t }\n \n\t extractBasis( xAxis, yAxis, zAxis ) {\n \n\t\t xAxis.setFromMatrix3Column( this, 0 );\n\t\t yAxis.setFromMatrix3Column( this, 1 );\n\t\t zAxis.setFromMatrix3Column( this, 2 );\n \n\t\t return this;\n \n\t }\n \n\t setFromMatrix4( m ) {\n \n\t\t const me = m.elements;\n \n\t\t this.set(\n \n\t\t\t me[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t me[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t me[ 2 ], me[ 6 ], me[ 10 ]\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t multiply( m ) {\n \n\t\t return this.multiplyMatrices( this, m );\n \n\t }\n \n\t premultiply( m ) {\n \n\t\t return this.multiplyMatrices( m, this );\n \n\t }\n \n\t multiplyMatrices( a, b ) {\n \n\t\t const ae = a.elements;\n\t\t const be = b.elements;\n\t\t const te = this.elements;\n \n\t\t const a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t const a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t const a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n \n\t\t const b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t const b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t const b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n \n\t\t te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n \n\t\t te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n \n\t\t te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n \n\t\t return this;\n \n\t }\n \n\t multiplyScalar( s ) {\n \n\t\t const te = this.elements;\n \n\t\t te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n \n\t\t return this;\n \n\t }\n \n\t determinant() {\n \n\t\t const te = this.elements;\n \n\t\t const a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n \n\t\t return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n \n\t }\n \n\t invert() {\n \n\t\t const te = this.elements,\n \n\t\t\t n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\t n12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\t n13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n \n\t\t\t t11 = n33 * n22 - n32 * n23,\n\t\t\t t12 = n32 * n13 - n33 * n12,\n\t\t\t t13 = n23 * n12 - n22 * n13,\n \n\t\t\t det = n11 * t11 + n21 * t12 + n31 * t13;\n \n\t\t if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n \n\t\t const detInv = 1 / det;\n \n\t\t te[ 0 ] = t11 * detInv;\n\t\t te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n \n\t\t te[ 3 ] = t12 * detInv;\n\t\t te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n \n\t\t te[ 6 ] = t13 * detInv;\n\t\t te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n \n\t\t return this;\n \n\t }\n \n\t transpose() {\n \n\t\t let tmp;\n\t\t const m = this.elements;\n \n\t\t tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n \n\t\t return this;\n \n\t }\n \n\t getNormalMatrix( matrix4 ) {\n \n\t\t return this.setFromMatrix4( matrix4 ).invert().transpose();\n \n\t }\n \n\t transposeIntoArray( r ) {\n \n\t\t const m = this.elements;\n \n\t\t r[ 0 ] = m[ 0 ];\n\t\t r[ 1 ] = m[ 3 ];\n\t\t r[ 2 ] = m[ 6 ];\n\t\t r[ 3 ] = m[ 1 ];\n\t\t r[ 4 ] = m[ 4 ];\n\t\t r[ 5 ] = m[ 7 ];\n\t\t r[ 6 ] = m[ 2 ];\n\t\t r[ 7 ] = m[ 5 ];\n\t\t r[ 8 ] = m[ 8 ];\n \n\t\t return this;\n \n\t }\n \n\t setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n \n\t\t const c = Math.cos( rotation );\n\t\t const s = Math.sin( rotation );\n \n\t\t this.set(\n\t\t\t sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t - sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t 0, 0, 1\n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t scale( sx, sy ) {\n \n\t\t const te = this.elements;\n \n\t\t te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\t te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n \n\t\t return this;\n \n\t }\n \n\t rotate( theta ) {\n \n\t\t const c = Math.cos( theta );\n\t\t const s = Math.sin( theta );\n \n\t\t const te = this.elements;\n \n\t\t const a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\t const a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n \n\t\t te[ 0 ] = c * a11 + s * a21;\n\t\t te[ 3 ] = c * a12 + s * a22;\n\t\t te[ 6 ] = c * a13 + s * a23;\n \n\t\t te[ 1 ] = - s * a11 + c * a21;\n\t\t te[ 4 ] = - s * a12 + c * a22;\n\t\t te[ 7 ] = - s * a13 + c * a23;\n \n\t\t return this;\n \n\t }\n \n\t translate( tx, ty ) {\n \n\t\t const te = this.elements;\n \n\t\t te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\t te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n \n\t\t return this;\n \n\t }\n \n\t equals( matrix ) {\n \n\t\t const te = this.elements;\n\t\t const me = matrix.elements;\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t if ( te[ i ] !== me[ i ] ) return false;\n \n\t\t }\n \n\t\t return true;\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.elements[ i ] = array[ i + offset ];\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t const te = this.elements;\n \n\t\t array[ offset ] = te[ 0 ];\n\t\t array[ offset + 1 ] = te[ 1 ];\n\t\t array[ offset + 2 ] = te[ 2 ];\n \n\t\t array[ offset + 3 ] = te[ 3 ];\n\t\t array[ offset + 4 ] = te[ 4 ];\n\t\t array[ offset + 5 ] = te[ 5 ];\n \n\t\t array[ offset + 6 ] = te[ 6 ];\n\t\t array[ offset + 7 ] = te[ 7 ];\n\t\t array[ offset + 8 ] = te[ 8 ];\n \n\t\t return array;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().fromArray( this.elements );\n \n\t }\n \n }\n \n Matrix3.prototype.isMatrix3 = true;\n \n let _canvas;\n \n class ImageUtils {\n \n\t static getDataURL( image ) {\n \n\t\t if ( /^data:/i.test( image.src ) ) {\n \n\t\t\t return image.src;\n \n\t\t }\n \n\t\t if ( typeof HTMLCanvasElement == 'undefined' ) {\n \n\t\t\t return image.src;\n \n\t\t }\n \n\t\t let canvas;\n \n\t\t if ( image instanceof HTMLCanvasElement ) {\n \n\t\t\t canvas = image;\n \n\t\t } else {\n \n\t\t\t if ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n \n\t\t\t _canvas.width = image.width;\n\t\t\t _canvas.height = image.height;\n \n\t\t\t const context = _canvas.getContext( '2d' );\n \n\t\t\t if ( image instanceof ImageData ) {\n \n\t\t\t\t context.putImageData( image, 0, 0 );\n \n\t\t\t } else {\n \n\t\t\t\t context.drawImage( image, 0, 0, image.width, image.height );\n \n\t\t\t }\n \n\t\t\t canvas = _canvas;\n \n\t\t }\n \n\t\t if ( canvas.width > 2048 || canvas.height > 2048 ) {\n \n\t\t\t console.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n \n\t\t\t return canvas.toDataURL( 'image/jpeg', 0.6 );\n \n\t\t } else {\n \n\t\t\t return canvas.toDataURL( 'image/png' );\n \n\t\t }\n \n\t }\n \n }\n \n let textureId = 0;\n \n class Texture extends EventDispatcher {\n \n\t constructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n \n\t\t super();\n \n\t\t Object.defineProperty( this, 'id', { value: textureId ++ } );\n \n\t\t this.uuid = generateUUID();\n \n\t\t this.name = '';\n \n\t\t this.image = image;\n\t\t this.mipmaps = [];\n \n\t\t this.mapping = mapping;\n \n\t\t this.wrapS = wrapS;\n\t\t this.wrapT = wrapT;\n \n\t\t this.magFilter = magFilter;\n\t\t this.minFilter = minFilter;\n \n\t\t this.anisotropy = anisotropy;\n \n\t\t this.format = format;\n\t\t this.internalFormat = null;\n\t\t this.type = type;\n \n\t\t this.offset = new Vector2( 0, 0 );\n\t\t this.repeat = new Vector2( 1, 1 );\n\t\t this.center = new Vector2( 0, 0 );\n\t\t this.rotation = 0;\n \n\t\t this.matrixAutoUpdate = true;\n\t\t this.matrix = new Matrix3();\n \n\t\t this.generateMipmaps = true;\n\t\t this.premultiplyAlpha = false;\n\t\t this.flipY = true;\n\t\t this.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n \n\t\t // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t //\n\t\t // Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\t this.encoding = encoding;\n \n\t\t this.version = 0;\n\t\t this.onUpdate = null;\n \n\t }\n \n\t updateMatrix() {\n \n\t\t this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.name = source.name;\n \n\t\t this.image = source.image;\n\t\t this.mipmaps = source.mipmaps.slice( 0 );\n \n\t\t this.mapping = source.mapping;\n \n\t\t this.wrapS = source.wrapS;\n\t\t this.wrapT = source.wrapT;\n \n\t\t this.magFilter = source.magFilter;\n\t\t this.minFilter = source.minFilter;\n \n\t\t this.anisotropy = source.anisotropy;\n \n\t\t this.format = source.format;\n\t\t this.internalFormat = source.internalFormat;\n\t\t this.type = source.type;\n \n\t\t this.offset.copy( source.offset );\n\t\t this.repeat.copy( source.repeat );\n\t\t this.center.copy( source.center );\n\t\t this.rotation = source.rotation;\n \n\t\t this.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t this.matrix.copy( source.matrix );\n \n\t\t this.generateMipmaps = source.generateMipmaps;\n\t\t this.premultiplyAlpha = source.premultiplyAlpha;\n\t\t this.flipY = source.flipY;\n\t\t this.unpackAlignment = source.unpackAlignment;\n\t\t this.encoding = source.encoding;\n \n\t\t return this;\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const isRootObject = ( meta === undefined || typeof meta === 'string' );\n \n\t\t if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n \n\t\t\t return meta.textures[ this.uuid ];\n \n\t\t }\n \n\t\t const output = {\n \n\t\t\t metadata: {\n\t\t\t\t version: 4.5,\n\t\t\t\t type: 'Texture',\n\t\t\t\t generator: 'Texture.toJSON'\n\t\t\t },\n \n\t\t\t uuid: this.uuid,\n\t\t\t name: this.name,\n \n\t\t\t mapping: this.mapping,\n \n\t\t\t repeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t offset: [ this.offset.x, this.offset.y ],\n\t\t\t center: [ this.center.x, this.center.y ],\n\t\t\t rotation: this.rotation,\n \n\t\t\t wrap: [ this.wrapS, this.wrapT ],\n \n\t\t\t format: this.format,\n\t\t\t type: this.type,\n\t\t\t encoding: this.encoding,\n \n\t\t\t minFilter: this.minFilter,\n\t\t\t magFilter: this.magFilter,\n\t\t\t anisotropy: this.anisotropy,\n \n\t\t\t flipY: this.flipY,\n \n\t\t\t premultiplyAlpha: this.premultiplyAlpha,\n\t\t\t unpackAlignment: this.unpackAlignment\n \n\t\t };\n \n\t\t if ( this.image !== undefined ) {\n \n\t\t\t // TODO: Move to THREE.Image\n \n\t\t\t const image = this.image;\n \n\t\t\t if ( image.uuid === undefined ) {\n \n\t\t\t\t image.uuid = generateUUID(); // UGH\n \n\t\t\t }\n \n\t\t\t if ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n \n\t\t\t\t let url;\n \n\t\t\t\t if ( Array.isArray( image ) ) {\n \n\t\t\t\t\t // process array of images e.g. CubeTexture\n \n\t\t\t\t\t url = [];\n \n\t\t\t\t\t for ( let i = 0, l = image.length; i < l; i ++ ) {\n \n\t\t\t\t\t\t // check cube texture with data textures\n \n\t\t\t\t\t\t if ( image[ i ].isDataTexture ) {\n \n\t\t\t\t\t\t\t url.push( serializeImage( image[ i ].image ) );\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t url.push( serializeImage( image[ i ] ) );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // process single image\n \n\t\t\t\t\t url = serializeImage( image );\n \n\t\t\t\t }\n \n\t\t\t\t meta.images[ image.uuid ] = {\n\t\t\t\t\t uuid: image.uuid,\n\t\t\t\t\t url: url\n\t\t\t\t };\n \n\t\t\t }\n \n\t\t\t output.image = image.uuid;\n \n\t\t }\n \n\t\t if ( ! isRootObject ) {\n \n\t\t\t meta.textures[ this.uuid ] = output;\n \n\t\t }\n \n\t\t return output;\n \n\t }\n \n\t dispose() {\n \n\t\t this.dispatchEvent( { type: 'dispose' } );\n \n\t }\n \n\t transformUv( uv ) {\n \n\t\t if ( this.mapping !== UVMapping ) return uv;\n \n\t\t uv.applyMatrix3( this.matrix );\n \n\t\t if ( uv.x < 0 || uv.x > 1 ) {\n \n\t\t\t switch ( this.wrapS ) {\n \n\t\t\t\t case RepeatWrapping:\n \n\t\t\t\t\t uv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t break;\n \n\t\t\t\t case ClampToEdgeWrapping:\n \n\t\t\t\t\t uv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t break;\n \n\t\t\t\t case MirroredRepeatWrapping:\n \n\t\t\t\t\t if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n \n\t\t\t\t\t\t uv.x = Math.ceil( uv.x ) - uv.x;\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t uv.x = uv.x - Math.floor( uv.x );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t break;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( uv.y < 0 || uv.y > 1 ) {\n \n\t\t\t switch ( this.wrapT ) {\n \n\t\t\t\t case RepeatWrapping:\n \n\t\t\t\t\t uv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t break;\n \n\t\t\t\t case ClampToEdgeWrapping:\n \n\t\t\t\t\t uv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t break;\n \n\t\t\t\t case MirroredRepeatWrapping:\n \n\t\t\t\t\t if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n \n\t\t\t\t\t\t uv.y = Math.ceil( uv.y ) - uv.y;\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t uv.y = uv.y - Math.floor( uv.y );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t break;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( this.flipY ) {\n \n\t\t\t uv.y = 1 - uv.y;\n \n\t\t }\n \n\t\t return uv;\n \n\t }\n \n\t set needsUpdate( value ) {\n \n\t\t if ( value === true ) this.version ++;\n \n\t }\n \n }\n \n Texture.DEFAULT_IMAGE = undefined;\n Texture.DEFAULT_MAPPING = UVMapping;\n \n Texture.prototype.isTexture = true;\n \n function serializeImage( image ) {\n \n\t if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n \n\t\t // default images\n \n\t\t return ImageUtils.getDataURL( image );\n \n\t } else {\n \n\t\t if ( image.data ) {\n \n\t\t\t // images of DataTexture\n \n\t\t\t return {\n\t\t\t\t data: Array.prototype.slice.call( image.data ),\n\t\t\t\t width: image.width,\n\t\t\t\t height: image.height,\n\t\t\t\t type: image.data.constructor.name\n\t\t\t };\n \n\t\t } else {\n \n\t\t\t console.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\t return {};\n \n\t\t }\n \n\t }\n \n }\n \n class Vector4 {\n \n\t constructor( x = 0, y = 0, z = 0, w = 1 ) {\n \n\t\t this.x = x;\n\t\t this.y = y;\n\t\t this.z = z;\n\t\t this.w = w;\n \n\t }\n \n\t get width() {\n \n\t\t return this.z;\n \n\t }\n \n\t set width( value ) {\n \n\t\t this.z = value;\n \n\t }\n \n\t get height() {\n \n\t\t return this.w;\n \n\t }\n \n\t set height( value ) {\n \n\t\t this.w = value;\n \n\t }\n \n\t set( x, y, z, w ) {\n \n\t\t this.x = x;\n\t\t this.y = y;\n\t\t this.z = z;\n\t\t this.w = w;\n \n\t\t return this;\n \n\t }\n \n\t setScalar( scalar ) {\n \n\t\t this.x = scalar;\n\t\t this.y = scalar;\n\t\t this.z = scalar;\n\t\t this.w = scalar;\n \n\t\t return this;\n \n\t }\n \n\t setX( x ) {\n \n\t\t this.x = x;\n \n\t\t return this;\n \n\t }\n \n\t setY( y ) {\n \n\t\t this.y = y;\n \n\t\t return this;\n \n\t }\n \n\t setZ( z ) {\n \n\t\t this.z = z;\n \n\t\t return this;\n \n\t }\n \n\t setW( w ) {\n \n\t\t this.w = w;\n \n\t\t return this;\n \n\t }\n \n\t setComponent( index, value ) {\n \n\t\t switch ( index ) {\n \n\t\t\t case 0: this.x = value; break;\n\t\t\t case 1: this.y = value; break;\n\t\t\t case 2: this.z = value; break;\n\t\t\t case 3: this.w = value; break;\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t getComponent( index ) {\n \n\t\t switch ( index ) {\n \n\t\t\t case 0: return this.x;\n\t\t\t case 1: return this.y;\n\t\t\t case 2: return this.z;\n\t\t\t case 3: return this.w;\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\n \n\t\t }\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this.x, this.y, this.z, this.w );\n \n\t }\n \n\t copy( v ) {\n \n\t\t this.x = v.x;\n\t\t this.y = v.y;\n\t\t this.z = v.z;\n\t\t this.w = ( v.w !== undefined ) ? v.w : 1;\n \n\t\t return this;\n \n\t }\n \n\t add( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t return this.addVectors( v, w );\n \n\t\t }\n \n\t\t this.x += v.x;\n\t\t this.y += v.y;\n\t\t this.z += v.z;\n\t\t this.w += v.w;\n \n\t\t return this;\n \n\t }\n \n\t addScalar( s ) {\n \n\t\t this.x += s;\n\t\t this.y += s;\n\t\t this.z += s;\n\t\t this.w += s;\n \n\t\t return this;\n \n\t }\n \n\t addVectors( a, b ) {\n \n\t\t this.x = a.x + b.x;\n\t\t this.y = a.y + b.y;\n\t\t this.z = a.z + b.z;\n\t\t this.w = a.w + b.w;\n \n\t\t return this;\n \n\t }\n \n\t addScaledVector( v, s ) {\n \n\t\t this.x += v.x * s;\n\t\t this.y += v.y * s;\n\t\t this.z += v.z * s;\n\t\t this.w += v.w * s;\n \n\t\t return this;\n \n\t }\n \n\t sub( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t return this.subVectors( v, w );\n \n\t\t }\n \n\t\t this.x -= v.x;\n\t\t this.y -= v.y;\n\t\t this.z -= v.z;\n\t\t this.w -= v.w;\n \n\t\t return this;\n \n\t }\n \n\t subScalar( s ) {\n \n\t\t this.x -= s;\n\t\t this.y -= s;\n\t\t this.z -= s;\n\t\t this.w -= s;\n \n\t\t return this;\n \n\t }\n \n\t subVectors( a, b ) {\n \n\t\t this.x = a.x - b.x;\n\t\t this.y = a.y - b.y;\n\t\t this.z = a.z - b.z;\n\t\t this.w = a.w - b.w;\n \n\t\t return this;\n \n\t }\n \n\t multiply( v ) {\n \n\t\t this.x *= v.x;\n\t\t this.y *= v.y;\n\t\t this.z *= v.z;\n\t\t this.w *= v.w;\n \n\t\t return this;\n \n\t }\n \n\t multiplyScalar( scalar ) {\n \n\t\t this.x *= scalar;\n\t\t this.y *= scalar;\n\t\t this.z *= scalar;\n\t\t this.w *= scalar;\n \n\t\t return this;\n \n\t }\n \n\t applyMatrix4( m ) {\n \n\t\t const x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t const e = m.elements;\n \n\t\t this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n \n\t\t return this;\n \n\t }\n \n\t divideScalar( scalar ) {\n \n\t\t return this.multiplyScalar( 1 / scalar );\n \n\t }\n \n\t setAxisAngleFromQuaternion( q ) {\n \n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n \n\t\t // q is assumed to be normalized\n \n\t\t this.w = 2 * Math.acos( q.w );\n \n\t\t const s = Math.sqrt( 1 - q.w * q.w );\n \n\t\t if ( s < 0.0001 ) {\n \n\t\t\t this.x = 1;\n\t\t\t this.y = 0;\n\t\t\t this.z = 0;\n \n\t\t } else {\n \n\t\t\t this.x = q.x / s;\n\t\t\t this.y = q.y / s;\n\t\t\t this.z = q.z / s;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setAxisAngleFromRotationMatrix( m ) {\n \n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n \n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n\t\t let angle, x, y, z; // variables for result\n\t\t const epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t epsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n \n\t\t\t te = m.elements,\n \n\t\t\t m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n \n\t\t if ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t  ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t  ( Math.abs( m23 - m32 ) < epsilon ) ) {\n \n\t\t\t // singularity found\n\t\t\t // first check for identity matrix which must have +1 for all terms\n\t\t\t // in leading diagonal and zero in other terms\n \n\t\t\t if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t  ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t  ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t  ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n \n\t\t\t\t // this singularity is identity matrix so angle = 0\n \n\t\t\t\t this.set( 1, 0, 0, 0 );\n \n\t\t\t\t return this; // zero angle, arbitrary axis\n \n\t\t\t }\n \n\t\t\t // otherwise this singularity is angle = 180\n \n\t\t\t angle = Math.PI;\n \n\t\t\t const xx = ( m11 + 1 ) / 2;\n\t\t\t const yy = ( m22 + 1 ) / 2;\n\t\t\t const zz = ( m33 + 1 ) / 2;\n\t\t\t const xy = ( m12 + m21 ) / 4;\n\t\t\t const xz = ( m13 + m31 ) / 4;\n\t\t\t const yz = ( m23 + m32 ) / 4;\n \n\t\t\t if ( ( xx > yy ) && ( xx > zz ) ) {\n \n\t\t\t\t // m11 is the largest diagonal term\n \n\t\t\t\t if ( xx < epsilon ) {\n \n\t\t\t\t\t x = 0;\n\t\t\t\t\t y = 0.707106781;\n\t\t\t\t\t z = 0.707106781;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t x = Math.sqrt( xx );\n\t\t\t\t\t y = xy / x;\n\t\t\t\t\t z = xz / x;\n \n\t\t\t\t }\n \n\t\t\t } else if ( yy > zz ) {\n \n\t\t\t\t // m22 is the largest diagonal term\n \n\t\t\t\t if ( yy < epsilon ) {\n \n\t\t\t\t\t x = 0.707106781;\n\t\t\t\t\t y = 0;\n\t\t\t\t\t z = 0.707106781;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t y = Math.sqrt( yy );\n\t\t\t\t\t x = xy / y;\n\t\t\t\t\t z = yz / y;\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t // m33 is the largest diagonal term so base result on this\n \n\t\t\t\t if ( zz < epsilon ) {\n \n\t\t\t\t\t x = 0.707106781;\n\t\t\t\t\t y = 0.707106781;\n\t\t\t\t\t z = 0;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t z = Math.sqrt( zz );\n\t\t\t\t\t x = xz / z;\n\t\t\t\t\t y = yz / z;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t this.set( x, y, z, angle );\n \n\t\t\t return this; // return 180 deg rotation\n \n\t\t }\n \n\t\t // as we have reached here there are no singularities so we can handle normally\n \n\t\t let s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n \n\t\t if ( Math.abs( s ) < 0.001 ) s = 1;\n \n\t\t // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t // caught by singularity test above, but I've left it in just in case\n \n\t\t this.x = ( m32 - m23 ) / s;\n\t\t this.y = ( m13 - m31 ) / s;\n\t\t this.z = ( m21 - m12 ) / s;\n\t\t this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n \n\t\t return this;\n \n\t }\n \n\t min( v ) {\n \n\t\t this.x = Math.min( this.x, v.x );\n\t\t this.y = Math.min( this.y, v.y );\n\t\t this.z = Math.min( this.z, v.z );\n\t\t this.w = Math.min( this.w, v.w );\n \n\t\t return this;\n \n\t }\n \n\t max( v ) {\n \n\t\t this.x = Math.max( this.x, v.x );\n\t\t this.y = Math.max( this.y, v.y );\n\t\t this.z = Math.max( this.z, v.z );\n\t\t this.w = Math.max( this.w, v.w );\n \n\t\t return this;\n \n\t }\n \n\t clamp( min, max ) {\n \n\t\t // assumes min < max, componentwise\n \n\t\t this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t this.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t this.w = Math.max( min.w, Math.min( max.w, this.w ) );\n \n\t\t return this;\n \n\t }\n \n\t clampScalar( minVal, maxVal ) {\n \n\t\t this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t this.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\t this.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n \n\t\t return this;\n \n\t }\n \n\t clampLength( min, max ) {\n \n\t\t const length = this.length();\n \n\t\t return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n \n\t }\n \n\t floor() {\n \n\t\t this.x = Math.floor( this.x );\n\t\t this.y = Math.floor( this.y );\n\t\t this.z = Math.floor( this.z );\n\t\t this.w = Math.floor( this.w );\n \n\t\t return this;\n \n\t }\n \n\t ceil() {\n \n\t\t this.x = Math.ceil( this.x );\n\t\t this.y = Math.ceil( this.y );\n\t\t this.z = Math.ceil( this.z );\n\t\t this.w = Math.ceil( this.w );\n \n\t\t return this;\n \n\t }\n \n\t round() {\n \n\t\t this.x = Math.round( this.x );\n\t\t this.y = Math.round( this.y );\n\t\t this.z = Math.round( this.z );\n\t\t this.w = Math.round( this.w );\n \n\t\t return this;\n \n\t }\n \n\t roundToZero() {\n \n\t\t this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n \n\t\t return this;\n \n\t }\n \n\t negate() {\n \n\t\t this.x = - this.x;\n\t\t this.y = - this.y;\n\t\t this.z = - this.z;\n\t\t this.w = - this.w;\n \n\t\t return this;\n \n\t }\n \n\t dot( v ) {\n \n\t\t return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n \n\t }\n \n\t lengthSq() {\n \n\t\t return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n \n\t }\n \n\t length() {\n \n\t\t return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n \n\t }\n \n\t manhattanLength() {\n \n\t\t return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n \n\t }\n \n\t normalize() {\n \n\t\t return this.divideScalar( this.length() || 1 );\n \n\t }\n \n\t setLength( length ) {\n \n\t\t return this.normalize().multiplyScalar( length );\n \n\t }\n \n\t lerp( v, alpha ) {\n \n\t\t this.x += ( v.x - this.x ) * alpha;\n\t\t this.y += ( v.y - this.y ) * alpha;\n\t\t this.z += ( v.z - this.z ) * alpha;\n\t\t this.w += ( v.w - this.w ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t lerpVectors( v1, v2, alpha ) {\n \n\t\t this.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t this.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t this.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\t this.w = v1.w + ( v2.w - v1.w ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t equals( v ) {\n \n\t\t return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t this.x = array[ offset ];\n\t\t this.y = array[ offset + 1 ];\n\t\t this.z = array[ offset + 2 ];\n\t\t this.w = array[ offset + 3 ];\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t array[ offset ] = this.x;\n\t\t array[ offset + 1 ] = this.y;\n\t\t array[ offset + 2 ] = this.z;\n\t\t array[ offset + 3 ] = this.w;\n \n\t\t return array;\n \n\t }\n \n\t fromBufferAttribute( attribute, index, offset ) {\n \n\t\t if ( offset !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n \n\t\t }\n \n\t\t this.x = attribute.getX( index );\n\t\t this.y = attribute.getY( index );\n\t\t this.z = attribute.getZ( index );\n\t\t this.w = attribute.getW( index );\n \n\t\t return this;\n \n\t }\n \n\t random() {\n \n\t\t this.x = Math.random();\n\t\t this.y = Math.random();\n\t\t this.z = Math.random();\n\t\t this.w = Math.random();\n \n\t\t return this;\n \n\t }\n \n }\n \n Vector4.prototype.isVector4 = true;\n \n /*\n  In options, we can specify:\n  * Texture parameters for an auto-generated target texture\n  * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n */\n class WebGLRenderTarget extends EventDispatcher {\n \n\t constructor( width, height, options = {} ) {\n \n\t\t super();\n \n\t\t this.width = width;\n\t\t this.height = height;\n\t\t this.depth = 1;\n \n\t\t this.scissor = new Vector4( 0, 0, width, height );\n\t\t this.scissorTest = false;\n \n\t\t this.viewport = new Vector4( 0, 0, width, height );\n \n\t\t this.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n \n\t\t this.texture.image = { width: width, height: height, depth: 1 };\n \n\t\t this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n \n\t\t this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n \n\t }\n \n\t setTexture( texture ) {\n \n\t\t texture.image = {\n\t\t\t width: this.width,\n\t\t\t height: this.height,\n\t\t\t depth: this.depth\n\t\t };\n \n\t\t this.texture = texture;\n \n\t }\n \n\t setSize( width, height, depth = 1 ) {\n \n\t\t if ( this.width !== width || this.height !== height || this.depth !== depth ) {\n \n\t\t\t this.width = width;\n\t\t\t this.height = height;\n\t\t\t this.depth = depth;\n \n\t\t\t this.texture.image.width = width;\n\t\t\t this.texture.image.height = height;\n\t\t\t this.texture.image.depth = depth;\n \n\t\t\t this.dispose();\n \n\t\t }\n \n\t\t this.viewport.set( 0, 0, width, height );\n\t\t this.scissor.set( 0, 0, width, height );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.width = source.width;\n\t\t this.height = source.height;\n\t\t this.depth = source.depth;\n \n\t\t this.viewport.copy( source.viewport );\n \n\t\t this.texture = source.texture.clone();\n\t\t this.texture.image = { ...this.texture.image }; // See #20328.\n \n\t\t this.depthBuffer = source.depthBuffer;\n\t\t this.stencilBuffer = source.stencilBuffer;\n\t\t this.depthTexture = source.depthTexture;\n \n\t\t return this;\n \n\t }\n \n\t dispose() {\n \n\t\t this.dispatchEvent( { type: 'dispose' } );\n \n\t }\n \n }\n \n WebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n \n class WebGLMultipleRenderTargets extends WebGLRenderTarget {\n \n\t constructor( width, height, count ) {\n \n\t\t super( width, height );\n \n\t\t const texture = this.texture;\n \n\t\t this.texture = [];\n \n\t\t for ( let i = 0; i < count; i ++ ) {\n \n\t\t\t this.texture[ i ] = texture.clone();\n \n\t\t }\n \n\t }\n \n\t setSize( width, height, depth = 1 ) {\n \n\t\t if ( this.width !== width || this.height !== height || this.depth !== depth ) {\n \n\t\t\t this.width = width;\n\t\t\t this.height = height;\n\t\t\t this.depth = depth;\n \n\t\t\t for ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n \n\t\t\t\t this.texture[ i ].image.width = width;\n\t\t\t\t this.texture[ i ].image.height = height;\n\t\t\t\t this.texture[ i ].image.depth = depth;\n \n\t\t\t }\n \n\t\t\t this.dispose();\n \n\t\t }\n \n\t\t this.viewport.set( 0, 0, width, height );\n\t\t this.scissor.set( 0, 0, width, height );\n \n\t\t return this;\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.dispose();\n \n\t\t this.width = source.width;\n\t\t this.height = source.height;\n\t\t this.depth = source.depth;\n \n\t\t this.viewport.set( 0, 0, this.width, this.height );\n\t\t this.scissor.set( 0, 0, this.width, this.height );\n \n\t\t this.depthBuffer = source.depthBuffer;\n\t\t this.stencilBuffer = source.stencilBuffer;\n\t\t this.depthTexture = source.depthTexture;\n \n\t\t this.texture.length = 0;\n \n\t\t for ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n \n\t\t\t this.texture[ i ] = source.texture[ i ].clone();\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n }\n \n WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n \n class WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n \n\t constructor( width, height, options ) {\n \n\t\t super( width, height, options );\n \n\t\t this.samples = 4;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy.call( this, source );\n \n\t\t this.samples = source.samples;\n \n\t\t return this;\n \n\t }\n \n }\n \n WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n \n class Quaternion {\n \n\t constructor( x = 0, y = 0, z = 0, w = 1 ) {\n \n\t\t this._x = x;\n\t\t this._y = y;\n\t\t this._z = z;\n\t\t this._w = w;\n \n\t }\n \n\t static slerp( qa, qb, qm, t ) {\n \n\t\t console.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\t return qm.slerpQuaternions( qa, qb, t );\n \n\t }\n \n\t static slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n \n\t\t // fuzz-free, array-based Quaternion SLERP operation\n \n\t\t let x0 = src0[ srcOffset0 + 0 ],\n\t\t\t y0 = src0[ srcOffset0 + 1 ],\n\t\t\t z0 = src0[ srcOffset0 + 2 ],\n\t\t\t w0 = src0[ srcOffset0 + 3 ];\n \n\t\t const x1 = src1[ srcOffset1 + 0 ],\n\t\t\t y1 = src1[ srcOffset1 + 1 ],\n\t\t\t z1 = src1[ srcOffset1 + 2 ],\n\t\t\t w1 = src1[ srcOffset1 + 3 ];\n \n\t\t if ( t === 0 ) {\n \n\t\t\t dst[ dstOffset + 0 ] = x0;\n\t\t\t dst[ dstOffset + 1 ] = y0;\n\t\t\t dst[ dstOffset + 2 ] = z0;\n\t\t\t dst[ dstOffset + 3 ] = w0;\n\t\t\t return;\n \n\t\t }\n \n\t\t if ( t === 1 ) {\n \n\t\t\t dst[ dstOffset + 0 ] = x1;\n\t\t\t dst[ dstOffset + 1 ] = y1;\n\t\t\t dst[ dstOffset + 2 ] = z1;\n\t\t\t dst[ dstOffset + 3 ] = w1;\n\t\t\t return;\n \n\t\t }\n \n\t\t if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n \n\t\t\t let s = 1 - t;\n\t\t\t const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t dir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t sqrSin = 1 - cos * cos;\n \n\t\t\t // Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t if ( sqrSin > Number.EPSILON ) {\n \n\t\t\t\t const sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t len = Math.atan2( sin, cos * dir );\n \n\t\t\t\t s = Math.sin( s * len ) / sin;\n\t\t\t\t t = Math.sin( t * len ) / sin;\n \n\t\t\t }\n \n\t\t\t const tDir = t * dir;\n \n\t\t\t x0 = x0 * s + x1 * tDir;\n\t\t\t y0 = y0 * s + y1 * tDir;\n\t\t\t z0 = z0 * s + z1 * tDir;\n\t\t\t w0 = w0 * s + w1 * tDir;\n \n\t\t\t // Normalize in case we just did a lerp:\n\t\t\t if ( s === 1 - t ) {\n \n\t\t\t\t const f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n \n\t\t\t\t x0 *= f;\n\t\t\t\t y0 *= f;\n\t\t\t\t z0 *= f;\n\t\t\t\t w0 *= f;\n \n\t\t\t }\n \n\t\t }\n \n\t\t dst[ dstOffset ] = x0;\n\t\t dst[ dstOffset + 1 ] = y0;\n\t\t dst[ dstOffset + 2 ] = z0;\n\t\t dst[ dstOffset + 3 ] = w0;\n \n\t }\n \n\t static multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n \n\t\t const x0 = src0[ srcOffset0 ];\n\t\t const y0 = src0[ srcOffset0 + 1 ];\n\t\t const z0 = src0[ srcOffset0 + 2 ];\n\t\t const w0 = src0[ srcOffset0 + 3 ];\n \n\t\t const x1 = src1[ srcOffset1 ];\n\t\t const y1 = src1[ srcOffset1 + 1 ];\n\t\t const z1 = src1[ srcOffset1 + 2 ];\n\t\t const w1 = src1[ srcOffset1 + 3 ];\n \n\t\t dst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t dst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t dst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t dst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n \n\t\t return dst;\n \n\t }\n \n\t get x() {\n \n\t\t return this._x;\n \n\t }\n \n\t set x( value ) {\n \n\t\t this._x = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t get y() {\n \n\t\t return this._y;\n \n\t }\n \n\t set y( value ) {\n \n\t\t this._y = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t get z() {\n \n\t\t return this._z;\n \n\t }\n \n\t set z( value ) {\n \n\t\t this._z = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t get w() {\n \n\t\t return this._w;\n \n\t }\n \n\t set w( value ) {\n \n\t\t this._w = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t set( x, y, z, w ) {\n \n\t\t this._x = x;\n\t\t this._y = y;\n\t\t this._z = z;\n\t\t this._w = w;\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this._x, this._y, this._z, this._w );\n \n\t }\n \n\t copy( quaternion ) {\n \n\t\t this._x = quaternion.x;\n\t\t this._y = quaternion.y;\n\t\t this._z = quaternion.z;\n\t\t this._w = quaternion.w;\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t setFromEuler( euler, update ) {\n \n\t\t if ( ! ( euler && euler.isEuler ) ) {\n \n\t\t\t throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n \n\t\t }\n \n\t\t const x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n \n\t\t // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t //\tcontent/SpinCalc.m\n \n\t\t const cos = Math.cos;\n\t\t const sin = Math.sin;\n \n\t\t const c1 = cos( x / 2 );\n\t\t const c2 = cos( y / 2 );\n\t\t const c3 = cos( z / 2 );\n \n\t\t const s1 = sin( x / 2 );\n\t\t const s2 = sin( y / 2 );\n\t\t const s3 = sin( z / 2 );\n \n\t\t switch ( order ) {\n \n\t\t\t case 'XYZ':\n\t\t\t\t this._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t this._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t this._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t break;\n \n\t\t\t case 'YXZ':\n\t\t\t\t this._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t this._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t this._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t break;\n \n\t\t\t case 'ZXY':\n\t\t\t\t this._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t this._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t this._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t break;\n \n\t\t\t case 'ZYX':\n\t\t\t\t this._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t this._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t this._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t break;\n \n\t\t\t case 'YZX':\n\t\t\t\t this._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t this._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t this._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t this._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t break;\n \n\t\t\t case 'XZY':\n\t\t\t\t this._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t this._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t this._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t this._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t break;\n \n\t\t\t default:\n\t\t\t\t console.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n \n\t\t }\n \n\t\t if ( update !== false ) this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t setFromAxisAngle( axis, angle ) {\n \n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n \n\t\t // assumes axis is normalized\n \n\t\t const halfAngle = angle / 2, s = Math.sin( halfAngle );\n \n\t\t this._x = axis.x * s;\n\t\t this._y = axis.y * s;\n\t\t this._z = axis.z * s;\n\t\t this._w = Math.cos( halfAngle );\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t setFromRotationMatrix( m ) {\n \n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n \n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n\t\t const te = m.elements,\n \n\t\t\t m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n \n\t\t\t trace = m11 + m22 + m33;\n \n\t\t if ( trace > 0 ) {\n \n\t\t\t const s = 0.5 / Math.sqrt( trace + 1.0 );\n \n\t\t\t this._w = 0.25 / s;\n\t\t\t this._x = ( m32 - m23 ) * s;\n\t\t\t this._y = ( m13 - m31 ) * s;\n\t\t\t this._z = ( m21 - m12 ) * s;\n \n\t\t } else if ( m11 > m22 && m11 > m33 ) {\n \n\t\t\t const s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n \n\t\t\t this._w = ( m32 - m23 ) / s;\n\t\t\t this._x = 0.25 * s;\n\t\t\t this._y = ( m12 + m21 ) / s;\n\t\t\t this._z = ( m13 + m31 ) / s;\n \n\t\t } else if ( m22 > m33 ) {\n \n\t\t\t const s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n \n\t\t\t this._w = ( m13 - m31 ) / s;\n\t\t\t this._x = ( m12 + m21 ) / s;\n\t\t\t this._y = 0.25 * s;\n\t\t\t this._z = ( m23 + m32 ) / s;\n \n\t\t } else {\n \n\t\t\t const s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n \n\t\t\t this._w = ( m21 - m12 ) / s;\n\t\t\t this._x = ( m13 + m31 ) / s;\n\t\t\t this._y = ( m23 + m32 ) / s;\n\t\t\t this._z = 0.25 * s;\n \n\t\t }\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t setFromUnitVectors( vFrom, vTo ) {\n \n\t\t // assumes direction vectors vFrom and vTo are normalized\n \n\t\t let r = vFrom.dot( vTo ) + 1;\n \n\t\t if ( r < Number.EPSILON ) {\n \n\t\t\t // vFrom and vTo point in opposite directions\n \n\t\t\t r = 0;\n \n\t\t\t if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n \n\t\t\t\t this._x = - vFrom.y;\n\t\t\t\t this._y = vFrom.x;\n\t\t\t\t this._z = 0;\n\t\t\t\t this._w = r;\n \n\t\t\t } else {\n \n\t\t\t\t this._x = 0;\n\t\t\t\t this._y = - vFrom.z;\n\t\t\t\t this._z = vFrom.y;\n\t\t\t\t this._w = r;\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n \n\t\t\t this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t this._w = r;\n \n\t\t }\n \n\t\t return this.normalize();\n \n\t }\n \n\t angleTo( q ) {\n \n\t\t return 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n \n\t }\n \n\t rotateTowards( q, step ) {\n \n\t\t const angle = this.angleTo( q );\n \n\t\t if ( angle === 0 ) return this;\n \n\t\t const t = Math.min( 1, step / angle );\n \n\t\t this.slerp( q, t );\n \n\t\t return this;\n \n\t }\n \n\t identity() {\n \n\t\t return this.set( 0, 0, 0, 1 );\n \n\t }\n \n\t invert() {\n \n\t\t // quaternion is assumed to have unit length\n \n\t\t return this.conjugate();\n \n\t }\n \n\t conjugate() {\n \n\t\t this._x *= - 1;\n\t\t this._y *= - 1;\n\t\t this._z *= - 1;\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t dot( v ) {\n \n\t\t return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n \n\t }\n \n\t lengthSq() {\n \n\t\t return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n \n\t }\n \n\t length() {\n \n\t\t return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n \n\t }\n \n\t normalize() {\n \n\t\t let l = this.length();\n \n\t\t if ( l === 0 ) {\n \n\t\t\t this._x = 0;\n\t\t\t this._y = 0;\n\t\t\t this._z = 0;\n\t\t\t this._w = 1;\n \n\t\t } else {\n \n\t\t\t l = 1 / l;\n \n\t\t\t this._x = this._x * l;\n\t\t\t this._y = this._y * l;\n\t\t\t this._z = this._z * l;\n\t\t\t this._w = this._w * l;\n \n\t\t }\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t multiply( q, p ) {\n \n\t\t if ( p !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t return this.multiplyQuaternions( q, p );\n \n\t\t }\n \n\t\t return this.multiplyQuaternions( this, q );\n \n\t }\n \n\t premultiply( q ) {\n \n\t\t return this.multiplyQuaternions( q, this );\n \n\t }\n \n\t multiplyQuaternions( a, b ) {\n \n\t\t // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n \n\t\t const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n \n\t\t this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t slerp( qb, t ) {\n \n\t\t if ( t === 0 ) return this;\n\t\t if ( t === 1 ) return this.copy( qb );\n \n\t\t const x = this._x, y = this._y, z = this._z, w = this._w;\n \n\t\t // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n \n\t\t let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n \n\t\t if ( cosHalfTheta < 0 ) {\n \n\t\t\t this._w = - qb._w;\n\t\t\t this._x = - qb._x;\n\t\t\t this._y = - qb._y;\n\t\t\t this._z = - qb._z;\n \n\t\t\t cosHalfTheta = - cosHalfTheta;\n \n\t\t } else {\n \n\t\t\t this.copy( qb );\n \n\t\t }\n \n\t\t if ( cosHalfTheta >= 1.0 ) {\n \n\t\t\t this._w = w;\n\t\t\t this._x = x;\n\t\t\t this._y = y;\n\t\t\t this._z = z;\n \n\t\t\t return this;\n \n\t\t }\n \n\t\t const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n \n\t\t if ( sqrSinHalfTheta <= Number.EPSILON ) {\n \n\t\t\t const s = 1 - t;\n\t\t\t this._w = s * w + t * this._w;\n\t\t\t this._x = s * x + t * this._x;\n\t\t\t this._y = s * y + t * this._y;\n\t\t\t this._z = s * z + t * this._z;\n \n\t\t\t this.normalize();\n\t\t\t this._onChangeCallback();\n \n\t\t\t return this;\n \n\t\t }\n \n\t\t const sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t const halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t const ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n \n\t\t this._w = ( w * ratioA + this._w * ratioB );\n\t\t this._x = ( x * ratioA + this._x * ratioB );\n\t\t this._y = ( y * ratioA + this._y * ratioB );\n\t\t this._z = ( z * ratioA + this._z * ratioB );\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t slerpQuaternions( qa, qb, t ) {\n \n\t\t this.copy( qa ).slerp( qb, t );\n \n\t }\n \n\t equals( quaternion ) {\n \n\t\t return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t this._x = array[ offset ];\n\t\t this._y = array[ offset + 1 ];\n\t\t this._z = array[ offset + 2 ];\n\t\t this._w = array[ offset + 3 ];\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t array[ offset ] = this._x;\n\t\t array[ offset + 1 ] = this._y;\n\t\t array[ offset + 2 ] = this._z;\n\t\t array[ offset + 3 ] = this._w;\n \n\t\t return array;\n \n\t }\n \n\t fromBufferAttribute( attribute, index ) {\n \n\t\t this._x = attribute.getX( index );\n\t\t this._y = attribute.getY( index );\n\t\t this._z = attribute.getZ( index );\n\t\t this._w = attribute.getW( index );\n \n\t\t return this;\n \n\t }\n \n\t _onChange( callback ) {\n \n\t\t this._onChangeCallback = callback;\n \n\t\t return this;\n \n\t }\n \n\t _onChangeCallback() {}\n \n }\n \n Quaternion.prototype.isQuaternion = true;\n \n class Vector3 {\n \n\t constructor( x = 0, y = 0, z = 0 ) {\n \n\t\t this.x = x;\n\t\t this.y = y;\n\t\t this.z = z;\n \n\t }\n \n\t set( x, y, z ) {\n \n\t\t if ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n \n\t\t this.x = x;\n\t\t this.y = y;\n\t\t this.z = z;\n \n\t\t return this;\n \n\t }\n \n\t setScalar( scalar ) {\n \n\t\t this.x = scalar;\n\t\t this.y = scalar;\n\t\t this.z = scalar;\n \n\t\t return this;\n \n\t }\n \n\t setX( x ) {\n \n\t\t this.x = x;\n \n\t\t return this;\n \n\t }\n \n\t setY( y ) {\n \n\t\t this.y = y;\n \n\t\t return this;\n \n\t }\n \n\t setZ( z ) {\n \n\t\t this.z = z;\n \n\t\t return this;\n \n\t }\n \n\t setComponent( index, value ) {\n \n\t\t switch ( index ) {\n \n\t\t\t case 0: this.x = value; break;\n\t\t\t case 1: this.y = value; break;\n\t\t\t case 2: this.z = value; break;\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t getComponent( index ) {\n \n\t\t switch ( index ) {\n \n\t\t\t case 0: return this.x;\n\t\t\t case 1: return this.y;\n\t\t\t case 2: return this.z;\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\n \n\t\t }\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this.x, this.y, this.z );\n \n\t }\n \n\t copy( v ) {\n \n\t\t this.x = v.x;\n\t\t this.y = v.y;\n\t\t this.z = v.z;\n \n\t\t return this;\n \n\t }\n \n\t add( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t return this.addVectors( v, w );\n \n\t\t }\n \n\t\t this.x += v.x;\n\t\t this.y += v.y;\n\t\t this.z += v.z;\n \n\t\t return this;\n \n\t }\n \n\t addScalar( s ) {\n \n\t\t this.x += s;\n\t\t this.y += s;\n\t\t this.z += s;\n \n\t\t return this;\n \n\t }\n \n\t addVectors( a, b ) {\n \n\t\t this.x = a.x + b.x;\n\t\t this.y = a.y + b.y;\n\t\t this.z = a.z + b.z;\n \n\t\t return this;\n \n\t }\n \n\t addScaledVector( v, s ) {\n \n\t\t this.x += v.x * s;\n\t\t this.y += v.y * s;\n\t\t this.z += v.z * s;\n \n\t\t return this;\n \n\t }\n \n\t sub( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t return this.subVectors( v, w );\n \n\t\t }\n \n\t\t this.x -= v.x;\n\t\t this.y -= v.y;\n\t\t this.z -= v.z;\n \n\t\t return this;\n \n\t }\n \n\t subScalar( s ) {\n \n\t\t this.x -= s;\n\t\t this.y -= s;\n\t\t this.z -= s;\n \n\t\t return this;\n \n\t }\n \n\t subVectors( a, b ) {\n \n\t\t this.x = a.x - b.x;\n\t\t this.y = a.y - b.y;\n\t\t this.z = a.z - b.z;\n \n\t\t return this;\n \n\t }\n \n\t multiply( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t return this.multiplyVectors( v, w );\n \n\t\t }\n \n\t\t this.x *= v.x;\n\t\t this.y *= v.y;\n\t\t this.z *= v.z;\n \n\t\t return this;\n \n\t }\n \n\t multiplyScalar( scalar ) {\n \n\t\t this.x *= scalar;\n\t\t this.y *= scalar;\n\t\t this.z *= scalar;\n \n\t\t return this;\n \n\t }\n \n\t multiplyVectors( a, b ) {\n \n\t\t this.x = a.x * b.x;\n\t\t this.y = a.y * b.y;\n\t\t this.z = a.z * b.z;\n \n\t\t return this;\n \n\t }\n \n\t applyEuler( euler ) {\n \n\t\t if ( ! ( euler && euler.isEuler ) ) {\n \n\t\t\t console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n \n\t\t }\n \n\t\t return this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n \n\t }\n \n\t applyAxisAngle( axis, angle ) {\n \n\t\t return this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n \n\t }\n \n\t applyMatrix3( m ) {\n \n\t\t const x = this.x, y = this.y, z = this.z;\n\t\t const e = m.elements;\n \n\t\t this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n \n\t\t return this;\n \n\t }\n \n\t applyNormalMatrix( m ) {\n \n\t\t return this.applyMatrix3( m ).normalize();\n \n\t }\n \n\t applyMatrix4( m ) {\n \n\t\t const x = this.x, y = this.y, z = this.z;\n\t\t const e = m.elements;\n \n\t\t const w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n \n\t\t this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n \n\t\t return this;\n \n\t }\n \n\t applyQuaternion( q ) {\n \n\t\t const x = this.x, y = this.y, z = this.z;\n\t\t const qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n \n\t\t // calculate quat * vector\n \n\t\t const ix = qw * x + qy * z - qz * y;\n\t\t const iy = qw * y + qz * x - qx * z;\n\t\t const iz = qw * z + qx * y - qy * x;\n\t\t const iw = - qx * x - qy * y - qz * z;\n \n\t\t // calculate result * inverse quat\n \n\t\t this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n \n\t\t return this;\n \n\t }\n \n\t project( camera ) {\n \n\t\t return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n \n\t }\n \n\t unproject( camera ) {\n \n\t\t return this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n \n\t }\n \n\t transformDirection( m ) {\n \n\t\t // input: THREE.Matrix4 affine matrix\n\t\t // vector interpreted as a direction\n \n\t\t const x = this.x, y = this.y, z = this.z;\n\t\t const e = m.elements;\n \n\t\t this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n \n\t\t return this.normalize();\n \n\t }\n \n\t divide( v ) {\n \n\t\t this.x /= v.x;\n\t\t this.y /= v.y;\n\t\t this.z /= v.z;\n \n\t\t return this;\n \n\t }\n \n\t divideScalar( scalar ) {\n \n\t\t return this.multiplyScalar( 1 / scalar );\n \n\t }\n \n\t min( v ) {\n \n\t\t this.x = Math.min( this.x, v.x );\n\t\t this.y = Math.min( this.y, v.y );\n\t\t this.z = Math.min( this.z, v.z );\n \n\t\t return this;\n \n\t }\n \n\t max( v ) {\n \n\t\t this.x = Math.max( this.x, v.x );\n\t\t this.y = Math.max( this.y, v.y );\n\t\t this.z = Math.max( this.z, v.z );\n \n\t\t return this;\n \n\t }\n \n\t clamp( min, max ) {\n \n\t\t // assumes min < max, componentwise\n \n\t\t this.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t this.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t this.z = Math.max( min.z, Math.min( max.z, this.z ) );\n \n\t\t return this;\n \n\t }\n \n\t clampScalar( minVal, maxVal ) {\n \n\t\t this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t this.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n \n\t\t return this;\n \n\t }\n \n\t clampLength( min, max ) {\n \n\t\t const length = this.length();\n \n\t\t return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n \n\t }\n \n\t floor() {\n \n\t\t this.x = Math.floor( this.x );\n\t\t this.y = Math.floor( this.y );\n\t\t this.z = Math.floor( this.z );\n \n\t\t return this;\n \n\t }\n \n\t ceil() {\n \n\t\t this.x = Math.ceil( this.x );\n\t\t this.y = Math.ceil( this.y );\n\t\t this.z = Math.ceil( this.z );\n \n\t\t return this;\n \n\t }\n \n\t round() {\n \n\t\t this.x = Math.round( this.x );\n\t\t this.y = Math.round( this.y );\n\t\t this.z = Math.round( this.z );\n \n\t\t return this;\n \n\t }\n \n\t roundToZero() {\n \n\t\t this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n \n\t\t return this;\n \n\t }\n \n\t negate() {\n \n\t\t this.x = - this.x;\n\t\t this.y = - this.y;\n\t\t this.z = - this.z;\n \n\t\t return this;\n \n\t }\n \n\t dot( v ) {\n \n\t\t return this.x * v.x + this.y * v.y + this.z * v.z;\n \n\t }\n \n\t // TODO lengthSquared?\n \n\t lengthSq() {\n \n\t\t return this.x * this.x + this.y * this.y + this.z * this.z;\n \n\t }\n \n\t length() {\n \n\t\t return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n \n\t }\n \n\t manhattanLength() {\n \n\t\t return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n \n\t }\n \n\t normalize() {\n \n\t\t return this.divideScalar( this.length() || 1 );\n \n\t }\n \n\t setLength( length ) {\n \n\t\t return this.normalize().multiplyScalar( length );\n \n\t }\n \n\t lerp( v, alpha ) {\n \n\t\t this.x += ( v.x - this.x ) * alpha;\n\t\t this.y += ( v.y - this.y ) * alpha;\n\t\t this.z += ( v.z - this.z ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t lerpVectors( v1, v2, alpha ) {\n \n\t\t this.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\t this.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\t this.z = v1.z + ( v2.z - v1.z ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t cross( v, w ) {\n \n\t\t if ( w !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t return this.crossVectors( v, w );\n \n\t\t }\n \n\t\t return this.crossVectors( this, v );\n \n\t }\n \n\t crossVectors( a, b ) {\n \n\t\t const ax = a.x, ay = a.y, az = a.z;\n\t\t const bx = b.x, by = b.y, bz = b.z;\n \n\t\t this.x = ay * bz - az * by;\n\t\t this.y = az * bx - ax * bz;\n\t\t this.z = ax * by - ay * bx;\n \n\t\t return this;\n \n\t }\n \n\t projectOnVector( v ) {\n \n\t\t const denominator = v.lengthSq();\n \n\t\t if ( denominator === 0 ) return this.set( 0, 0, 0 );\n \n\t\t const scalar = v.dot( this ) / denominator;\n \n\t\t return this.copy( v ).multiplyScalar( scalar );\n \n\t }\n \n\t projectOnPlane( planeNormal ) {\n \n\t\t _vector$c.copy( this ).projectOnVector( planeNormal );\n \n\t\t return this.sub( _vector$c );\n \n\t }\n \n\t reflect( normal ) {\n \n\t\t // reflect incident vector off plane orthogonal to normal\n\t\t // normal is assumed to have unit length\n \n\t\t return this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n \n\t }\n \n\t angleTo( v ) {\n \n\t\t const denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n \n\t\t if ( denominator === 0 ) return Math.PI / 2;\n \n\t\t const theta = this.dot( v ) / denominator;\n \n\t\t // clamp, to handle numerical problems\n \n\t\t return Math.acos( clamp( theta, - 1, 1 ) );\n \n\t }\n \n\t distanceTo( v ) {\n \n\t\t return Math.sqrt( this.distanceToSquared( v ) );\n \n\t }\n \n\t distanceToSquared( v ) {\n \n\t\t const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n \n\t\t return dx * dx + dy * dy + dz * dz;\n \n\t }\n \n\t manhattanDistanceTo( v ) {\n \n\t\t return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n \n\t }\n \n\t setFromSpherical( s ) {\n \n\t\t return this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n \n\t }\n \n\t setFromSphericalCoords( radius, phi, theta ) {\n \n\t\t const sinPhiRadius = Math.sin( phi ) * radius;\n \n\t\t this.x = sinPhiRadius * Math.sin( theta );\n\t\t this.y = Math.cos( phi ) * radius;\n\t\t this.z = sinPhiRadius * Math.cos( theta );\n \n\t\t return this;\n \n\t }\n \n\t setFromCylindrical( c ) {\n \n\t\t return this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n \n\t }\n \n\t setFromCylindricalCoords( radius, theta, y ) {\n \n\t\t this.x = radius * Math.sin( theta );\n\t\t this.y = y;\n\t\t this.z = radius * Math.cos( theta );\n \n\t\t return this;\n \n\t }\n \n\t setFromMatrixPosition( m ) {\n \n\t\t const e = m.elements;\n \n\t\t this.x = e[ 12 ];\n\t\t this.y = e[ 13 ];\n\t\t this.z = e[ 14 ];\n \n\t\t return this;\n \n\t }\n \n\t setFromMatrixScale( m ) {\n \n\t\t const sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t const sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t const sz = this.setFromMatrixColumn( m, 2 ).length();\n \n\t\t this.x = sx;\n\t\t this.y = sy;\n\t\t this.z = sz;\n \n\t\t return this;\n \n\t }\n \n\t setFromMatrixColumn( m, index ) {\n \n\t\t return this.fromArray( m.elements, index * 4 );\n \n\t }\n \n\t setFromMatrix3Column( m, index ) {\n \n\t\t return this.fromArray( m.elements, index * 3 );\n \n\t }\n \n\t equals( v ) {\n \n\t\t return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t this.x = array[ offset ];\n\t\t this.y = array[ offset + 1 ];\n\t\t this.z = array[ offset + 2 ];\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t array[ offset ] = this.x;\n\t\t array[ offset + 1 ] = this.y;\n\t\t array[ offset + 2 ] = this.z;\n \n\t\t return array;\n \n\t }\n \n\t fromBufferAttribute( attribute, index, offset ) {\n \n\t\t if ( offset !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n \n\t\t }\n \n\t\t this.x = attribute.getX( index );\n\t\t this.y = attribute.getY( index );\n\t\t this.z = attribute.getZ( index );\n \n\t\t return this;\n \n\t }\n \n\t random() {\n \n\t\t this.x = Math.random();\n\t\t this.y = Math.random();\n\t\t this.z = Math.random();\n \n\t\t return this;\n \n\t }\n \n }\n \n Vector3.prototype.isVector3 = true;\n \n const _vector$c = /*@__PURE__*/ new Vector3();\n const _quaternion$4 = /*@__PURE__*/ new Quaternion();\n \n class Box3 {\n \n\t constructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n \n\t\t this.min = min;\n\t\t this.max = max;\n \n\t }\n \n\t set( min, max ) {\n \n\t\t this.min.copy( min );\n\t\t this.max.copy( max );\n \n\t\t return this;\n \n\t }\n \n\t setFromArray( array ) {\n \n\t\t let minX = + Infinity;\n\t\t let minY = + Infinity;\n\t\t let minZ = + Infinity;\n \n\t\t let maxX = - Infinity;\n\t\t let maxY = - Infinity;\n\t\t let maxZ = - Infinity;\n \n\t\t for ( let i = 0, l = array.length; i < l; i += 3 ) {\n \n\t\t\t const x = array[ i ];\n\t\t\t const y = array[ i + 1 ];\n\t\t\t const z = array[ i + 2 ];\n \n\t\t\t if ( x < minX ) minX = x;\n\t\t\t if ( y < minY ) minY = y;\n\t\t\t if ( z < minZ ) minZ = z;\n \n\t\t\t if ( x > maxX ) maxX = x;\n\t\t\t if ( y > maxY ) maxY = y;\n\t\t\t if ( z > maxZ ) maxZ = z;\n \n\t\t }\n \n\t\t this.min.set( minX, minY, minZ );\n\t\t this.max.set( maxX, maxY, maxZ );\n \n\t\t return this;\n \n\t }\n \n\t setFromBufferAttribute( attribute ) {\n \n\t\t let minX = + Infinity;\n\t\t let minY = + Infinity;\n\t\t let minZ = + Infinity;\n \n\t\t let maxX = - Infinity;\n\t\t let maxY = - Infinity;\n\t\t let maxZ = - Infinity;\n \n\t\t for ( let i = 0, l = attribute.count; i < l; i ++ ) {\n \n\t\t\t const x = attribute.getX( i );\n\t\t\t const y = attribute.getY( i );\n\t\t\t const z = attribute.getZ( i );\n \n\t\t\t if ( x < minX ) minX = x;\n\t\t\t if ( y < minY ) minY = y;\n\t\t\t if ( z < minZ ) minZ = z;\n \n\t\t\t if ( x > maxX ) maxX = x;\n\t\t\t if ( y > maxY ) maxY = y;\n\t\t\t if ( z > maxZ ) maxZ = z;\n \n\t\t }\n \n\t\t this.min.set( minX, minY, minZ );\n\t\t this.max.set( maxX, maxY, maxZ );\n \n\t\t return this;\n \n\t }\n \n\t setFromPoints( points ) {\n \n\t\t this.makeEmpty();\n \n\t\t for ( let i = 0, il = points.length; i < il; i ++ ) {\n \n\t\t\t this.expandByPoint( points[ i ] );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setFromCenterAndSize( center, size ) {\n \n\t\t const halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n \n\t\t this.min.copy( center ).sub( halfSize );\n\t\t this.max.copy( center ).add( halfSize );\n \n\t\t return this;\n \n\t }\n \n\t setFromObject( object ) {\n \n\t\t this.makeEmpty();\n \n\t\t return this.expandByObject( object );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t copy( box ) {\n \n\t\t this.min.copy( box.min );\n\t\t this.max.copy( box.max );\n \n\t\t return this;\n \n\t }\n \n\t makeEmpty() {\n \n\t\t this.min.x = this.min.y = this.min.z = + Infinity;\n\t\t this.max.x = this.max.y = this.max.z = - Infinity;\n \n\t\t return this;\n \n\t }\n \n\t isEmpty() {\n \n\t\t // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n \n\t\t return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n \n\t }\n \n\t getCenter( target ) {\n \n\t\t return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n \n\t }\n \n\t getSize( target ) {\n \n\t\t return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n \n\t }\n \n\t expandByPoint( point ) {\n \n\t\t this.min.min( point );\n\t\t this.max.max( point );\n \n\t\t return this;\n \n\t }\n \n\t expandByVector( vector ) {\n \n\t\t this.min.sub( vector );\n\t\t this.max.add( vector );\n \n\t\t return this;\n \n\t }\n \n\t expandByScalar( scalar ) {\n \n\t\t this.min.addScalar( - scalar );\n\t\t this.max.addScalar( scalar );\n \n\t\t return this;\n \n\t }\n \n\t expandByObject( object ) {\n \n\t\t // Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t // accounting for both the object's, and children's, world transforms\n \n\t\t object.updateWorldMatrix( false, false );\n \n\t\t const geometry = object.geometry;\n \n\t\t if ( geometry !== undefined ) {\n \n\t\t\t if ( geometry.boundingBox === null ) {\n \n\t\t\t\t geometry.computeBoundingBox();\n \n\t\t\t }\n \n\t\t\t _box$3.copy( geometry.boundingBox );\n\t\t\t _box$3.applyMatrix4( object.matrixWorld );\n \n\t\t\t this.union( _box$3 );\n \n\t\t }\n \n\t\t const children = object.children;\n \n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t this.expandByObject( children[ i ] );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t containsPoint( point ) {\n \n\t\t return point.x < this.min.x || point.x > this.max.x ||\n\t\t\t point.y < this.min.y || point.y > this.max.y ||\n\t\t\t point.z < this.min.z || point.z > this.max.z ? false : true;\n \n\t }\n \n\t containsBox( box ) {\n \n\t\t return this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t this.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t this.min.z <= box.min.z && box.max.z <= this.max.z;\n \n\t }\n \n\t getParameter( point, target ) {\n \n\t\t // This can potentially have a divide by zero if the box\n\t\t // has a size dimension of 0.\n \n\t\t return target.set(\n\t\t\t ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t ( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t ( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t );\n \n\t }\n \n\t intersectsBox( box ) {\n \n\t\t // using 6 splitting planes to rule out intersections.\n\t\t return box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n \n\t }\n \n\t intersectsSphere( sphere ) {\n \n\t\t // Find the point on the AABB closest to the sphere center.\n\t\t this.clampPoint( sphere.center, _vector$b );\n \n\t\t // If that point is inside the sphere, the AABB and sphere intersect.\n\t\t return _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n \n\t }\n \n\t intersectsPlane( plane ) {\n \n\t\t // We compute the minimum and maximum dot product values. If those values\n\t\t // are on the same side (back or front) of the plane, then there is no intersection.\n \n\t\t let min, max;\n \n\t\t if ( plane.normal.x > 0 ) {\n \n\t\t\t min = plane.normal.x * this.min.x;\n\t\t\t max = plane.normal.x * this.max.x;\n \n\t\t } else {\n \n\t\t\t min = plane.normal.x * this.max.x;\n\t\t\t max = plane.normal.x * this.min.x;\n \n\t\t }\n \n\t\t if ( plane.normal.y > 0 ) {\n \n\t\t\t min += plane.normal.y * this.min.y;\n\t\t\t max += plane.normal.y * this.max.y;\n \n\t\t } else {\n \n\t\t\t min += plane.normal.y * this.max.y;\n\t\t\t max += plane.normal.y * this.min.y;\n \n\t\t }\n \n\t\t if ( plane.normal.z > 0 ) {\n \n\t\t\t min += plane.normal.z * this.min.z;\n\t\t\t max += plane.normal.z * this.max.z;\n \n\t\t } else {\n \n\t\t\t min += plane.normal.z * this.max.z;\n\t\t\t max += plane.normal.z * this.min.z;\n \n\t\t }\n \n\t\t return ( min <= - plane.constant && max >= - plane.constant );\n \n\t }\n \n\t intersectsTriangle( triangle ) {\n \n\t\t if ( this.isEmpty() ) {\n \n\t\t\t return false;\n \n\t\t }\n \n\t\t // compute box center and extents\n\t\t this.getCenter( _center );\n\t\t _extents.subVectors( this.max, _center );\n \n\t\t // translate triangle to aabb origin\n\t\t _v0$2.subVectors( triangle.a, _center );\n\t\t _v1$7.subVectors( triangle.b, _center );\n\t\t _v2$3.subVectors( triangle.c, _center );\n \n\t\t // compute edge vectors for triangle\n\t\t _f0.subVectors( _v1$7, _v0$2 );\n\t\t _f1.subVectors( _v2$3, _v1$7 );\n\t\t _f2.subVectors( _v0$2, _v2$3 );\n \n\t\t // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t let axes = [\n\t\t\t 0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t _f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t - _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t ];\n\t\t if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n \n\t\t\t return false;\n \n\t\t }\n \n\t\t // test 3 face normals from the aabb\n\t\t axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n \n\t\t\t return false;\n \n\t\t }\n \n\t\t // finally testing the face normal of the triangle\n\t\t // use already existing triangle edge vectors here\n\t\t _triangleNormal.crossVectors( _f0, _f1 );\n\t\t axes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n \n\t\t return satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n \n\t }\n \n\t clampPoint( point, target ) {\n \n\t\t return target.copy( point ).clamp( this.min, this.max );\n \n\t }\n \n\t distanceToPoint( point ) {\n \n\t\t const clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n \n\t\t return clampedPoint.sub( point ).length();\n \n\t }\n \n\t getBoundingSphere( target ) {\n \n\t\t this.getCenter( target.center );\n \n\t\t target.radius = this.getSize( _vector$b ).length() * 0.5;\n \n\t\t return target;\n \n\t }\n \n\t intersect( box ) {\n \n\t\t this.min.max( box.min );\n\t\t this.max.min( box.max );\n \n\t\t // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t if ( this.isEmpty() ) this.makeEmpty();\n \n\t\t return this;\n \n\t }\n \n\t union( box ) {\n \n\t\t this.min.min( box.min );\n\t\t this.max.max( box.max );\n \n\t\t return this;\n \n\t }\n \n\t applyMatrix4( matrix ) {\n \n\t\t // transform of empty box is an empty box.\n\t\t if ( this.isEmpty() ) return this;\n \n\t\t // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t _points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t _points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t _points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t _points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t _points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t _points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t _points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t _points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n \n\t\t this.setFromPoints( _points );\n \n\t\t return this;\n \n\t }\n \n\t translate( offset ) {\n \n\t\t this.min.add( offset );\n\t\t this.max.add( offset );\n \n\t\t return this;\n \n\t }\n \n\t equals( box ) {\n \n\t\t return box.min.equals( this.min ) && box.max.equals( this.max );\n \n\t }\n \n }\n \n Box3.prototype.isBox3 = true;\n \n const _points = [\n\t /*@__PURE__*/ new Vector3(),\n\t /*@__PURE__*/ new Vector3(),\n\t /*@__PURE__*/ new Vector3(),\n\t /*@__PURE__*/ new Vector3(),\n\t /*@__PURE__*/ new Vector3(),\n\t /*@__PURE__*/ new Vector3(),\n\t /*@__PURE__*/ new Vector3(),\n\t /*@__PURE__*/ new Vector3()\n ];\n \n const _vector$b = /*@__PURE__*/ new Vector3();\n \n const _box$3 = /*@__PURE__*/ new Box3();\n \n // triangle centered vertices\n \n const _v0$2 = /*@__PURE__*/ new Vector3();\n const _v1$7 = /*@__PURE__*/ new Vector3();\n const _v2$3 = /*@__PURE__*/ new Vector3();\n \n // triangle edge vectors\n \n const _f0 = /*@__PURE__*/ new Vector3();\n const _f1 = /*@__PURE__*/ new Vector3();\n const _f2 = /*@__PURE__*/ new Vector3();\n \n const _center = /*@__PURE__*/ new Vector3();\n const _extents = /*@__PURE__*/ new Vector3();\n const _triangleNormal = /*@__PURE__*/ new Vector3();\n const _testAxis = /*@__PURE__*/ new Vector3();\n \n function satForAxes( axes, v0, v1, v2, extents ) {\n \n\t for ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n \n\t\t _testAxis.fromArray( axes, i );\n\t\t // project the aabb onto the seperating axis\n\t\t const r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t // project all 3 vertices of the triangle onto the seperating axis\n\t\t const p0 = v0.dot( _testAxis );\n\t\t const p1 = v1.dot( _testAxis );\n\t\t const p2 = v2.dot( _testAxis );\n\t\t // actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n \n\t\t\t // points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t // the axis is seperating and we can exit\n\t\t\t return false;\n \n\t\t }\n \n\t }\n \n\t return true;\n \n }\n \n const _box$2 = /*@__PURE__*/ new Box3();\n const _v1$6 = /*@__PURE__*/ new Vector3();\n const _toFarthestPoint = /*@__PURE__*/ new Vector3();\n const _toPoint = /*@__PURE__*/ new Vector3();\n \n class Sphere {\n \n\t constructor( center = new Vector3(), radius = - 1 ) {\n \n\t\t this.center = center;\n\t\t this.radius = radius;\n \n\t }\n \n\t set( center, radius ) {\n \n\t\t this.center.copy( center );\n\t\t this.radius = radius;\n \n\t\t return this;\n \n\t }\n \n\t setFromPoints( points, optionalCenter ) {\n \n\t\t const center = this.center;\n \n\t\t if ( optionalCenter !== undefined ) {\n \n\t\t\t center.copy( optionalCenter );\n \n\t\t } else {\n \n\t\t\t _box$2.setFromPoints( points ).getCenter( center );\n \n\t\t }\n \n\t\t let maxRadiusSq = 0;\n \n\t\t for ( let i = 0, il = points.length; i < il; i ++ ) {\n \n\t\t\t maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n \n\t\t }\n \n\t\t this.radius = Math.sqrt( maxRadiusSq );\n \n\t\t return this;\n \n\t }\n \n\t copy( sphere ) {\n \n\t\t this.center.copy( sphere.center );\n\t\t this.radius = sphere.radius;\n \n\t\t return this;\n \n\t }\n \n\t isEmpty() {\n \n\t\t return ( this.radius < 0 );\n \n\t }\n \n\t makeEmpty() {\n \n\t\t this.center.set( 0, 0, 0 );\n\t\t this.radius = - 1;\n \n\t\t return this;\n \n\t }\n \n\t containsPoint( point ) {\n \n\t\t return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n \n\t }\n \n\t distanceToPoint( point ) {\n \n\t\t return ( point.distanceTo( this.center ) - this.radius );\n \n\t }\n \n\t intersectsSphere( sphere ) {\n \n\t\t const radiusSum = this.radius + sphere.radius;\n \n\t\t return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n \n\t }\n \n\t intersectsBox( box ) {\n \n\t\t return box.intersectsSphere( this );\n \n\t }\n \n\t intersectsPlane( plane ) {\n \n\t\t return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n \n\t }\n \n\t clampPoint( point, target ) {\n \n\t\t const deltaLengthSq = this.center.distanceToSquared( point );\n \n\t\t target.copy( point );\n \n\t\t if ( deltaLengthSq > ( this.radius * this.radius ) ) {\n \n\t\t\t target.sub( this.center ).normalize();\n\t\t\t target.multiplyScalar( this.radius ).add( this.center );\n \n\t\t }\n \n\t\t return target;\n \n\t }\n \n\t getBoundingBox( target ) {\n \n\t\t if ( this.isEmpty() ) {\n \n\t\t\t // Empty sphere produces empty bounding box\n\t\t\t target.makeEmpty();\n\t\t\t return target;\n \n\t\t }\n \n\t\t target.set( this.center, this.center );\n\t\t target.expandByScalar( this.radius );\n \n\t\t return target;\n \n\t }\n \n\t applyMatrix4( matrix ) {\n \n\t\t this.center.applyMatrix4( matrix );\n\t\t this.radius = this.radius * matrix.getMaxScaleOnAxis();\n \n\t\t return this;\n \n\t }\n \n\t translate( offset ) {\n \n\t\t this.center.add( offset );\n \n\t\t return this;\n \n\t }\n \n\t expandByPoint( point ) {\n \n\t\t // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n \n\t\t _toPoint.subVectors( point, this.center );\n \n\t\t const lengthSq = _toPoint.lengthSq();\n \n\t\t if ( lengthSq > ( this.radius * this.radius ) ) {\n \n\t\t\t const length = Math.sqrt( lengthSq );\n\t\t\t const missingRadiusHalf = ( length - this.radius ) * 0.5;\n \n\t\t\t // Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t // and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t // the whole missing distance were just added to radius.\n \n\t\t\t this.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\t this.radius += missingRadiusHalf;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t union( sphere ) {\n \n\t\t // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n \n\t\t // To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t // 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t // 2) Enclose the opposite point of the farthest point into this sphere.\n \n\t\t _toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n \n\t\t this.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\t this.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n \n\t\t return this;\n \n\t }\n \n\t equals( sphere ) {\n \n\t\t return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n const _vector$a = /*@__PURE__*/ new Vector3();\n const _segCenter = /*@__PURE__*/ new Vector3();\n const _segDir = /*@__PURE__*/ new Vector3();\n const _diff = /*@__PURE__*/ new Vector3();\n \n const _edge1 = /*@__PURE__*/ new Vector3();\n const _edge2 = /*@__PURE__*/ new Vector3();\n const _normal$1 = /*@__PURE__*/ new Vector3();\n \n class Ray {\n \n\t constructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n \n\t\t this.origin = origin;\n\t\t this.direction = direction;\n \n\t }\n \n\t set( origin, direction ) {\n \n\t\t this.origin.copy( origin );\n\t\t this.direction.copy( direction );\n \n\t\t return this;\n \n\t }\n \n\t copy( ray ) {\n \n\t\t this.origin.copy( ray.origin );\n\t\t this.direction.copy( ray.direction );\n \n\t\t return this;\n \n\t }\n \n\t at( t, target ) {\n \n\t\t return target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n \n\t }\n \n\t lookAt( v ) {\n \n\t\t this.direction.copy( v ).sub( this.origin ).normalize();\n \n\t\t return this;\n \n\t }\n \n\t recast( t ) {\n \n\t\t this.origin.copy( this.at( t, _vector$a ) );\n \n\t\t return this;\n \n\t }\n \n\t closestPointToPoint( point, target ) {\n \n\t\t target.subVectors( point, this.origin );\n \n\t\t const directionDistance = target.dot( this.direction );\n \n\t\t if ( directionDistance < 0 ) {\n \n\t\t\t return target.copy( this.origin );\n \n\t\t }\n \n\t\t return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n \n\t }\n \n\t distanceToPoint( point ) {\n \n\t\t return Math.sqrt( this.distanceSqToPoint( point ) );\n \n\t }\n \n\t distanceSqToPoint( point ) {\n \n\t\t const directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n \n\t\t // point behind the ray\n \n\t\t if ( directionDistance < 0 ) {\n \n\t\t\t return this.origin.distanceToSquared( point );\n \n\t\t }\n \n\t\t _vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n \n\t\t return _vector$a.distanceToSquared( point );\n \n\t }\n \n\t distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n \n\t\t // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t // It returns the min distance between the ray and the segment\n\t\t // defined by v0 and v1\n\t\t // It can also set two optional targets :\n\t\t // - The closest point on the ray\n\t\t // - The closest point on the segment\n \n\t\t _segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t _segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t _diff.copy( this.origin ).sub( _segCenter );\n \n\t\t const segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t const a01 = - this.direction.dot( _segDir );\n\t\t const b0 = _diff.dot( this.direction );\n\t\t const b1 = - _diff.dot( _segDir );\n\t\t const c = _diff.lengthSq();\n\t\t const det = Math.abs( 1 - a01 * a01 );\n\t\t let s0, s1, sqrDist, extDet;\n \n\t\t if ( det > 0 ) {\n \n\t\t\t // The ray and segment are not parallel.\n \n\t\t\t s0 = a01 * b1 - b0;\n\t\t\t s1 = a01 * b0 - b1;\n\t\t\t extDet = segExtent * det;\n \n\t\t\t if ( s0 >= 0 ) {\n \n\t\t\t\t if ( s1 >= - extDet ) {\n \n\t\t\t\t\t if ( s1 <= extDet ) {\n \n\t\t\t\t\t\t // region 0\n\t\t\t\t\t\t // Minimum at interior points of ray and segment.\n \n\t\t\t\t\t\t const invDet = 1 / det;\n\t\t\t\t\t\t s0 *= invDet;\n\t\t\t\t\t\t s1 *= invDet;\n\t\t\t\t\t\t sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t // region 1\n \n\t\t\t\t\t\t s1 = segExtent;\n\t\t\t\t\t\t s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // region 5\n \n\t\t\t\t\t s1 = - segExtent;\n\t\t\t\t\t s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t if ( s1 <= - extDet ) {\n \n\t\t\t\t\t // region 4\n \n\t\t\t\t\t s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n\t\t\t\t } else if ( s1 <= extDet ) {\n \n\t\t\t\t\t // region 3\n \n\t\t\t\t\t s0 = 0;\n\t\t\t\t\t s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t sqrDist = s1 * ( s1 + 2 * b1 ) + c;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // region 2\n \n\t\t\t\t\t s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t // Ray and segment are parallel.\n \n\t\t\t s1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n \n\t\t }\n \n\t\t if ( optionalPointOnRay ) {\n \n\t\t\t optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n \n\t\t }\n \n\t\t if ( optionalPointOnSegment ) {\n \n\t\t\t optionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n \n\t\t }\n \n\t\t return sqrDist;\n \n\t }\n \n\t intersectSphere( sphere, target ) {\n \n\t\t _vector$a.subVectors( sphere.center, this.origin );\n\t\t const tca = _vector$a.dot( this.direction );\n\t\t const d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\t const radius2 = sphere.radius * sphere.radius;\n \n\t\t if ( d2 > radius2 ) return null;\n \n\t\t const thc = Math.sqrt( radius2 - d2 );\n \n\t\t // t0 = first intersect point - entrance on front of sphere\n\t\t const t0 = tca - thc;\n \n\t\t // t1 = second intersect point - exit point on back of sphere\n\t\t const t1 = tca + thc;\n \n\t\t // test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t if ( t0 < 0 && t1 < 0 ) return null;\n \n\t\t // test to see if t0 is behind the ray:\n\t\t // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t // in order to always return an intersect point that is in front of the ray.\n\t\t if ( t0 < 0 ) return this.at( t1, target );\n \n\t\t // else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t return this.at( t0, target );\n \n\t }\n \n\t intersectsSphere( sphere ) {\n \n\t\t return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n \n\t }\n \n\t distanceToPlane( plane ) {\n \n\t\t const denominator = plane.normal.dot( this.direction );\n \n\t\t if ( denominator === 0 ) {\n \n\t\t\t // line is coplanar, return origin\n\t\t\t if ( plane.distanceToPoint( this.origin ) === 0 ) {\n \n\t\t\t\t return 0;\n \n\t\t\t }\n \n\t\t\t // Null is preferable to undefined since undefined means.... it is undefined\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t const t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n \n\t\t // Return if the ray never intersects the plane\n \n\t\t return t >= 0 ? t : null;\n \n\t }\n \n\t intersectPlane( plane, target ) {\n \n\t\t const t = this.distanceToPlane( plane );\n \n\t\t if ( t === null ) {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t return this.at( t, target );\n \n\t }\n \n\t intersectsPlane( plane ) {\n \n\t\t // check if the ray lies on the plane first\n \n\t\t const distToPoint = plane.distanceToPoint( this.origin );\n \n\t\t if ( distToPoint === 0 ) {\n \n\t\t\t return true;\n \n\t\t }\n \n\t\t const denominator = plane.normal.dot( this.direction );\n \n\t\t if ( denominator * distToPoint < 0 ) {\n \n\t\t\t return true;\n \n\t\t }\n \n\t\t // ray origin is behind the plane (and is pointing behind it)\n \n\t\t return false;\n \n\t }\n \n\t intersectBox( box, target ) {\n \n\t\t let tmin, tmax, tymin, tymax, tzmin, tzmax;\n \n\t\t const invdirx = 1 / this.direction.x,\n\t\t\t invdiry = 1 / this.direction.y,\n\t\t\t invdirz = 1 / this.direction.z;\n \n\t\t const origin = this.origin;\n \n\t\t if ( invdirx >= 0 ) {\n \n\t\t\t tmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t tmax = ( box.max.x - origin.x ) * invdirx;\n \n\t\t } else {\n \n\t\t\t tmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t tmax = ( box.min.x - origin.x ) * invdirx;\n \n\t\t }\n \n\t\t if ( invdiry >= 0 ) {\n \n\t\t\t tymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t tymax = ( box.max.y - origin.y ) * invdiry;\n \n\t\t } else {\n \n\t\t\t tymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t tymax = ( box.min.y - origin.y ) * invdiry;\n \n\t\t }\n \n\t\t if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n \n\t\t // These lines also handle the case where tmin or tmax is NaN\n\t\t // (result of 0 * Infinity). x !== x returns true if x is NaN\n \n\t\t if ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n \n\t\t if ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n \n\t\t if ( invdirz >= 0 ) {\n \n\t\t\t tzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t tzmax = ( box.max.z - origin.z ) * invdirz;\n \n\t\t } else {\n \n\t\t\t tzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t tzmax = ( box.min.z - origin.z ) * invdirz;\n \n\t\t }\n \n\t\t if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n \n\t\t if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n \n\t\t if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n \n\t\t //return point closest to the ray (positive side)\n \n\t\t if ( tmax < 0 ) return null;\n \n\t\t return this.at( tmin >= 0 ? tmin : tmax, target );\n \n\t }\n \n\t intersectsBox( box ) {\n \n\t\t return this.intersectBox( box, _vector$a ) !== null;\n \n\t }\n \n\t intersectTriangle( a, b, c, backfaceCulling, target ) {\n \n\t\t // Compute the offset origin, edges, and normal.\n \n\t\t // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n \n\t\t _edge1.subVectors( b, a );\n\t\t _edge2.subVectors( c, a );\n\t\t _normal$1.crossVectors( _edge1, _edge2 );\n \n\t\t // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t let DdN = this.direction.dot( _normal$1 );\n\t\t let sign;\n \n\t\t if ( DdN > 0 ) {\n \n\t\t\t if ( backfaceCulling ) return null;\n\t\t\t sign = 1;\n \n\t\t } else if ( DdN < 0 ) {\n \n\t\t\t sign = - 1;\n\t\t\t DdN = - DdN;\n \n\t\t } else {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t _diff.subVectors( this.origin, a );\n\t\t const DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n \n\t\t // b1 < 0, no intersection\n\t\t if ( DdQxE2 < 0 ) {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t const DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n \n\t\t // b2 < 0, no intersection\n\t\t if ( DdE1xQ < 0 ) {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t // b1+b2 > 1, no intersection\n\t\t if ( DdQxE2 + DdE1xQ > DdN ) {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t // Line intersects triangle, check if ray does.\n\t\t const QdN = - sign * _diff.dot( _normal$1 );\n \n\t\t // t < 0, no intersection\n\t\t if ( QdN < 0 ) {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t // Ray intersects triangle.\n\t\t return this.at( QdN / DdN, target );\n \n\t }\n \n\t applyMatrix4( matrix4 ) {\n \n\t\t this.origin.applyMatrix4( matrix4 );\n\t\t this.direction.transformDirection( matrix4 );\n \n\t\t return this;\n \n\t }\n \n\t equals( ray ) {\n \n\t\t return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n class Matrix4 {\n \n\t constructor() {\n \n\t\t this.elements = [\n \n\t\t\t 1, 0, 0, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t 0, 0, 1, 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t ];\n \n\t\t if ( arguments.length > 0 ) {\n \n\t\t\t console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n \n\t\t }\n \n\t }\n \n\t set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n \n\t\t const te = this.elements;\n \n\t\t te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n \n\t\t return this;\n \n\t }\n \n\t identity() {\n \n\t\t this.set(\n \n\t\t\t 1, 0, 0, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t 0, 0, 1, 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new Matrix4().fromArray( this.elements );\n \n\t }\n \n\t copy( m ) {\n \n\t\t const te = this.elements;\n\t\t const me = m.elements;\n \n\t\t te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n \n\t\t return this;\n \n\t }\n \n\t copyPosition( m ) {\n \n\t\t const te = this.elements, me = m.elements;\n \n\t\t te[ 12 ] = me[ 12 ];\n\t\t te[ 13 ] = me[ 13 ];\n\t\t te[ 14 ] = me[ 14 ];\n \n\t\t return this;\n \n\t }\n \n\t setFromMatrix3( m ) {\n \n\t\t const me = m.elements;\n \n\t\t this.set(\n \n\t\t\t me[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\t me[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\t me[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t extractBasis( xAxis, yAxis, zAxis ) {\n \n\t\t xAxis.setFromMatrixColumn( this, 0 );\n\t\t yAxis.setFromMatrixColumn( this, 1 );\n\t\t zAxis.setFromMatrixColumn( this, 2 );\n \n\t\t return this;\n \n\t }\n \n\t makeBasis( xAxis, yAxis, zAxis ) {\n \n\t\t this.set(\n\t\t\t xAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t xAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t xAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t 0, 0, 0, 1\n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t extractRotation( m ) {\n \n\t\t // this method does not support reflection matrices\n \n\t\t const te = this.elements;\n\t\t const me = m.elements;\n \n\t\t const scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\t const scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\t const scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n \n\t\t te[ 0 ] = me[ 0 ] * scaleX;\n\t\t te[ 1 ] = me[ 1 ] * scaleX;\n\t\t te[ 2 ] = me[ 2 ] * scaleX;\n\t\t te[ 3 ] = 0;\n \n\t\t te[ 4 ] = me[ 4 ] * scaleY;\n\t\t te[ 5 ] = me[ 5 ] * scaleY;\n\t\t te[ 6 ] = me[ 6 ] * scaleY;\n\t\t te[ 7 ] = 0;\n \n\t\t te[ 8 ] = me[ 8 ] * scaleZ;\n\t\t te[ 9 ] = me[ 9 ] * scaleZ;\n\t\t te[ 10 ] = me[ 10 ] * scaleZ;\n\t\t te[ 11 ] = 0;\n \n\t\t te[ 12 ] = 0;\n\t\t te[ 13 ] = 0;\n\t\t te[ 14 ] = 0;\n\t\t te[ 15 ] = 1;\n \n\t\t return this;\n \n\t }\n \n\t makeRotationFromEuler( euler ) {\n \n\t\t if ( ! ( euler && euler.isEuler ) ) {\n \n\t\t\t console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n \n\t\t }\n \n\t\t const te = this.elements;\n \n\t\t const x = euler.x, y = euler.y, z = euler.z;\n\t\t const a = Math.cos( x ), b = Math.sin( x );\n\t\t const c = Math.cos( y ), d = Math.sin( y );\n\t\t const e = Math.cos( z ), f = Math.sin( z );\n \n\t\t if ( euler.order === 'XYZ' ) {\n \n\t\t\t const ae = a * e, af = a * f, be = b * e, bf = b * f;\n \n\t\t\t te[ 0 ] = c * e;\n\t\t\t te[ 4 ] = - c * f;\n\t\t\t te[ 8 ] = d;\n \n\t\t\t te[ 1 ] = af + be * d;\n\t\t\t te[ 5 ] = ae - bf * d;\n\t\t\t te[ 9 ] = - b * c;\n \n\t\t\t te[ 2 ] = bf - ae * d;\n\t\t\t te[ 6 ] = be + af * d;\n\t\t\t te[ 10 ] = a * c;\n \n\t\t } else if ( euler.order === 'YXZ' ) {\n \n\t\t\t const ce = c * e, cf = c * f, de = d * e, df = d * f;\n \n\t\t\t te[ 0 ] = ce + df * b;\n\t\t\t te[ 4 ] = de * b - cf;\n\t\t\t te[ 8 ] = a * d;\n \n\t\t\t te[ 1 ] = a * f;\n\t\t\t te[ 5 ] = a * e;\n\t\t\t te[ 9 ] = - b;\n \n\t\t\t te[ 2 ] = cf * b - de;\n\t\t\t te[ 6 ] = df + ce * b;\n\t\t\t te[ 10 ] = a * c;\n \n\t\t } else if ( euler.order === 'ZXY' ) {\n \n\t\t\t const ce = c * e, cf = c * f, de = d * e, df = d * f;\n \n\t\t\t te[ 0 ] = ce - df * b;\n\t\t\t te[ 4 ] = - a * f;\n\t\t\t te[ 8 ] = de + cf * b;\n \n\t\t\t te[ 1 ] = cf + de * b;\n\t\t\t te[ 5 ] = a * e;\n\t\t\t te[ 9 ] = df - ce * b;\n \n\t\t\t te[ 2 ] = - a * d;\n\t\t\t te[ 6 ] = b;\n\t\t\t te[ 10 ] = a * c;\n \n\t\t } else if ( euler.order === 'ZYX' ) {\n \n\t\t\t const ae = a * e, af = a * f, be = b * e, bf = b * f;\n \n\t\t\t te[ 0 ] = c * e;\n\t\t\t te[ 4 ] = be * d - af;\n\t\t\t te[ 8 ] = ae * d + bf;\n \n\t\t\t te[ 1 ] = c * f;\n\t\t\t te[ 5 ] = bf * d + ae;\n\t\t\t te[ 9 ] = af * d - be;\n \n\t\t\t te[ 2 ] = - d;\n\t\t\t te[ 6 ] = b * c;\n\t\t\t te[ 10 ] = a * c;\n \n\t\t } else if ( euler.order === 'YZX' ) {\n \n\t\t\t const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n \n\t\t\t te[ 0 ] = c * e;\n\t\t\t te[ 4 ] = bd - ac * f;\n\t\t\t te[ 8 ] = bc * f + ad;\n \n\t\t\t te[ 1 ] = f;\n\t\t\t te[ 5 ] = a * e;\n\t\t\t te[ 9 ] = - b * e;\n \n\t\t\t te[ 2 ] = - d * e;\n\t\t\t te[ 6 ] = ad * f + bc;\n\t\t\t te[ 10 ] = ac - bd * f;\n \n\t\t } else if ( euler.order === 'XZY' ) {\n \n\t\t\t const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n \n\t\t\t te[ 0 ] = c * e;\n\t\t\t te[ 4 ] = - f;\n\t\t\t te[ 8 ] = d * e;\n \n\t\t\t te[ 1 ] = ac * f + bd;\n\t\t\t te[ 5 ] = a * e;\n\t\t\t te[ 9 ] = ad * f - bc;\n \n\t\t\t te[ 2 ] = bc * f - ad;\n\t\t\t te[ 6 ] = b * e;\n\t\t\t te[ 10 ] = bd * f + ac;\n \n\t\t }\n \n\t\t // bottom row\n\t\t te[ 3 ] = 0;\n\t\t te[ 7 ] = 0;\n\t\t te[ 11 ] = 0;\n \n\t\t // last column\n\t\t te[ 12 ] = 0;\n\t\t te[ 13 ] = 0;\n\t\t te[ 14 ] = 0;\n\t\t te[ 15 ] = 1;\n \n\t\t return this;\n \n\t }\n \n\t makeRotationFromQuaternion( q ) {\n \n\t\t return this.compose( _zero, q, _one );\n \n\t }\n \n\t lookAt( eye, target, up ) {\n \n\t\t const te = this.elements;\n \n\t\t _z.subVectors( eye, target );\n \n\t\t if ( _z.lengthSq() === 0 ) {\n \n\t\t\t // eye and target are in the same position\n \n\t\t\t _z.z = 1;\n \n\t\t }\n \n\t\t _z.normalize();\n\t\t _x.crossVectors( up, _z );\n \n\t\t if ( _x.lengthSq() === 0 ) {\n \n\t\t\t // up and z are parallel\n \n\t\t\t if ( Math.abs( up.z ) === 1 ) {\n \n\t\t\t\t _z.x += 0.0001;\n \n\t\t\t } else {\n \n\t\t\t\t _z.z += 0.0001;\n \n\t\t\t }\n \n\t\t\t _z.normalize();\n\t\t\t _x.crossVectors( up, _z );\n \n\t\t }\n \n\t\t _x.normalize();\n\t\t _y.crossVectors( _z, _x );\n \n\t\t te[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\t te[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\t te[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n \n\t\t return this;\n \n\t }\n \n\t multiply( m, n ) {\n \n\t\t if ( n !== undefined ) {\n \n\t\t\t console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t return this.multiplyMatrices( m, n );\n \n\t\t }\n \n\t\t return this.multiplyMatrices( this, m );\n \n\t }\n \n\t premultiply( m ) {\n \n\t\t return this.multiplyMatrices( m, this );\n \n\t }\n \n\t multiplyMatrices( a, b ) {\n \n\t\t const ae = a.elements;\n\t\t const be = b.elements;\n\t\t const te = this.elements;\n \n\t\t const a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t const a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t const a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t const a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n \n\t\t const b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t const b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t const b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t const b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n \n\t\t te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n \n\t\t te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n \n\t\t te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n \n\t\t te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n \n\t\t return this;\n \n\t }\n \n\t multiplyScalar( s ) {\n \n\t\t const te = this.elements;\n \n\t\t te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n \n\t\t return this;\n \n\t }\n \n\t determinant() {\n \n\t\t const te = this.elements;\n \n\t\t const n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t const n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t const n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t const n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n \n\t\t //TODO: make this more efficient\n\t\t //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n \n\t\t return (\n\t\t\t n41 * (\n\t\t\t\t + n14 * n23 * n32\n\t\t\t\t  - n13 * n24 * n32\n\t\t\t\t  - n14 * n22 * n33\n\t\t\t\t  + n12 * n24 * n33\n\t\t\t\t  + n13 * n22 * n34\n\t\t\t\t  - n12 * n23 * n34\n\t\t\t ) +\n\t\t\t n42 * (\n\t\t\t\t + n11 * n23 * n34\n\t\t\t\t  - n11 * n24 * n33\n\t\t\t\t  + n14 * n21 * n33\n\t\t\t\t  - n13 * n21 * n34\n\t\t\t\t  + n13 * n24 * n31\n\t\t\t\t  - n14 * n23 * n31\n\t\t\t ) +\n\t\t\t n43 * (\n\t\t\t\t + n11 * n24 * n32\n\t\t\t\t  - n11 * n22 * n34\n\t\t\t\t  - n14 * n21 * n32\n\t\t\t\t  + n12 * n21 * n34\n\t\t\t\t  + n14 * n22 * n31\n\t\t\t\t  - n12 * n24 * n31\n\t\t\t ) +\n\t\t\t n44 * (\n\t\t\t\t - n13 * n22 * n31\n\t\t\t\t  - n11 * n23 * n32\n\t\t\t\t  + n11 * n22 * n33\n\t\t\t\t  + n13 * n21 * n32\n\t\t\t\t  - n12 * n21 * n33\n\t\t\t\t  + n12 * n23 * n31\n\t\t\t )\n \n\t\t );\n \n\t }\n \n\t transpose() {\n \n\t\t const te = this.elements;\n\t\t let tmp;\n \n\t\t tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n \n\t\t tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n \n\t\t return this;\n \n\t }\n \n\t setPosition( x, y, z ) {\n \n\t\t const te = this.elements;\n \n\t\t if ( x.isVector3 ) {\n \n\t\t\t te[ 12 ] = x.x;\n\t\t\t te[ 13 ] = x.y;\n\t\t\t te[ 14 ] = x.z;\n \n\t\t } else {\n \n\t\t\t te[ 12 ] = x;\n\t\t\t te[ 13 ] = y;\n\t\t\t te[ 14 ] = z;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t invert() {\n \n\t\t // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t const te = this.elements,\n \n\t\t\t n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\t n12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\t n13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\t n14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n \n\t\t\t t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n \n\t\t const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n \n\t\t if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n \n\t\t const detInv = 1 / det;\n \n\t\t te[ 0 ] = t11 * detInv;\n\t\t te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n \n\t\t te[ 4 ] = t12 * detInv;\n\t\t te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n \n\t\t te[ 8 ] = t13 * detInv;\n\t\t te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n \n\t\t te[ 12 ] = t14 * detInv;\n\t\t te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n \n\t\t return this;\n \n\t }\n \n\t scale( v ) {\n \n\t\t const te = this.elements;\n\t\t const x = v.x, y = v.y, z = v.z;\n \n\t\t te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n \n\t\t return this;\n \n\t }\n \n\t getMaxScaleOnAxis() {\n \n\t\t const te = this.elements;\n \n\t\t const scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t const scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t const scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n \n\t\t return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n \n\t }\n \n\t makeTranslation( x, y, z ) {\n \n\t\t this.set(\n \n\t\t\t 1, 0, 0, x,\n\t\t\t 0, 1, 0, y,\n\t\t\t 0, 0, 1, z,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t makeRotationX( theta ) {\n \n\t\t const c = Math.cos( theta ), s = Math.sin( theta );\n \n\t\t this.set(\n \n\t\t\t 1, 0, 0, 0,\n\t\t\t 0, c, - s, 0,\n\t\t\t 0, s, c, 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t makeRotationY( theta ) {\n \n\t\t const c = Math.cos( theta ), s = Math.sin( theta );\n \n\t\t this.set(\n \n\t\t\t  c, 0, s, 0,\n\t\t\t  0, 1, 0, 0,\n\t\t\t - s, 0, c, 0,\n\t\t\t  0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t makeRotationZ( theta ) {\n \n\t\t const c = Math.cos( theta ), s = Math.sin( theta );\n \n\t\t this.set(\n \n\t\t\t c, - s, 0, 0,\n\t\t\t s, c, 0, 0,\n\t\t\t 0, 0, 1, 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t makeRotationAxis( axis, angle ) {\n \n\t\t // Based on http://www.gamedev.net/reference/articles/article1199.asp\n \n\t\t const c = Math.cos( angle );\n\t\t const s = Math.sin( angle );\n\t\t const t = 1 - c;\n\t\t const x = axis.x, y = axis.y, z = axis.z;\n\t\t const tx = t * x, ty = t * y;\n \n\t\t this.set(\n \n\t\t\t tx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t tx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t makeScale( x, y, z ) {\n \n\t\t this.set(\n \n\t\t\t x, 0, 0, 0,\n\t\t\t 0, y, 0, 0,\n\t\t\t 0, 0, z, 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t makeShear( xy, xz, yx, yz, zx, zy ) {\n \n\t\t this.set(\n \n\t\t\t 1, yx, zx, 0,\n\t\t\t xy, 1, zy, 0,\n\t\t\t xz, yz, 1, 0,\n\t\t\t 0, 0, 0, 1\n \n\t\t );\n \n\t\t return this;\n \n\t }\n \n\t compose( position, quaternion, scale ) {\n \n\t\t const te = this.elements;\n \n\t\t const x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t const x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t const xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t const yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t const wx = w * x2, wy = w * y2, wz = w * z2;\n \n\t\t const sx = scale.x, sy = scale.y, sz = scale.z;\n \n\t\t te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t te[ 1 ] = ( xy + wz ) * sx;\n\t\t te[ 2 ] = ( xz - wy ) * sx;\n\t\t te[ 3 ] = 0;\n \n\t\t te[ 4 ] = ( xy - wz ) * sy;\n\t\t te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t te[ 6 ] = ( yz + wx ) * sy;\n\t\t te[ 7 ] = 0;\n \n\t\t te[ 8 ] = ( xz + wy ) * sz;\n\t\t te[ 9 ] = ( yz - wx ) * sz;\n\t\t te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t te[ 11 ] = 0;\n \n\t\t te[ 12 ] = position.x;\n\t\t te[ 13 ] = position.y;\n\t\t te[ 14 ] = position.z;\n\t\t te[ 15 ] = 1;\n \n\t\t return this;\n \n\t }\n \n\t decompose( position, quaternion, scale ) {\n \n\t\t const te = this.elements;\n \n\t\t let sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t const sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t const sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n \n\t\t // if determine is negative, we need to invert one scale\n\t\t const det = this.determinant();\n\t\t if ( det < 0 ) sx = - sx;\n \n\t\t position.x = te[ 12 ];\n\t\t position.y = te[ 13 ];\n\t\t position.z = te[ 14 ];\n \n\t\t // scale the rotation part\n\t\t _m1$2.copy( this );\n \n\t\t const invSX = 1 / sx;\n\t\t const invSY = 1 / sy;\n\t\t const invSZ = 1 / sz;\n \n\t\t _m1$2.elements[ 0 ] *= invSX;\n\t\t _m1$2.elements[ 1 ] *= invSX;\n\t\t _m1$2.elements[ 2 ] *= invSX;\n \n\t\t _m1$2.elements[ 4 ] *= invSY;\n\t\t _m1$2.elements[ 5 ] *= invSY;\n\t\t _m1$2.elements[ 6 ] *= invSY;\n \n\t\t _m1$2.elements[ 8 ] *= invSZ;\n\t\t _m1$2.elements[ 9 ] *= invSZ;\n\t\t _m1$2.elements[ 10 ] *= invSZ;\n \n\t\t quaternion.setFromRotationMatrix( _m1$2 );\n \n\t\t scale.x = sx;\n\t\t scale.y = sy;\n\t\t scale.z = sz;\n \n\t\t return this;\n \n\t }\n \n\t makePerspective( left, right, top, bottom, near, far ) {\n \n\t\t if ( far === undefined ) {\n \n\t\t\t console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n \n\t\t }\n \n\t\t const te = this.elements;\n\t\t const x = 2 * near / ( right - left );\n\t\t const y = 2 * near / ( top - bottom );\n \n\t\t const a = ( right + left ) / ( right - left );\n\t\t const b = ( top + bottom ) / ( top - bottom );\n\t\t const c = - ( far + near ) / ( far - near );\n\t\t const d = - 2 * far * near / ( far - near );\n \n\t\t te[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t te[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t te[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t te[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n \n\t\t return this;\n \n\t }\n \n\t makeOrthographic( left, right, top, bottom, near, far ) {\n \n\t\t const te = this.elements;\n\t\t const w = 1.0 / ( right - left );\n\t\t const h = 1.0 / ( top - bottom );\n\t\t const p = 1.0 / ( far - near );\n \n\t\t const x = ( right + left ) * w;\n\t\t const y = ( top + bottom ) * h;\n\t\t const z = ( far + near ) * p;\n \n\t\t te[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t te[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t te[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t te[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n \n\t\t return this;\n \n\t }\n \n\t equals( matrix ) {\n \n\t\t const te = this.elements;\n\t\t const me = matrix.elements;\n \n\t\t for ( let i = 0; i < 16; i ++ ) {\n \n\t\t\t if ( te[ i ] !== me[ i ] ) return false;\n \n\t\t }\n \n\t\t return true;\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t for ( let i = 0; i < 16; i ++ ) {\n \n\t\t\t this.elements[ i ] = array[ i + offset ];\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t const te = this.elements;\n \n\t\t array[ offset ] = te[ 0 ];\n\t\t array[ offset + 1 ] = te[ 1 ];\n\t\t array[ offset + 2 ] = te[ 2 ];\n\t\t array[ offset + 3 ] = te[ 3 ];\n \n\t\t array[ offset + 4 ] = te[ 4 ];\n\t\t array[ offset + 5 ] = te[ 5 ];\n\t\t array[ offset + 6 ] = te[ 6 ];\n\t\t array[ offset + 7 ] = te[ 7 ];\n \n\t\t array[ offset + 8 ] = te[ 8 ];\n\t\t array[ offset + 9 ] = te[ 9 ];\n\t\t array[ offset + 10 ] = te[ 10 ];\n\t\t array[ offset + 11 ] = te[ 11 ];\n \n\t\t array[ offset + 12 ] = te[ 12 ];\n\t\t array[ offset + 13 ] = te[ 13 ];\n\t\t array[ offset + 14 ] = te[ 14 ];\n\t\t array[ offset + 15 ] = te[ 15 ];\n \n\t\t return array;\n \n\t }\n \n }\n \n Matrix4.prototype.isMatrix4 = true;\n \n const _v1$5 = /*@__PURE__*/ new Vector3();\n const _m1$2 = /*@__PURE__*/ new Matrix4();\n const _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\n const _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\n const _x = /*@__PURE__*/ new Vector3();\n const _y = /*@__PURE__*/ new Vector3();\n const _z = /*@__PURE__*/ new Vector3();\n \n const _matrix$1 = /*@__PURE__*/ new Matrix4();\n const _quaternion$3 = /*@__PURE__*/ new Quaternion();\n \n class Euler {\n \n\t constructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n \n\t\t this._x = x;\n\t\t this._y = y;\n\t\t this._z = z;\n\t\t this._order = order;\n \n\t }\n \n\t get x() {\n \n\t\t return this._x;\n \n\t }\n \n\t set x( value ) {\n \n\t\t this._x = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t get y() {\n \n\t\t return this._y;\n \n\t }\n \n\t set y( value ) {\n \n\t\t this._y = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t get z() {\n \n\t\t return this._z;\n \n\t }\n \n\t set z( value ) {\n \n\t\t this._z = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t get order() {\n \n\t\t return this._order;\n \n\t }\n \n\t set order( value ) {\n \n\t\t this._order = value;\n\t\t this._onChangeCallback();\n \n\t }\n \n\t set( x, y, z, order = this._order ) {\n \n\t\t this._x = x;\n\t\t this._y = y;\n\t\t this._z = z;\n\t\t this._order = order;\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this._x, this._y, this._z, this._order );\n \n\t }\n \n\t copy( euler ) {\n \n\t\t this._x = euler._x;\n\t\t this._y = euler._y;\n\t\t this._z = euler._z;\n\t\t this._order = euler._order;\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t setFromRotationMatrix( m, order = this._order, update = true ) {\n \n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n\t\t const te = m.elements;\n\t\t const m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t const m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t const m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n \n\t\t switch ( order ) {\n \n\t\t\t case 'XYZ':\n \n\t\t\t\t this._y = Math.asin( clamp( m13, - 1, 1 ) );\n \n\t\t\t\t if ( Math.abs( m13 ) < 0.9999999 ) {\n \n\t\t\t\t\t this._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t this._z = Math.atan2( - m12, m11 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t this._x = Math.atan2( m32, m22 );\n\t\t\t\t\t this._z = 0;\n \n\t\t\t\t }\n \n\t\t\t\t break;\n \n\t\t\t case 'YXZ':\n \n\t\t\t\t this._x = Math.asin( - clamp( m23, - 1, 1 ) );\n \n\t\t\t\t if ( Math.abs( m23 ) < 0.9999999 ) {\n \n\t\t\t\t\t this._y = Math.atan2( m13, m33 );\n\t\t\t\t\t this._z = Math.atan2( m21, m22 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t this._y = Math.atan2( - m31, m11 );\n\t\t\t\t\t this._z = 0;\n \n\t\t\t\t }\n \n\t\t\t\t break;\n \n\t\t\t case 'ZXY':\n \n\t\t\t\t this._x = Math.asin( clamp( m32, - 1, 1 ) );\n \n\t\t\t\t if ( Math.abs( m32 ) < 0.9999999 ) {\n \n\t\t\t\t\t this._y = Math.atan2( - m31, m33 );\n\t\t\t\t\t this._z = Math.atan2( - m12, m22 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t this._y = 0;\n\t\t\t\t\t this._z = Math.atan2( m21, m11 );\n \n\t\t\t\t }\n \n\t\t\t\t break;\n \n\t\t\t case 'ZYX':\n \n\t\t\t\t this._y = Math.asin( - clamp( m31, - 1, 1 ) );\n \n\t\t\t\t if ( Math.abs( m31 ) < 0.9999999 ) {\n \n\t\t\t\t\t this._x = Math.atan2( m32, m33 );\n\t\t\t\t\t this._z = Math.atan2( m21, m11 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t this._x = 0;\n\t\t\t\t\t this._z = Math.atan2( - m12, m22 );\n \n\t\t\t\t }\n \n\t\t\t\t break;\n \n\t\t\t case 'YZX':\n \n\t\t\t\t this._z = Math.asin( clamp( m21, - 1, 1 ) );\n \n\t\t\t\t if ( Math.abs( m21 ) < 0.9999999 ) {\n \n\t\t\t\t\t this._x = Math.atan2( - m23, m22 );\n\t\t\t\t\t this._y = Math.atan2( - m31, m11 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t this._x = 0;\n\t\t\t\t\t this._y = Math.atan2( m13, m33 );\n \n\t\t\t\t }\n \n\t\t\t\t break;\n \n\t\t\t case 'XZY':\n \n\t\t\t\t this._z = Math.asin( - clamp( m12, - 1, 1 ) );\n \n\t\t\t\t if ( Math.abs( m12 ) < 0.9999999 ) {\n \n\t\t\t\t\t this._x = Math.atan2( m32, m22 );\n\t\t\t\t\t this._y = Math.atan2( m13, m11 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t this._x = Math.atan2( - m23, m33 );\n\t\t\t\t\t this._y = 0;\n \n\t\t\t\t }\n \n\t\t\t\t break;\n \n\t\t\t default:\n \n\t\t\t\t console.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n \n\t\t }\n \n\t\t this._order = order;\n \n\t\t if ( update === true ) this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t setFromQuaternion( q, order, update ) {\n \n\t\t _matrix$1.makeRotationFromQuaternion( q );\n \n\t\t return this.setFromRotationMatrix( _matrix$1, order, update );\n \n\t }\n \n\t setFromVector3( v, order = this._order ) {\n \n\t\t return this.set( v.x, v.y, v.z, order );\n \n\t }\n \n\t reorder( newOrder ) {\n \n\t\t // WARNING: this discards revolution information -bhouston\n \n\t\t _quaternion$3.setFromEuler( this );\n \n\t\t return this.setFromQuaternion( _quaternion$3, newOrder );\n \n\t }\n \n\t equals( euler ) {\n \n\t\t return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n \n\t }\n \n\t fromArray( array ) {\n \n\t\t this._x = array[ 0 ];\n\t\t this._y = array[ 1 ];\n\t\t this._z = array[ 2 ];\n\t\t if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n \n\t\t this._onChangeCallback();\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t array[ offset ] = this._x;\n\t\t array[ offset + 1 ] = this._y;\n\t\t array[ offset + 2 ] = this._z;\n\t\t array[ offset + 3 ] = this._order;\n \n\t\t return array;\n \n\t }\n \n\t toVector3( optionalResult ) {\n \n\t\t if ( optionalResult ) {\n \n\t\t\t return optionalResult.set( this._x, this._y, this._z );\n \n\t\t } else {\n \n\t\t\t return new Vector3( this._x, this._y, this._z );\n \n\t\t }\n \n\t }\n \n\t _onChange( callback ) {\n \n\t\t this._onChangeCallback = callback;\n \n\t\t return this;\n \n\t }\n \n\t _onChangeCallback() {}\n \n }\n \n Euler.prototype.isEuler = true;\n \n Euler.DefaultOrder = 'XYZ';\n Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n \n class Layers {\n \n\t constructor() {\n \n\t\t this.mask = 1 | 0;\n \n\t }\n \n\t set( channel ) {\n \n\t\t this.mask = 1 << channel | 0;\n \n\t }\n \n\t enable( channel ) {\n \n\t\t this.mask |= 1 << channel | 0;\n \n\t }\n \n\t enableAll() {\n \n\t\t this.mask = 0xffffffff | 0;\n \n\t }\n \n\t toggle( channel ) {\n \n\t\t this.mask ^= 1 << channel | 0;\n \n\t }\n \n\t disable( channel ) {\n \n\t\t this.mask &= ~ ( 1 << channel | 0 );\n \n\t }\n \n\t disableAll() {\n \n\t\t this.mask = 0;\n \n\t }\n \n\t test( layers ) {\n \n\t\t return ( this.mask & layers.mask ) !== 0;\n \n\t }\n \n }\n \n let _object3DId = 0;\n \n const _v1$4 = /*@__PURE__*/ new Vector3();\n const _q1 = /*@__PURE__*/ new Quaternion();\n const _m1$1 = /*@__PURE__*/ new Matrix4();\n const _target = /*@__PURE__*/ new Vector3();\n \n const _position$3 = /*@__PURE__*/ new Vector3();\n const _scale$2 = /*@__PURE__*/ new Vector3();\n const _quaternion$2 = /*@__PURE__*/ new Quaternion();\n \n const _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\n const _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\n const _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n \n const _addedEvent = { type: 'added' };\n const _removedEvent = { type: 'removed' };\n \n class Object3D extends EventDispatcher {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t Object.defineProperty( this, 'id', { value: _object3DId ++ } );\n \n\t\t this.uuid = generateUUID();\n \n\t\t this.name = '';\n\t\t this.type = 'Object3D';\n \n\t\t this.parent = null;\n\t\t this.children = [];\n \n\t\t this.up = Object3D.DefaultUp.clone();\n \n\t\t const position = new Vector3();\n\t\t const rotation = new Euler();\n\t\t const quaternion = new Quaternion();\n\t\t const scale = new Vector3( 1, 1, 1 );\n \n\t\t function onRotationChange() {\n \n\t\t\t quaternion.setFromEuler( rotation, false );\n \n\t\t }\n \n\t\t function onQuaternionChange() {\n \n\t\t\t rotation.setFromQuaternion( quaternion, undefined, false );\n \n\t\t }\n \n\t\t rotation._onChange( onRotationChange );\n\t\t quaternion._onChange( onQuaternionChange );\n \n\t\t Object.defineProperties( this, {\n\t\t\t position: {\n\t\t\t\t configurable: true,\n\t\t\t\t enumerable: true,\n\t\t\t\t value: position\n\t\t\t },\n\t\t\t rotation: {\n\t\t\t\t configurable: true,\n\t\t\t\t enumerable: true,\n\t\t\t\t value: rotation\n\t\t\t },\n\t\t\t quaternion: {\n\t\t\t\t configurable: true,\n\t\t\t\t enumerable: true,\n\t\t\t\t value: quaternion\n\t\t\t },\n\t\t\t scale: {\n\t\t\t\t configurable: true,\n\t\t\t\t enumerable: true,\n\t\t\t\t value: scale\n\t\t\t },\n\t\t\t modelViewMatrix: {\n\t\t\t\t value: new Matrix4()\n\t\t\t },\n\t\t\t normalMatrix: {\n\t\t\t\t value: new Matrix3()\n\t\t\t }\n\t\t } );\n \n\t\t this.matrix = new Matrix4();\n\t\t this.matrixWorld = new Matrix4();\n \n\t\t this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t this.matrixWorldNeedsUpdate = false;\n \n\t\t this.layers = new Layers();\n\t\t this.visible = true;\n \n\t\t this.castShadow = false;\n\t\t this.receiveShadow = false;\n \n\t\t this.frustumCulled = true;\n\t\t this.renderOrder = 0;\n \n\t\t this.animations = [];\n \n\t\t this.userData = {};\n \n\t }\n \n\t onBeforeRender() {}\n\t onAfterRender() {}\n \n\t applyMatrix4( matrix ) {\n \n\t\t if ( this.matrixAutoUpdate ) this.updateMatrix();\n \n\t\t this.matrix.premultiply( matrix );\n \n\t\t this.matrix.decompose( this.position, this.quaternion, this.scale );\n \n\t }\n \n\t applyQuaternion( q ) {\n \n\t\t this.quaternion.premultiply( q );\n \n\t\t return this;\n \n\t }\n \n\t setRotationFromAxisAngle( axis, angle ) {\n \n\t\t // assumes axis is normalized\n \n\t\t this.quaternion.setFromAxisAngle( axis, angle );\n \n\t }\n \n\t setRotationFromEuler( euler ) {\n \n\t\t this.quaternion.setFromEuler( euler, true );\n \n\t }\n \n\t setRotationFromMatrix( m ) {\n \n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n \n\t\t this.quaternion.setFromRotationMatrix( m );\n \n\t }\n \n\t setRotationFromQuaternion( q ) {\n \n\t\t // assumes q is normalized\n \n\t\t this.quaternion.copy( q );\n \n\t }\n \n\t rotateOnAxis( axis, angle ) {\n \n\t\t // rotate object on axis in object space\n\t\t // axis is assumed to be normalized\n \n\t\t _q1.setFromAxisAngle( axis, angle );\n \n\t\t this.quaternion.multiply( _q1 );\n \n\t\t return this;\n \n\t }\n \n\t rotateOnWorldAxis( axis, angle ) {\n \n\t\t // rotate object on axis in world space\n\t\t // axis is assumed to be normalized\n\t\t // method assumes no rotated parent\n \n\t\t _q1.setFromAxisAngle( axis, angle );\n \n\t\t this.quaternion.premultiply( _q1 );\n \n\t\t return this;\n \n\t }\n \n\t rotateX( angle ) {\n \n\t\t return this.rotateOnAxis( _xAxis, angle );\n \n\t }\n \n\t rotateY( angle ) {\n \n\t\t return this.rotateOnAxis( _yAxis, angle );\n \n\t }\n \n\t rotateZ( angle ) {\n \n\t\t return this.rotateOnAxis( _zAxis, angle );\n \n\t }\n \n\t translateOnAxis( axis, distance ) {\n \n\t\t // translate object by distance along axis in object space\n\t\t // axis is assumed to be normalized\n \n\t\t _v1$4.copy( axis ).applyQuaternion( this.quaternion );\n \n\t\t this.position.add( _v1$4.multiplyScalar( distance ) );\n \n\t\t return this;\n \n\t }\n \n\t translateX( distance ) {\n \n\t\t return this.translateOnAxis( _xAxis, distance );\n \n\t }\n \n\t translateY( distance ) {\n \n\t\t return this.translateOnAxis( _yAxis, distance );\n \n\t }\n \n\t translateZ( distance ) {\n \n\t\t return this.translateOnAxis( _zAxis, distance );\n \n\t }\n \n\t localToWorld( vector ) {\n \n\t\t return vector.applyMatrix4( this.matrixWorld );\n \n\t }\n \n\t worldToLocal( vector ) {\n \n\t\t return vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n \n\t }\n \n\t lookAt( x, y, z ) {\n \n\t\t // This method does not support objects having non-uniformly-scaled parent(s)\n \n\t\t if ( x.isVector3 ) {\n \n\t\t\t _target.copy( x );\n \n\t\t } else {\n \n\t\t\t _target.set( x, y, z );\n \n\t\t }\n \n\t\t const parent = this.parent;\n \n\t\t this.updateWorldMatrix( true, false );\n \n\t\t _position$3.setFromMatrixPosition( this.matrixWorld );\n \n\t\t if ( this.isCamera || this.isLight ) {\n \n\t\t\t _m1$1.lookAt( _position$3, _target, this.up );\n \n\t\t } else {\n \n\t\t\t _m1$1.lookAt( _target, _position$3, this.up );\n \n\t\t }\n \n\t\t this.quaternion.setFromRotationMatrix( _m1$1 );\n \n\t\t if ( parent ) {\n \n\t\t\t _m1$1.extractRotation( parent.matrixWorld );\n\t\t\t _q1.setFromRotationMatrix( _m1$1 );\n\t\t\t this.quaternion.premultiply( _q1.invert() );\n \n\t\t }\n \n\t }\n \n\t add( object ) {\n \n\t\t if ( arguments.length > 1 ) {\n \n\t\t\t for ( let i = 0; i < arguments.length; i ++ ) {\n \n\t\t\t\t this.add( arguments[ i ] );\n \n\t\t\t }\n \n\t\t\t return this;\n \n\t\t }\n \n\t\t if ( object === this ) {\n \n\t\t\t console.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\t return this;\n \n\t\t }\n \n\t\t if ( object && object.isObject3D ) {\n \n\t\t\t if ( object.parent !== null ) {\n \n\t\t\t\t object.parent.remove( object );\n \n\t\t\t }\n \n\t\t\t object.parent = this;\n\t\t\t this.children.push( object );\n \n\t\t\t object.dispatchEvent( _addedEvent );\n \n\t\t } else {\n \n\t\t\t console.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t remove( object ) {\n \n\t\t if ( arguments.length > 1 ) {\n \n\t\t\t for ( let i = 0; i < arguments.length; i ++ ) {\n \n\t\t\t\t this.remove( arguments[ i ] );\n \n\t\t\t }\n \n\t\t\t return this;\n \n\t\t }\n \n\t\t const index = this.children.indexOf( object );\n \n\t\t if ( index !== - 1 ) {\n \n\t\t\t object.parent = null;\n\t\t\t this.children.splice( index, 1 );\n \n\t\t\t object.dispatchEvent( _removedEvent );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t removeFromParent() {\n \n\t\t const parent = this.parent;\n \n\t\t if ( parent !== null ) {\n \n\t\t\t parent.remove( this );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t clear() {\n \n\t\t for ( let i = 0; i < this.children.length; i ++ ) {\n \n\t\t\t const object = this.children[ i ];\n \n\t\t\t object.parent = null;\n \n\t\t\t object.dispatchEvent( _removedEvent );\n \n\t\t }\n \n\t\t this.children.length = 0;\n \n\t\t return this;\n \n \n\t }\n \n\t attach( object ) {\n \n\t\t // adds object as a child of this, while maintaining the object's world transform\n \n\t\t this.updateWorldMatrix( true, false );\n \n\t\t _m1$1.copy( this.matrixWorld ).invert();\n \n\t\t if ( object.parent !== null ) {\n \n\t\t\t object.parent.updateWorldMatrix( true, false );\n \n\t\t\t _m1$1.multiply( object.parent.matrixWorld );\n \n\t\t }\n \n\t\t object.applyMatrix4( _m1$1 );\n \n\t\t this.add( object );\n \n\t\t object.updateWorldMatrix( false, true );\n \n\t\t return this;\n \n\t }\n \n\t getObjectById( id ) {\n \n\t\t return this.getObjectByProperty( 'id', id );\n \n\t }\n \n\t getObjectByName( name ) {\n \n\t\t return this.getObjectByProperty( 'name', name );\n \n\t }\n \n\t getObjectByProperty( name, value ) {\n \n\t\t if ( this[ name ] === value ) return this;\n \n\t\t for ( let i = 0, l = this.children.length; i < l; i ++ ) {\n \n\t\t\t const child = this.children[ i ];\n\t\t\t const object = child.getObjectByProperty( name, value );\n \n\t\t\t if ( object !== undefined ) {\n \n\t\t\t\t return object;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return undefined;\n \n\t }\n \n\t getWorldPosition( target ) {\n \n\t\t this.updateWorldMatrix( true, false );\n \n\t\t return target.setFromMatrixPosition( this.matrixWorld );\n \n\t }\n \n\t getWorldQuaternion( target ) {\n \n\t\t this.updateWorldMatrix( true, false );\n \n\t\t this.matrixWorld.decompose( _position$3, target, _scale$2 );\n \n\t\t return target;\n \n\t }\n \n\t getWorldScale( target ) {\n \n\t\t this.updateWorldMatrix( true, false );\n \n\t\t this.matrixWorld.decompose( _position$3, _quaternion$2, target );\n \n\t\t return target;\n \n\t }\n \n\t getWorldDirection( target ) {\n \n\t\t this.updateWorldMatrix( true, false );\n \n\t\t const e = this.matrixWorld.elements;\n \n\t\t return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n \n\t }\n \n\t raycast() {}\n \n\t traverse( callback ) {\n \n\t\t callback( this );\n \n\t\t const children = this.children;\n \n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t children[ i ].traverse( callback );\n \n\t\t }\n \n\t }\n \n\t traverseVisible( callback ) {\n \n\t\t if ( this.visible === false ) return;\n \n\t\t callback( this );\n \n\t\t const children = this.children;\n \n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t children[ i ].traverseVisible( callback );\n \n\t\t }\n \n\t }\n \n\t traverseAncestors( callback ) {\n \n\t\t const parent = this.parent;\n \n\t\t if ( parent !== null ) {\n \n\t\t\t callback( parent );\n \n\t\t\t parent.traverseAncestors( callback );\n \n\t\t }\n \n\t }\n \n\t updateMatrix() {\n \n\t\t this.matrix.compose( this.position, this.quaternion, this.scale );\n \n\t\t this.matrixWorldNeedsUpdate = true;\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t if ( this.matrixAutoUpdate ) this.updateMatrix();\n \n\t\t if ( this.matrixWorldNeedsUpdate || force ) {\n \n\t\t\t if ( this.parent === null ) {\n \n\t\t\t\t this.matrixWorld.copy( this.matrix );\n \n\t\t\t } else {\n \n\t\t\t\t this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n \n\t\t\t }\n \n\t\t\t this.matrixWorldNeedsUpdate = false;\n \n\t\t\t force = true;\n \n\t\t }\n \n\t\t // update children\n \n\t\t const children = this.children;\n \n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t children[ i ].updateMatrixWorld( force );\n \n\t\t }\n \n\t }\n \n\t updateWorldMatrix( updateParents, updateChildren ) {\n \n\t\t const parent = this.parent;\n \n\t\t if ( updateParents === true && parent !== null ) {\n \n\t\t\t parent.updateWorldMatrix( true, false );\n \n\t\t }\n \n\t\t if ( this.matrixAutoUpdate ) this.updateMatrix();\n \n\t\t if ( this.parent === null ) {\n \n\t\t\t this.matrixWorld.copy( this.matrix );\n \n\t\t } else {\n \n\t\t\t this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n \n\t\t }\n \n\t\t // update children\n \n\t\t if ( updateChildren === true ) {\n \n\t\t\t const children = this.children;\n \n\t\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t\t children[ i ].updateWorldMatrix( false, true );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t // meta is a string when called from JSON.stringify\n\t\t const isRootObject = ( meta === undefined || typeof meta === 'string' );\n \n\t\t const output = {};\n \n\t\t // meta is a hash used to collect geometries, materials.\n\t\t // not providing it implies that this is the root object\n\t\t // being serialized.\n\t\t if ( isRootObject ) {\n \n\t\t\t // initialize meta obj\n\t\t\t meta = {\n\t\t\t\t geometries: {},\n\t\t\t\t materials: {},\n\t\t\t\t textures: {},\n\t\t\t\t images: {},\n\t\t\t\t shapes: {},\n\t\t\t\t skeletons: {},\n\t\t\t\t animations: {}\n\t\t\t };\n \n\t\t\t output.metadata = {\n\t\t\t\t version: 4.5,\n\t\t\t\t type: 'Object',\n\t\t\t\t generator: 'Object3D.toJSON'\n\t\t\t };\n \n\t\t }\n \n\t\t // standard Object3D serialization\n \n\t\t const object = {};\n \n\t\t object.uuid = this.uuid;\n\t\t object.type = this.type;\n \n\t\t if ( this.name !== '' ) object.name = this.name;\n\t\t if ( this.castShadow === true ) object.castShadow = true;\n\t\t if ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\t if ( this.visible === false ) object.visible = false;\n\t\t if ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\t if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\t if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n \n\t\t object.layers = this.layers.mask;\n\t\t object.matrix = this.matrix.toArray();\n \n\t\t if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n \n\t\t // object specific properties\n \n\t\t if ( this.isInstancedMesh ) {\n \n\t\t\t object.type = 'InstancedMesh';\n\t\t\t object.count = this.count;\n\t\t\t object.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t if ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n \n\t\t }\n \n\t\t //\n \n\t\t function serialize( library, element ) {\n \n\t\t\t if ( library[ element.uuid ] === undefined ) {\n \n\t\t\t\t library[ element.uuid ] = element.toJSON( meta );\n \n\t\t\t }\n \n\t\t\t return element.uuid;\n \n\t\t }\n \n\t\t if ( this.isScene ) {\n \n\t\t\t if ( this.background ) {\n \n\t\t\t\t if ( this.background.isColor ) {\n \n\t\t\t\t\t object.background = this.background.toJSON();\n \n\t\t\t\t } else if ( this.background.isTexture ) {\n \n\t\t\t\t\t object.background = this.background.toJSON( meta ).uuid;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( this.environment && this.environment.isTexture ) {\n \n\t\t\t\t object.environment = this.environment.toJSON( meta ).uuid;\n \n\t\t\t }\n \n\t\t } else if ( this.isMesh || this.isLine || this.isPoints ) {\n \n\t\t\t object.geometry = serialize( meta.geometries, this.geometry );\n \n\t\t\t const parameters = this.geometry.parameters;\n \n\t\t\t if ( parameters !== undefined && parameters.shapes !== undefined ) {\n \n\t\t\t\t const shapes = parameters.shapes;\n \n\t\t\t\t if ( Array.isArray( shapes ) ) {\n \n\t\t\t\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n\t\t\t\t\t\t const shape = shapes[ i ];\n \n\t\t\t\t\t\t serialize( meta.shapes, shape );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t serialize( meta.shapes, shapes );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( this.isSkinnedMesh ) {\n \n\t\t\t object.bindMode = this.bindMode;\n\t\t\t object.bindMatrix = this.bindMatrix.toArray();\n \n\t\t\t if ( this.skeleton !== undefined ) {\n \n\t\t\t\t serialize( meta.skeletons, this.skeleton );\n \n\t\t\t\t object.skeleton = this.skeleton.uuid;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( this.material !== undefined ) {\n \n\t\t\t if ( Array.isArray( this.material ) ) {\n \n\t\t\t\t const uuids = [];\n \n\t\t\t\t for ( let i = 0, l = this.material.length; i < l; i ++ ) {\n \n\t\t\t\t\t uuids.push( serialize( meta.materials, this.material[ i ] ) );\n \n\t\t\t\t }\n \n\t\t\t\t object.material = uuids;\n \n\t\t\t } else {\n \n\t\t\t\t object.material = serialize( meta.materials, this.material );\n \n\t\t\t }\n \n\t\t }\n \n\t\t //\n \n\t\t if ( this.children.length > 0 ) {\n \n\t\t\t object.children = [];\n \n\t\t\t for ( let i = 0; i < this.children.length; i ++ ) {\n \n\t\t\t\t object.children.push( this.children[ i ].toJSON( meta ).object );\n \n\t\t\t }\n \n\t\t }\n \n\t\t //\n \n\t\t if ( this.animations.length > 0 ) {\n \n\t\t\t object.animations = [];\n \n\t\t\t for ( let i = 0; i < this.animations.length; i ++ ) {\n \n\t\t\t\t const animation = this.animations[ i ];\n \n\t\t\t\t object.animations.push( serialize( meta.animations, animation ) );\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( isRootObject ) {\n \n\t\t\t const geometries = extractFromCache( meta.geometries );\n\t\t\t const materials = extractFromCache( meta.materials );\n\t\t\t const textures = extractFromCache( meta.textures );\n\t\t\t const images = extractFromCache( meta.images );\n\t\t\t const shapes = extractFromCache( meta.shapes );\n\t\t\t const skeletons = extractFromCache( meta.skeletons );\n\t\t\t const animations = extractFromCache( meta.animations );\n \n\t\t\t if ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\t if ( materials.length > 0 ) output.materials = materials;\n\t\t\t if ( textures.length > 0 ) output.textures = textures;\n\t\t\t if ( images.length > 0 ) output.images = images;\n\t\t\t if ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\t if ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\t if ( animations.length > 0 ) output.animations = animations;\n \n\t\t }\n \n\t\t output.object = object;\n \n\t\t return output;\n \n\t\t // extract data from the cache hash\n\t\t // remove metadata on each item\n\t\t // and return as array\n\t\t function extractFromCache( cache ) {\n \n\t\t\t const values = [];\n\t\t\t for ( const key in cache ) {\n \n\t\t\t\t const data = cache[ key ];\n\t\t\t\t delete data.metadata;\n\t\t\t\t values.push( data );\n \n\t\t\t }\n \n\t\t\t return values;\n \n\t\t }\n \n\t }\n \n\t clone( recursive ) {\n \n\t\t return new this.constructor().copy( this, recursive );\n \n\t }\n \n\t copy( source, recursive = true ) {\n \n\t\t this.name = source.name;\n \n\t\t this.up.copy( source.up );\n \n\t\t this.position.copy( source.position );\n\t\t this.rotation.order = source.rotation.order;\n\t\t this.quaternion.copy( source.quaternion );\n\t\t this.scale.copy( source.scale );\n \n\t\t this.matrix.copy( source.matrix );\n\t\t this.matrixWorld.copy( source.matrixWorld );\n \n\t\t this.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n \n\t\t this.layers.mask = source.layers.mask;\n\t\t this.visible = source.visible;\n \n\t\t this.castShadow = source.castShadow;\n\t\t this.receiveShadow = source.receiveShadow;\n \n\t\t this.frustumCulled = source.frustumCulled;\n\t\t this.renderOrder = source.renderOrder;\n \n\t\t this.userData = JSON.parse( JSON.stringify( source.userData ) );\n \n\t\t if ( recursive === true ) {\n \n\t\t\t for ( let i = 0; i < source.children.length; i ++ ) {\n \n\t\t\t\t const child = source.children[ i ];\n\t\t\t\t this.add( child.clone() );\n \n\t\t\t }\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n }\n \n Object3D.DefaultUp = new Vector3( 0, 1, 0 );\n Object3D.DefaultMatrixAutoUpdate = true;\n \n Object3D.prototype.isObject3D = true;\n \n const _v0$1 = /*@__PURE__*/ new Vector3();\n const _v1$3 = /*@__PURE__*/ new Vector3();\n const _v2$2 = /*@__PURE__*/ new Vector3();\n const _v3$1 = /*@__PURE__*/ new Vector3();\n \n const _vab = /*@__PURE__*/ new Vector3();\n const _vac = /*@__PURE__*/ new Vector3();\n const _vbc = /*@__PURE__*/ new Vector3();\n const _vap = /*@__PURE__*/ new Vector3();\n const _vbp = /*@__PURE__*/ new Vector3();\n const _vcp = /*@__PURE__*/ new Vector3();\n \n class Triangle {\n \n\t constructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n \n\t\t this.a = a;\n\t\t this.b = b;\n\t\t this.c = c;\n \n\t }\n \n\t static getNormal( a, b, c, target ) {\n \n\t\t target.subVectors( c, b );\n\t\t _v0$1.subVectors( a, b );\n\t\t target.cross( _v0$1 );\n \n\t\t const targetLengthSq = target.lengthSq();\n\t\t if ( targetLengthSq > 0 ) {\n \n\t\t\t return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n \n\t\t }\n \n\t\t return target.set( 0, 0, 0 );\n \n\t }\n \n\t // static/instance method to calculate barycentric coordinates\n\t // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t static getBarycoord( point, a, b, c, target ) {\n \n\t\t _v0$1.subVectors( c, a );\n\t\t _v1$3.subVectors( b, a );\n\t\t _v2$2.subVectors( point, a );\n \n\t\t const dot00 = _v0$1.dot( _v0$1 );\n\t\t const dot01 = _v0$1.dot( _v1$3 );\n\t\t const dot02 = _v0$1.dot( _v2$2 );\n\t\t const dot11 = _v1$3.dot( _v1$3 );\n\t\t const dot12 = _v1$3.dot( _v2$2 );\n \n\t\t const denom = ( dot00 * dot11 - dot01 * dot01 );\n \n\t\t // collinear or singular triangle\n\t\t if ( denom === 0 ) {\n \n\t\t\t // arbitrary location outside of triangle?\n\t\t\t // not sure if this is the best idea, maybe should be returning undefined\n\t\t\t return target.set( - 2, - 1, - 1 );\n \n\t\t }\n \n\t\t const invDenom = 1 / denom;\n\t\t const u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t const v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n \n\t\t // barycentric coordinates must always sum to 1\n\t\t return target.set( 1 - u - v, v, u );\n \n\t }\n \n\t static containsPoint( point, a, b, c ) {\n \n\t\t this.getBarycoord( point, a, b, c, _v3$1 );\n \n\t\t return ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n \n\t }\n \n\t static getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n \n\t\t this.getBarycoord( point, p1, p2, p3, _v3$1 );\n \n\t\t target.set( 0, 0 );\n\t\t target.addScaledVector( uv1, _v3$1.x );\n\t\t target.addScaledVector( uv2, _v3$1.y );\n\t\t target.addScaledVector( uv3, _v3$1.z );\n \n\t\t return target;\n \n\t }\n \n\t static isFrontFacing( a, b, c, direction ) {\n \n\t\t _v0$1.subVectors( c, b );\n\t\t _v1$3.subVectors( a, b );\n \n\t\t // strictly front facing\n\t\t return ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n \n\t }\n \n\t set( a, b, c ) {\n \n\t\t this.a.copy( a );\n\t\t this.b.copy( b );\n\t\t this.c.copy( c );\n \n\t\t return this;\n \n\t }\n \n\t setFromPointsAndIndices( points, i0, i1, i2 ) {\n \n\t\t this.a.copy( points[ i0 ] );\n\t\t this.b.copy( points[ i1 ] );\n\t\t this.c.copy( points[ i2 ] );\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t copy( triangle ) {\n \n\t\t this.a.copy( triangle.a );\n\t\t this.b.copy( triangle.b );\n\t\t this.c.copy( triangle.c );\n \n\t\t return this;\n \n\t }\n \n\t getArea() {\n \n\t\t _v0$1.subVectors( this.c, this.b );\n\t\t _v1$3.subVectors( this.a, this.b );\n \n\t\t return _v0$1.cross( _v1$3 ).length() * 0.5;\n \n\t }\n \n\t getMidpoint( target ) {\n \n\t\t return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n \n\t }\n \n\t getNormal( target ) {\n \n\t\t return Triangle.getNormal( this.a, this.b, this.c, target );\n \n\t }\n \n\t getPlane( target ) {\n \n\t\t return target.setFromCoplanarPoints( this.a, this.b, this.c );\n \n\t }\n \n\t getBarycoord( point, target ) {\n \n\t\t return Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n \n\t }\n \n\t getUV( point, uv1, uv2, uv3, target ) {\n \n\t\t return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n \n\t }\n \n\t containsPoint( point ) {\n \n\t\t return Triangle.containsPoint( point, this.a, this.b, this.c );\n \n\t }\n \n\t isFrontFacing( direction ) {\n \n\t\t return Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n \n\t }\n \n\t intersectsBox( box ) {\n \n\t\t return box.intersectsTriangle( this );\n \n\t }\n \n\t closestPointToPoint( p, target ) {\n \n\t\t const a = this.a, b = this.b, c = this.c;\n\t\t let v, w;\n \n\t\t // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t // basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t // the point lies in with the minimum amount of redundant computation.\n \n\t\t _vab.subVectors( b, a );\n\t\t _vac.subVectors( c, a );\n\t\t _vap.subVectors( p, a );\n\t\t const d1 = _vab.dot( _vap );\n\t\t const d2 = _vac.dot( _vap );\n\t\t if ( d1 <= 0 && d2 <= 0 ) {\n \n\t\t\t // vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t return target.copy( a );\n \n\t\t }\n \n\t\t _vbp.subVectors( p, b );\n\t\t const d3 = _vab.dot( _vbp );\n\t\t const d4 = _vac.dot( _vbp );\n\t\t if ( d3 >= 0 && d4 <= d3 ) {\n \n\t\t\t // vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t return target.copy( b );\n \n\t\t }\n \n\t\t const vc = d1 * d4 - d3 * d2;\n\t\t if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n \n\t\t\t v = d1 / ( d1 - d3 );\n\t\t\t // edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t return target.copy( a ).addScaledVector( _vab, v );\n \n\t\t }\n \n\t\t _vcp.subVectors( p, c );\n\t\t const d5 = _vab.dot( _vcp );\n\t\t const d6 = _vac.dot( _vcp );\n\t\t if ( d6 >= 0 && d5 <= d6 ) {\n \n\t\t\t // vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t return target.copy( c );\n \n\t\t }\n \n\t\t const vb = d5 * d2 - d1 * d6;\n\t\t if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n \n\t\t\t w = d2 / ( d2 - d6 );\n\t\t\t // edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t return target.copy( a ).addScaledVector( _vac, w );\n \n\t\t }\n \n\t\t const va = d3 * d6 - d5 * d4;\n\t\t if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n \n\t\t\t _vbc.subVectors( c, b );\n\t\t\t w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t // edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t return target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n \n\t\t }\n \n\t\t // face region\n\t\t const denom = 1 / ( va + vb + vc );\n\t\t // u = va * denom\n\t\t v = vb * denom;\n\t\t w = vc * denom;\n \n\t\t return target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n \n\t }\n \n\t equals( triangle ) {\n \n\t\t return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n \n\t }\n \n }\n \n let materialId = 0;\n \n class Material extends EventDispatcher {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t Object.defineProperty( this, 'id', { value: materialId ++ } );\n \n\t\t this.uuid = generateUUID();\n \n\t\t this.name = '';\n\t\t this.type = 'Material';\n \n\t\t this.fog = true;\n \n\t\t this.blending = NormalBlending;\n\t\t this.side = FrontSide;\n\t\t this.vertexColors = false;\n \n\t\t this.opacity = 1;\n\t\t this.transparent = false;\n \n\t\t this.blendSrc = SrcAlphaFactor;\n\t\t this.blendDst = OneMinusSrcAlphaFactor;\n\t\t this.blendEquation = AddEquation;\n\t\t this.blendSrcAlpha = null;\n\t\t this.blendDstAlpha = null;\n\t\t this.blendEquationAlpha = null;\n \n\t\t this.depthFunc = LessEqualDepth;\n\t\t this.depthTest = true;\n\t\t this.depthWrite = true;\n \n\t\t this.stencilWriteMask = 0xff;\n\t\t this.stencilFunc = AlwaysStencilFunc;\n\t\t this.stencilRef = 0;\n\t\t this.stencilFuncMask = 0xff;\n\t\t this.stencilFail = KeepStencilOp;\n\t\t this.stencilZFail = KeepStencilOp;\n\t\t this.stencilZPass = KeepStencilOp;\n\t\t this.stencilWrite = false;\n \n\t\t this.clippingPlanes = null;\n\t\t this.clipIntersection = false;\n\t\t this.clipShadows = false;\n \n\t\t this.shadowSide = null;\n \n\t\t this.colorWrite = true;\n \n\t\t this.precision = null; // override the renderer's default precision for this material\n \n\t\t this.polygonOffset = false;\n\t\t this.polygonOffsetFactor = 0;\n\t\t this.polygonOffsetUnits = 0;\n \n\t\t this.dithering = false;\n \n\t\t this.alphaTest = 0;\n\t\t this.alphaToCoverage = false;\n\t\t this.premultipliedAlpha = false;\n \n\t\t this.visible = true;\n \n\t\t this.toneMapped = true;\n \n\t\t this.userData = {};\n \n\t\t this.version = 0;\n \n\t }\n \n\t onBuild( /* shaderobject, renderer */ ) {}\n \n\t onBeforeCompile( /* shaderobject, renderer */ ) {}\n \n\t customProgramCacheKey() {\n \n\t\t return this.onBeforeCompile.toString();\n \n\t }\n \n\t setValues( values ) {\n \n\t\t if ( values === undefined ) return;\n \n\t\t for ( const key in values ) {\n \n\t\t\t const newValue = values[ key ];\n \n\t\t\t if ( newValue === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\t continue;\n \n\t\t\t }\n \n\t\t\t // for backward compatability if shading is set in the constructor\n\t\t\t if ( key === 'shading' ) {\n \n\t\t\t\t console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t this.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t continue;\n \n\t\t\t }\n \n\t\t\t const currentValue = this[ key ];\n \n\t\t\t if ( currentValue === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\t continue;\n \n\t\t\t }\n \n\t\t\t if ( currentValue && currentValue.isColor ) {\n \n\t\t\t\t currentValue.set( newValue );\n \n\t\t\t } else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n \n\t\t\t\t currentValue.copy( newValue );\n \n\t\t\t } else {\n \n\t\t\t\t this[ key ] = newValue;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const isRoot = ( meta === undefined || typeof meta === 'string' );\n \n\t\t if ( isRoot ) {\n \n\t\t\t meta = {\n\t\t\t\t textures: {},\n\t\t\t\t images: {}\n\t\t\t };\n \n\t\t }\n \n\t\t const data = {\n\t\t\t metadata: {\n\t\t\t\t version: 4.5,\n\t\t\t\t type: 'Material',\n\t\t\t\t generator: 'Material.toJSON'\n\t\t\t }\n\t\t };\n \n\t\t // standard Material serialization\n\t\t data.uuid = this.uuid;\n\t\t data.type = this.type;\n \n\t\t if ( this.name !== '' ) data.name = this.name;\n \n\t\t if ( this.color && this.color.isColor ) data.color = this.color.getHex();\n \n\t\t if ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\t if ( this.metalness !== undefined ) data.metalness = this.metalness;\n \n\t\t if ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\t if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\t if ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n \n\t\t if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\t if ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\t if ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\t if ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n \n\t\t if ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n \n\t\t\t data.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n \n\t\t }\n \n\t\t if ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n \n\t\t\t data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n \n\t\t }\n \n\t\t if ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n \n\t\t\t data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\t data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n \n\t\t }\n \n\t\t if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\t if ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\t if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n \n\t\t if ( this.lightMap && this.lightMap.isTexture ) {\n \n\t\t\t data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\t data.lightMapIntensity = this.lightMapIntensity;\n \n\t\t }\n \n\t\t if ( this.aoMap && this.aoMap.isTexture ) {\n \n\t\t\t data.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t data.aoMapIntensity = this.aoMapIntensity;\n \n\t\t }\n \n\t\t if ( this.bumpMap && this.bumpMap.isTexture ) {\n \n\t\t\t data.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t data.bumpScale = this.bumpScale;\n \n\t\t }\n \n\t\t if ( this.normalMap && this.normalMap.isTexture ) {\n \n\t\t\t data.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t data.normalMapType = this.normalMapType;\n\t\t\t data.normalScale = this.normalScale.toArray();\n \n\t\t }\n \n\t\t if ( this.displacementMap && this.displacementMap.isTexture ) {\n \n\t\t\t data.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t data.displacementScale = this.displacementScale;\n\t\t\t data.displacementBias = this.displacementBias;\n \n\t\t }\n \n\t\t if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\t if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n \n\t\t if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\t if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n \n\t\t if ( this.envMap && this.envMap.isTexture ) {\n \n\t\t\t data.envMap = this.envMap.toJSON( meta ).uuid;\n \n\t\t\t if ( this.combine !== undefined ) data.combine = this.combine;\n \n\t\t }\n \n\t\t if ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\t if ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\t if ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n \n\t\t if ( this.gradientMap && this.gradientMap.isTexture ) {\n \n\t\t\t data.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n \n\t\t }\n \n\t\t if ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\t if ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\t if ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\t if ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\t if ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\t if ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n \n\t\t if ( this.size !== undefined ) data.size = this.size;\n\t\t if ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\t if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n \n\t\t if ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\t if ( this.side !== FrontSide ) data.side = this.side;\n\t\t if ( this.vertexColors ) data.vertexColors = true;\n \n\t\t if ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\t if ( this.transparent === true ) data.transparent = this.transparent;\n \n\t\t data.depthFunc = this.depthFunc;\n\t\t data.depthTest = this.depthTest;\n\t\t data.depthWrite = this.depthWrite;\n\t\t data.colorWrite = this.colorWrite;\n \n\t\t data.stencilWrite = this.stencilWrite;\n\t\t data.stencilWriteMask = this.stencilWriteMask;\n\t\t data.stencilFunc = this.stencilFunc;\n\t\t data.stencilRef = this.stencilRef;\n\t\t data.stencilFuncMask = this.stencilFuncMask;\n\t\t data.stencilFail = this.stencilFail;\n\t\t data.stencilZFail = this.stencilZFail;\n\t\t data.stencilZPass = this.stencilZPass;\n \n\t\t // rotation (SpriteMaterial)\n\t\t if ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n \n\t\t if ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\t if ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t if ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n \n\t\t if ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\t if ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\t if ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\t if ( this.scale !== undefined ) data.scale = this.scale;\n \n\t\t if ( this.dithering === true ) data.dithering = true;\n \n\t\t if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\t if ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\t if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n \n\t\t if ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\t if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\t if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n \n\t\t if ( this.morphTargets === true ) data.morphTargets = true;\n\t\t if ( this.morphNormals === true ) data.morphNormals = true;\n \n\t\t if ( this.flatShading === true ) data.flatShading = this.flatShading;\n \n\t\t if ( this.visible === false ) data.visible = false;\n \n\t\t if ( this.toneMapped === false ) data.toneMapped = false;\n \n\t\t if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n \n\t\t // TODO: Copied from Object3D.toJSON\n \n\t\t function extractFromCache( cache ) {\n \n\t\t\t const values = [];\n \n\t\t\t for ( const key in cache ) {\n \n\t\t\t\t const data = cache[ key ];\n\t\t\t\t delete data.metadata;\n\t\t\t\t values.push( data );\n \n\t\t\t }\n \n\t\t\t return values;\n \n\t\t }\n \n\t\t if ( isRoot ) {\n \n\t\t\t const textures = extractFromCache( meta.textures );\n\t\t\t const images = extractFromCache( meta.images );\n \n\t\t\t if ( textures.length > 0 ) data.textures = textures;\n\t\t\t if ( images.length > 0 ) data.images = images;\n \n\t\t }\n \n\t\t return data;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.name = source.name;\n \n\t\t this.fog = source.fog;\n \n\t\t this.blending = source.blending;\n\t\t this.side = source.side;\n\t\t this.vertexColors = source.vertexColors;\n \n\t\t this.opacity = source.opacity;\n\t\t this.transparent = source.transparent;\n \n\t\t this.blendSrc = source.blendSrc;\n\t\t this.blendDst = source.blendDst;\n\t\t this.blendEquation = source.blendEquation;\n\t\t this.blendSrcAlpha = source.blendSrcAlpha;\n\t\t this.blendDstAlpha = source.blendDstAlpha;\n\t\t this.blendEquationAlpha = source.blendEquationAlpha;\n \n\t\t this.depthFunc = source.depthFunc;\n\t\t this.depthTest = source.depthTest;\n\t\t this.depthWrite = source.depthWrite;\n \n\t\t this.stencilWriteMask = source.stencilWriteMask;\n\t\t this.stencilFunc = source.stencilFunc;\n\t\t this.stencilRef = source.stencilRef;\n\t\t this.stencilFuncMask = source.stencilFuncMask;\n\t\t this.stencilFail = source.stencilFail;\n\t\t this.stencilZFail = source.stencilZFail;\n\t\t this.stencilZPass = source.stencilZPass;\n\t\t this.stencilWrite = source.stencilWrite;\n \n\t\t const srcPlanes = source.clippingPlanes;\n\t\t let dstPlanes = null;\n \n\t\t if ( srcPlanes !== null ) {\n \n\t\t\t const n = srcPlanes.length;\n\t\t\t dstPlanes = new Array( n );\n \n\t\t\t for ( let i = 0; i !== n; ++ i ) {\n \n\t\t\t\t dstPlanes[ i ] = srcPlanes[ i ].clone();\n \n\t\t\t }\n \n\t\t }\n \n\t\t this.clippingPlanes = dstPlanes;\n\t\t this.clipIntersection = source.clipIntersection;\n\t\t this.clipShadows = source.clipShadows;\n \n\t\t this.shadowSide = source.shadowSide;\n \n\t\t this.colorWrite = source.colorWrite;\n \n\t\t this.precision = source.precision;\n \n\t\t this.polygonOffset = source.polygonOffset;\n\t\t this.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t this.polygonOffsetUnits = source.polygonOffsetUnits;\n \n\t\t this.dithering = source.dithering;\n \n\t\t this.alphaTest = source.alphaTest;\n\t\t this.alphaToCoverage = source.alphaToCoverage;\n\t\t this.premultipliedAlpha = source.premultipliedAlpha;\n \n\t\t this.visible = source.visible;\n \n\t\t this.toneMapped = source.toneMapped;\n \n\t\t this.userData = JSON.parse( JSON.stringify( source.userData ) );\n \n\t\t return this;\n \n\t }\n \n\t dispose() {\n \n\t\t this.dispatchEvent( { type: 'dispose' } );\n \n\t }\n \n\t set needsUpdate( value ) {\n \n\t\t if ( value === true ) this.version ++;\n \n\t }\n \n }\n \n Material.prototype.isMaterial = true;\n \n const _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t 'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t 'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t 'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t 'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t 'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t 'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t 'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t 'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t 'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t 'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t 'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t 'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t 'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t 'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t 'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t 'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t 'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t 'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t 'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t 'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t 'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t 'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t 'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n \n const _hslA = { h: 0, s: 0, l: 0 };\n const _hslB = { h: 0, s: 0, l: 0 };\n \n function hue2rgb( p, q, t ) {\n \n\t if ( t < 0 ) t += 1;\n\t if ( t > 1 ) t -= 1;\n\t if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t if ( t < 1 / 2 ) return q;\n\t if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t return p;\n \n }\n \n function SRGBToLinear( c ) {\n \n\t return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n \n }\n \n function LinearToSRGB( c ) {\n \n\t return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n \n }\n \n class Color {\n \n\t constructor( r, g, b ) {\n \n\t\t if ( g === undefined && b === undefined ) {\n \n\t\t\t // r is THREE.Color, hex or string\n\t\t\t return this.set( r );\n \n\t\t }\n \n\t\t return this.setRGB( r, g, b );\n \n\t }\n \n\t set( value ) {\n \n\t\t if ( value && value.isColor ) {\n \n\t\t\t this.copy( value );\n \n\t\t } else if ( typeof value === 'number' ) {\n \n\t\t\t this.setHex( value );\n \n\t\t } else if ( typeof value === 'string' ) {\n \n\t\t\t this.setStyle( value );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setScalar( scalar ) {\n \n\t\t this.r = scalar;\n\t\t this.g = scalar;\n\t\t this.b = scalar;\n \n\t\t return this;\n \n\t }\n \n\t setHex( hex ) {\n \n\t\t hex = Math.floor( hex );\n \n\t\t this.r = ( hex >> 16 & 255 ) / 255;\n\t\t this.g = ( hex >> 8 & 255 ) / 255;\n\t\t this.b = ( hex & 255 ) / 255;\n \n\t\t return this;\n \n\t }\n \n\t setRGB( r, g, b ) {\n \n\t\t this.r = r;\n\t\t this.g = g;\n\t\t this.b = b;\n \n\t\t return this;\n \n\t }\n \n\t setHSL( h, s, l ) {\n \n\t\t // h,s,l ranges are in 0.0 - 1.0\n\t\t h = euclideanModulo( h, 1 );\n\t\t s = clamp( s, 0, 1 );\n\t\t l = clamp( l, 0, 1 );\n \n\t\t if ( s === 0 ) {\n \n\t\t\t this.r = this.g = this.b = l;\n \n\t\t } else {\n \n\t\t\t const p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t const q = ( 2 * l ) - p;\n \n\t\t\t this.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t this.g = hue2rgb( q, p, h );\n\t\t\t this.b = hue2rgb( q, p, h - 1 / 3 );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setStyle( style ) {\n \n\t\t function handleAlpha( string ) {\n \n\t\t\t if ( string === undefined ) return;\n \n\t\t\t if ( parseFloat( string ) < 1 ) {\n \n\t\t\t\t console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n \n\t\t\t }\n \n\t\t }\n \n \n\t\t let m;\n \n\t\t if ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n \n\t\t\t // rgb / hsl\n \n\t\t\t let color;\n\t\t\t const name = m[ 1 ];\n\t\t\t const components = m[ 2 ];\n \n\t\t\t switch ( name ) {\n \n\t\t\t\t case 'rgb':\n\t\t\t\t case 'rgba':\n \n\t\t\t\t\t if ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n \n\t\t\t\t\t\t // rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n \n\t\t\t\t\t\t handleAlpha( color[ 4 ] );\n \n\t\t\t\t\t\t return this;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n \n\t\t\t\t\t\t // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n \n\t\t\t\t\t\t handleAlpha( color[ 4 ] );\n \n\t\t\t\t\t\t return this;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t break;\n \n\t\t\t\t case 'hsl':\n\t\t\t\t case 'hsla':\n \n\t\t\t\t\t if ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n \n\t\t\t\t\t\t // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t const h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t const s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t const l = parseInt( color[ 3 ], 10 ) / 100;\n \n\t\t\t\t\t\t handleAlpha( color[ 4 ] );\n \n\t\t\t\t\t\t return this.setHSL( h, s, l );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t break;\n \n\t\t\t }\n \n\t\t } else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n \n\t\t\t // hex color\n \n\t\t\t const hex = m[ 1 ];\n\t\t\t const size = hex.length;\n \n\t\t\t if ( size === 3 ) {\n \n\t\t\t\t // #ff0\n\t\t\t\t this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n \n\t\t\t\t return this;\n \n\t\t\t } else if ( size === 6 ) {\n \n\t\t\t\t // #ff0000\n\t\t\t\t this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n \n\t\t\t\t return this;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( style && style.length > 0 ) {\n \n\t\t\t return this.setColorName( style );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setColorName( style ) {\n \n\t\t // color keywords\n\t\t const hex = _colorKeywords[ style.toLowerCase() ];\n \n\t\t if ( hex !== undefined ) {\n \n\t\t\t // red\n\t\t\t this.setHex( hex );\n \n\t\t } else {\n \n\t\t\t // unknown color\n\t\t\t console.warn( 'THREE.Color: Unknown color ' + style );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this.r, this.g, this.b );\n \n\t }\n \n\t copy( color ) {\n \n\t\t this.r = color.r;\n\t\t this.g = color.g;\n\t\t this.b = color.b;\n \n\t\t return this;\n \n\t }\n \n\t copyGammaToLinear( color, gammaFactor = 2.0 ) {\n \n\t\t this.r = Math.pow( color.r, gammaFactor );\n\t\t this.g = Math.pow( color.g, gammaFactor );\n\t\t this.b = Math.pow( color.b, gammaFactor );\n \n\t\t return this;\n \n\t }\n \n\t copyLinearToGamma( color, gammaFactor = 2.0 ) {\n \n\t\t const safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n \n\t\t this.r = Math.pow( color.r, safeInverse );\n\t\t this.g = Math.pow( color.g, safeInverse );\n\t\t this.b = Math.pow( color.b, safeInverse );\n \n\t\t return this;\n \n\t }\n \n\t convertGammaToLinear( gammaFactor ) {\n \n\t\t this.copyGammaToLinear( this, gammaFactor );\n \n\t\t return this;\n \n\t }\n \n\t convertLinearToGamma( gammaFactor ) {\n \n\t\t this.copyLinearToGamma( this, gammaFactor );\n \n\t\t return this;\n \n\t }\n \n\t copySRGBToLinear( color ) {\n \n\t\t this.r = SRGBToLinear( color.r );\n\t\t this.g = SRGBToLinear( color.g );\n\t\t this.b = SRGBToLinear( color.b );\n \n\t\t return this;\n \n\t }\n \n\t copyLinearToSRGB( color ) {\n \n\t\t this.r = LinearToSRGB( color.r );\n\t\t this.g = LinearToSRGB( color.g );\n\t\t this.b = LinearToSRGB( color.b );\n \n\t\t return this;\n \n\t }\n \n\t convertSRGBToLinear() {\n \n\t\t this.copySRGBToLinear( this );\n \n\t\t return this;\n \n\t }\n \n\t convertLinearToSRGB() {\n \n\t\t this.copyLinearToSRGB( this );\n \n\t\t return this;\n \n\t }\n \n\t getHex() {\n \n\t\t return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n \n\t }\n \n\t getHexString() {\n \n\t\t return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n \n\t }\n \n\t getHSL( target ) {\n \n\t\t // h,s,l ranges are in 0.0 - 1.0\n \n\t\t const r = this.r, g = this.g, b = this.b;\n \n\t\t const max = Math.max( r, g, b );\n\t\t const min = Math.min( r, g, b );\n \n\t\t let hue, saturation;\n\t\t const lightness = ( min + max ) / 2.0;\n \n\t\t if ( min === max ) {\n \n\t\t\t hue = 0;\n\t\t\t saturation = 0;\n \n\t\t } else {\n \n\t\t\t const delta = max - min;\n \n\t\t\t saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n \n\t\t\t switch ( max ) {\n \n\t\t\t\t case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t case g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t case b: hue = ( r - g ) / delta + 4; break;\n \n\t\t\t }\n \n\t\t\t hue /= 6;\n \n\t\t }\n \n\t\t target.h = hue;\n\t\t target.s = saturation;\n\t\t target.l = lightness;\n \n\t\t return target;\n \n\t }\n \n\t getStyle() {\n \n\t\t return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n \n\t }\n \n\t offsetHSL( h, s, l ) {\n \n\t\t this.getHSL( _hslA );\n \n\t\t _hslA.h += h; _hslA.s += s; _hslA.l += l;\n \n\t\t this.setHSL( _hslA.h, _hslA.s, _hslA.l );\n \n\t\t return this;\n \n\t }\n \n\t add( color ) {\n \n\t\t this.r += color.r;\n\t\t this.g += color.g;\n\t\t this.b += color.b;\n \n\t\t return this;\n \n\t }\n \n\t addColors( color1, color2 ) {\n \n\t\t this.r = color1.r + color2.r;\n\t\t this.g = color1.g + color2.g;\n\t\t this.b = color1.b + color2.b;\n \n\t\t return this;\n \n\t }\n \n\t addScalar( s ) {\n \n\t\t this.r += s;\n\t\t this.g += s;\n\t\t this.b += s;\n \n\t\t return this;\n \n\t }\n \n\t sub( color ) {\n \n\t\t this.r = Math.max( 0, this.r - color.r );\n\t\t this.g = Math.max( 0, this.g - color.g );\n\t\t this.b = Math.max( 0, this.b - color.b );\n \n\t\t return this;\n \n\t }\n \n\t multiply( color ) {\n \n\t\t this.r *= color.r;\n\t\t this.g *= color.g;\n\t\t this.b *= color.b;\n \n\t\t return this;\n \n\t }\n \n\t multiplyScalar( s ) {\n \n\t\t this.r *= s;\n\t\t this.g *= s;\n\t\t this.b *= s;\n \n\t\t return this;\n \n\t }\n \n\t lerp( color, alpha ) {\n \n\t\t this.r += ( color.r - this.r ) * alpha;\n\t\t this.g += ( color.g - this.g ) * alpha;\n\t\t this.b += ( color.b - this.b ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t lerpColors( color1, color2, alpha ) {\n \n\t\t this.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\t this.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\t this.b = color1.b + ( color2.b - color1.b ) * alpha;\n \n\t\t return this;\n \n\t }\n \n\t lerpHSL( color, alpha ) {\n \n\t\t this.getHSL( _hslA );\n\t\t color.getHSL( _hslB );\n \n\t\t const h = lerp( _hslA.h, _hslB.h, alpha );\n\t\t const s = lerp( _hslA.s, _hslB.s, alpha );\n\t\t const l = lerp( _hslA.l, _hslB.l, alpha );\n \n\t\t this.setHSL( h, s, l );\n \n\t\t return this;\n \n\t }\n \n\t equals( c ) {\n \n\t\t return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t this.r = array[ offset ];\n\t\t this.g = array[ offset + 1 ];\n\t\t this.b = array[ offset + 2 ];\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t array[ offset ] = this.r;\n\t\t array[ offset + 1 ] = this.g;\n\t\t array[ offset + 2 ] = this.b;\n \n\t\t return array;\n \n\t }\n \n\t fromBufferAttribute( attribute, index ) {\n \n\t\t this.r = attribute.getX( index );\n\t\t this.g = attribute.getY( index );\n\t\t this.b = attribute.getZ( index );\n \n\t\t if ( attribute.normalized === true ) {\n \n\t\t\t // assuming Uint8Array\n \n\t\t\t this.r /= 255;\n\t\t\t this.g /= 255;\n\t\t\t this.b /= 255;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t return this.getHex();\n \n\t }\n \n }\n \n Color.NAMES = _colorKeywords;\n \n Color.prototype.isColor = true;\n Color.prototype.r = 1;\n Color.prototype.g = 1;\n Color.prototype.b = 1;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  opacity: <float>,\n  *  map: new THREE.Texture( <Image> ),\n  *\n  *  lightMap: new THREE.Texture( <Image> ),\n  *  lightMapIntensity: <float>\n  *\n  *  aoMap: new THREE.Texture( <Image> ),\n  *  aoMapIntensity: <float>\n  *\n  *  specularMap: new THREE.Texture( <Image> ),\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n  *  combine: THREE.Multiply,\n  *  reflectivity: <float>,\n  *  refractionRatio: <float>,\n  *\n  *  depthTest: <bool>,\n  *  depthWrite: <bool>,\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>,\n  *\n  *  morphTargets: <bool>\n  * }\n  */\n \n class MeshBasicMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'MeshBasicMaterial';\n \n\t\t this.color = new Color( 0xffffff ); // emissive\n \n\t\t this.map = null;\n \n\t\t this.lightMap = null;\n\t\t this.lightMapIntensity = 1.0;\n \n\t\t this.aoMap = null;\n\t\t this.aoMapIntensity = 1.0;\n \n\t\t this.specularMap = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.envMap = null;\n\t\t this.combine = MultiplyOperation;\n\t\t this.reflectivity = 1;\n\t\t this.refractionRatio = 0.98;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n\t\t this.wireframeLinecap = 'round';\n\t\t this.wireframeLinejoin = 'round';\n \n\t\t this.morphTargets = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n \n\t\t this.map = source.map;\n \n\t\t this.lightMap = source.lightMap;\n\t\t this.lightMapIntensity = source.lightMapIntensity;\n \n\t\t this.aoMap = source.aoMap;\n\t\t this.aoMapIntensity = source.aoMapIntensity;\n \n\t\t this.specularMap = source.specularMap;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.envMap = source.envMap;\n\t\t this.combine = source.combine;\n\t\t this.reflectivity = source.reflectivity;\n\t\t this.refractionRatio = source.refractionRatio;\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n\t\t this.wireframeLinecap = source.wireframeLinecap;\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\n \n\t\t this.morphTargets = source.morphTargets;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n \n const _vector$9 = /*@__PURE__*/ new Vector3();\n const _vector2$1 = /*@__PURE__*/ new Vector2();\n \n class BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t if ( Array.isArray( array ) ) {\n \n\t\t\t throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n \n\t\t }\n \n\t\t this.name = '';\n \n\t\t this.array = array;\n\t\t this.itemSize = itemSize;\n\t\t this.count = array !== undefined ? array.length / itemSize : 0;\n\t\t this.normalized = normalized === true;\n \n\t\t this.usage = StaticDrawUsage;\n\t\t this.updateRange = { offset: 0, count: - 1 };\n \n\t\t this.version = 0;\n \n\t }\n \n\t onUploadCallback() {}\n \n\t set needsUpdate( value ) {\n \n\t\t if ( value === true ) this.version ++;\n \n\t }\n \n\t setUsage( value ) {\n \n\t\t this.usage = value;\n \n\t\t return this;\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.name = source.name;\n\t\t this.array = new source.array.constructor( source.array );\n\t\t this.itemSize = source.itemSize;\n\t\t this.count = source.count;\n\t\t this.normalized = source.normalized;\n \n\t\t this.usage = source.usage;\n \n\t\t return this;\n \n\t }\n \n\t copyAt( index1, attribute, index2 ) {\n \n\t\t index1 *= this.itemSize;\n\t\t index2 *= attribute.itemSize;\n \n\t\t for ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n \n\t\t\t this.array[ index1 + i ] = attribute.array[ index2 + i ];\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t copyArray( array ) {\n \n\t\t this.array.set( array );\n \n\t\t return this;\n \n\t }\n \n\t copyColorsArray( colors ) {\n \n\t\t const array = this.array;\n\t\t let offset = 0;\n \n\t\t for ( let i = 0, l = colors.length; i < l; i ++ ) {\n \n\t\t\t let color = colors[ i ];\n \n\t\t\t if ( color === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t color = new Color();\n \n\t\t\t }\n \n\t\t\t array[ offset ++ ] = color.r;\n\t\t\t array[ offset ++ ] = color.g;\n\t\t\t array[ offset ++ ] = color.b;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t copyVector2sArray( vectors ) {\n \n\t\t const array = this.array;\n\t\t let offset = 0;\n \n\t\t for ( let i = 0, l = vectors.length; i < l; i ++ ) {\n \n\t\t\t let vector = vectors[ i ];\n \n\t\t\t if ( vector === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t vector = new Vector2();\n \n\t\t\t }\n \n\t\t\t array[ offset ++ ] = vector.x;\n\t\t\t array[ offset ++ ] = vector.y;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t copyVector3sArray( vectors ) {\n \n\t\t const array = this.array;\n\t\t let offset = 0;\n \n\t\t for ( let i = 0, l = vectors.length; i < l; i ++ ) {\n \n\t\t\t let vector = vectors[ i ];\n \n\t\t\t if ( vector === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t vector = new Vector3();\n \n\t\t\t }\n \n\t\t\t array[ offset ++ ] = vector.x;\n\t\t\t array[ offset ++ ] = vector.y;\n\t\t\t array[ offset ++ ] = vector.z;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t copyVector4sArray( vectors ) {\n \n\t\t const array = this.array;\n\t\t let offset = 0;\n \n\t\t for ( let i = 0, l = vectors.length; i < l; i ++ ) {\n \n\t\t\t let vector = vectors[ i ];\n \n\t\t\t if ( vector === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t vector = new Vector4();\n \n\t\t\t }\n \n\t\t\t array[ offset ++ ] = vector.x;\n\t\t\t array[ offset ++ ] = vector.y;\n\t\t\t array[ offset ++ ] = vector.z;\n\t\t\t array[ offset ++ ] = vector.w;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t applyMatrix3( m ) {\n \n\t\t if ( this.itemSize === 2 ) {\n \n\t\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n\t\t\t\t _vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t _vector2$1.applyMatrix3( m );\n \n\t\t\t\t this.setXY( i, _vector2$1.x, _vector2$1.y );\n \n\t\t\t }\n \n\t\t } else if ( this.itemSize === 3 ) {\n \n\t\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n\t\t\t\t _vector$9.fromBufferAttribute( this, i );\n\t\t\t\t _vector$9.applyMatrix3( m );\n \n\t\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n\t\t\t }\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t applyMatrix4( m ) {\n \n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n\t\t\t _vector$9.x = this.getX( i );\n\t\t\t _vector$9.y = this.getY( i );\n\t\t\t _vector$9.z = this.getZ( i );\n \n\t\t\t _vector$9.applyMatrix4( m );\n \n\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t applyNormalMatrix( m ) {\n \n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n\t\t\t _vector$9.x = this.getX( i );\n\t\t\t _vector$9.y = this.getY( i );\n\t\t\t _vector$9.z = this.getZ( i );\n \n\t\t\t _vector$9.applyNormalMatrix( m );\n \n\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t transformDirection( m ) {\n \n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n\t\t\t _vector$9.x = this.getX( i );\n\t\t\t _vector$9.y = this.getY( i );\n\t\t\t _vector$9.z = this.getZ( i );\n \n\t\t\t _vector$9.transformDirection( m );\n \n\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t set( value, offset = 0 ) {\n \n\t\t this.array.set( value, offset );\n \n\t\t return this;\n \n\t }\n \n\t getX( index ) {\n \n\t\t return this.array[ index * this.itemSize ];\n \n\t }\n \n\t setX( index, x ) {\n \n\t\t this.array[ index * this.itemSize ] = x;\n \n\t\t return this;\n \n\t }\n \n\t getY( index ) {\n \n\t\t return this.array[ index * this.itemSize + 1 ];\n \n\t }\n \n\t setY( index, y ) {\n \n\t\t this.array[ index * this.itemSize + 1 ] = y;\n \n\t\t return this;\n \n\t }\n \n\t getZ( index ) {\n \n\t\t return this.array[ index * this.itemSize + 2 ];\n \n\t }\n \n\t setZ( index, z ) {\n \n\t\t this.array[ index * this.itemSize + 2 ] = z;\n \n\t\t return this;\n \n\t }\n \n\t getW( index ) {\n \n\t\t return this.array[ index * this.itemSize + 3 ];\n \n\t }\n \n\t setW( index, w ) {\n \n\t\t this.array[ index * this.itemSize + 3 ] = w;\n \n\t\t return this;\n \n\t }\n \n\t setXY( index, x, y ) {\n \n\t\t index *= this.itemSize;\n \n\t\t this.array[ index + 0 ] = x;\n\t\t this.array[ index + 1 ] = y;\n \n\t\t return this;\n \n\t }\n \n\t setXYZ( index, x, y, z ) {\n \n\t\t index *= this.itemSize;\n \n\t\t this.array[ index + 0 ] = x;\n\t\t this.array[ index + 1 ] = y;\n\t\t this.array[ index + 2 ] = z;\n \n\t\t return this;\n \n\t }\n \n\t setXYZW( index, x, y, z, w ) {\n \n\t\t index *= this.itemSize;\n \n\t\t this.array[ index + 0 ] = x;\n\t\t this.array[ index + 1 ] = y;\n\t\t this.array[ index + 2 ] = z;\n\t\t this.array[ index + 3 ] = w;\n \n\t\t return this;\n \n\t }\n \n\t onUpload( callback ) {\n \n\t\t this.onUploadCallback = callback;\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this.array, this.itemSize ).copy( this );\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = {\n\t\t\t itemSize: this.itemSize,\n\t\t\t type: this.array.constructor.name,\n\t\t\t array: Array.prototype.slice.call( this.array ),\n\t\t\t normalized: this.normalized\n\t\t };\n \n\t\t if ( this.name !== '' ) data.name = this.name;\n\t\t if ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\t if ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n \n\t\t return data;\n \n\t }\n \n }\n \n BufferAttribute.prototype.isBufferAttribute = true;\n \n //\n \n class Int8BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Int8Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Uint8BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Uint8Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Uint8ClampedBufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Uint8ClampedArray( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Int16BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Int16Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Uint16BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Uint16Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Int32BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Int32Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Uint32BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Uint32Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Float16BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Uint16Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n \n class Float32BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Float32Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n class Float64BufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized ) {\n \n\t\t super( new Float64Array( array ), itemSize, normalized );\n \n\t }\n \n }\n \n function arrayMax( array ) {\n \n\t if ( array.length === 0 ) return - Infinity;\n \n\t let max = array[ 0 ];\n \n\t for ( let i = 1, l = array.length; i < l; ++ i ) {\n \n\t\t if ( array[ i ] > max ) max = array[ i ];\n \n\t }\n \n\t return max;\n \n }\n \n const TYPED_ARRAYS = {\n\t Int8Array: Int8Array,\n\t Uint8Array: Uint8Array,\n\t Uint8ClampedArray: Uint8ClampedArray,\n\t Int16Array: Int16Array,\n\t Uint16Array: Uint16Array,\n\t Int32Array: Int32Array,\n\t Uint32Array: Uint32Array,\n\t Float32Array: Float32Array,\n\t Float64Array: Float64Array\n };\n \n function getTypedArray( type, buffer ) {\n \n\t return new TYPED_ARRAYS[ type ]( buffer );\n \n }\n \n let _id = 0;\n \n const _m1 = /*@__PURE__*/ new Matrix4();\n const _obj = /*@__PURE__*/ new Object3D();\n const _offset = /*@__PURE__*/ new Vector3();\n const _box$1 = /*@__PURE__*/ new Box3();\n const _boxMorphTargets = /*@__PURE__*/ new Box3();\n const _vector$8 = /*@__PURE__*/ new Vector3();\n \n class BufferGeometry extends EventDispatcher {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t Object.defineProperty( this, 'id', { value: _id ++ } );\n \n\t\t this.uuid = generateUUID();\n \n\t\t this.name = '';\n\t\t this.type = 'BufferGeometry';\n \n\t\t this.index = null;\n\t\t this.attributes = {};\n \n\t\t this.morphAttributes = {};\n\t\t this.morphTargetsRelative = false;\n \n\t\t this.groups = [];\n \n\t\t this.boundingBox = null;\n\t\t this.boundingSphere = null;\n \n\t\t this.drawRange = { start: 0, count: Infinity };\n \n\t\t this.userData = {};\n \n\t }\n \n\t getIndex() {\n \n\t\t return this.index;\n \n\t }\n \n\t setIndex( index ) {\n \n\t\t if ( Array.isArray( index ) ) {\n \n\t\t\t this.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n \n\t\t } else {\n \n\t\t\t this.index = index;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t getAttribute( name ) {\n \n\t\t return this.attributes[ name ];\n \n\t }\n \n\t setAttribute( name, attribute ) {\n \n\t\t this.attributes[ name ] = attribute;\n \n\t\t return this;\n \n\t }\n \n\t deleteAttribute( name ) {\n \n\t\t delete this.attributes[ name ];\n \n\t\t return this;\n \n\t }\n \n\t hasAttribute( name ) {\n \n\t\t return this.attributes[ name ] !== undefined;\n \n\t }\n \n\t addGroup( start, count, materialIndex = 0 ) {\n \n\t\t this.groups.push( {\n \n\t\t\t start: start,\n\t\t\t count: count,\n\t\t\t materialIndex: materialIndex\n \n\t\t } );\n \n\t }\n \n\t clearGroups() {\n \n\t\t this.groups = [];\n \n\t }\n \n\t setDrawRange( start, count ) {\n \n\t\t this.drawRange.start = start;\n\t\t this.drawRange.count = count;\n \n\t }\n \n\t applyMatrix4( matrix ) {\n \n\t\t const position = this.attributes.position;\n \n\t\t if ( position !== undefined ) {\n \n\t\t\t position.applyMatrix4( matrix );\n \n\t\t\t position.needsUpdate = true;\n \n\t\t }\n \n\t\t const normal = this.attributes.normal;\n \n\t\t if ( normal !== undefined ) {\n \n\t\t\t const normalMatrix = new Matrix3().getNormalMatrix( matrix );\n \n\t\t\t normal.applyNormalMatrix( normalMatrix );\n \n\t\t\t normal.needsUpdate = true;\n \n\t\t }\n \n\t\t const tangent = this.attributes.tangent;\n \n\t\t if ( tangent !== undefined ) {\n \n\t\t\t tangent.transformDirection( matrix );\n \n\t\t\t tangent.needsUpdate = true;\n \n\t\t }\n \n\t\t if ( this.boundingBox !== null ) {\n \n\t\t\t this.computeBoundingBox();\n \n\t\t }\n \n\t\t if ( this.boundingSphere !== null ) {\n \n\t\t\t this.computeBoundingSphere();\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t applyQuaternion( q ) {\n \n\t\t _m1.makeRotationFromQuaternion( q );\n \n\t\t this.applyMatrix4( _m1 );\n \n\t\t return this;\n \n\t }\n \n\t rotateX( angle ) {\n \n\t\t // rotate geometry around world x-axis\n \n\t\t _m1.makeRotationX( angle );\n \n\t\t this.applyMatrix4( _m1 );\n \n\t\t return this;\n \n\t }\n \n\t rotateY( angle ) {\n \n\t\t // rotate geometry around world y-axis\n \n\t\t _m1.makeRotationY( angle );\n \n\t\t this.applyMatrix4( _m1 );\n \n\t\t return this;\n \n\t }\n \n\t rotateZ( angle ) {\n \n\t\t // rotate geometry around world z-axis\n \n\t\t _m1.makeRotationZ( angle );\n \n\t\t this.applyMatrix4( _m1 );\n \n\t\t return this;\n \n\t }\n \n\t translate( x, y, z ) {\n \n\t\t // translate geometry\n \n\t\t _m1.makeTranslation( x, y, z );\n \n\t\t this.applyMatrix4( _m1 );\n \n\t\t return this;\n \n\t }\n \n\t scale( x, y, z ) {\n \n\t\t // scale geometry\n \n\t\t _m1.makeScale( x, y, z );\n \n\t\t this.applyMatrix4( _m1 );\n \n\t\t return this;\n \n\t }\n \n\t lookAt( vector ) {\n \n\t\t _obj.lookAt( vector );\n \n\t\t _obj.updateMatrix();\n \n\t\t this.applyMatrix4( _obj.matrix );\n \n\t\t return this;\n \n\t }\n \n\t center() {\n \n\t\t this.computeBoundingBox();\n \n\t\t this.boundingBox.getCenter( _offset ).negate();\n \n\t\t this.translate( _offset.x, _offset.y, _offset.z );\n \n\t\t return this;\n \n\t }\n \n\t setFromPoints( points ) {\n \n\t\t const position = [];\n \n\t\t for ( let i = 0, l = points.length; i < l; i ++ ) {\n \n\t\t\t const point = points[ i ];\n\t\t\t position.push( point.x, point.y, point.z || 0 );\n \n\t\t }\n \n\t\t this.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n \n\t\t return this;\n \n\t }\n \n\t computeBoundingBox() {\n \n\t\t if ( this.boundingBox === null ) {\n \n\t\t\t this.boundingBox = new Box3();\n \n\t\t }\n \n\t\t const position = this.attributes.position;\n\t\t const morphAttributesPosition = this.morphAttributes.position;\n \n\t\t if ( position && position.isGLBufferAttribute ) {\n \n\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n \n\t\t\t this.boundingBox.set(\n\t\t\t\t new Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\t new Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t );\n \n\t\t\t return;\n \n\t\t }\n \n\t\t if ( position !== undefined ) {\n \n\t\t\t this.boundingBox.setFromBufferAttribute( position );\n \n\t\t\t // process morph attributes if present\n \n\t\t\t if ( morphAttributesPosition ) {\n \n\t\t\t\t for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n \n\t\t\t\t\t const morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t _box$1.setFromBufferAttribute( morphAttribute );\n \n\t\t\t\t\t if ( this.morphTargetsRelative ) {\n \n\t\t\t\t\t\t _vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\t this.boundingBox.expandByPoint( _vector$8 );\n \n\t\t\t\t\t\t _vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\t this.boundingBox.expandByPoint( _vector$8 );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t this.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\t this.boundingBox.expandByPoint( _box$1.max );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t this.boundingBox.makeEmpty();\n \n\t\t }\n \n\t\t if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n \n\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n \n\t\t }\n \n\t }\n \n\t computeBoundingSphere() {\n \n\t\t if ( this.boundingSphere === null ) {\n \n\t\t\t this.boundingSphere = new Sphere();\n \n\t\t }\n \n\t\t const position = this.attributes.position;\n\t\t const morphAttributesPosition = this.morphAttributes.position;\n \n\t\t if ( position && position.isGLBufferAttribute ) {\n \n\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n \n\t\t\t this.boundingSphere.set( new Vector3(), Infinity );\n \n\t\t\t return;\n \n\t\t }\n \n\t\t if ( position ) {\n \n\t\t\t // first, find the center of the bounding sphere\n \n\t\t\t const center = this.boundingSphere.center;\n \n\t\t\t _box$1.setFromBufferAttribute( position );\n \n\t\t\t // process morph attributes if present\n \n\t\t\t if ( morphAttributesPosition ) {\n \n\t\t\t\t for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n \n\t\t\t\t\t const morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t _boxMorphTargets.setFromBufferAttribute( morphAttribute );\n \n\t\t\t\t\t if ( this.morphTargetsRelative ) {\n \n\t\t\t\t\t\t _vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t _box$1.expandByPoint( _vector$8 );\n \n\t\t\t\t\t\t _vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t _box$1.expandByPoint( _vector$8 );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t _box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t _box$1.expandByPoint( _boxMorphTargets.max );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t _box$1.getCenter( center );\n \n\t\t\t // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n \n\t\t\t let maxRadiusSq = 0;\n \n\t\t\t for ( let i = 0, il = position.count; i < il; i ++ ) {\n \n\t\t\t\t _vector$8.fromBufferAttribute( position, i );\n \n\t\t\t\t maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n \n\t\t\t }\n \n\t\t\t // process morph attributes if present\n \n\t\t\t if ( morphAttributesPosition ) {\n \n\t\t\t\t for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n \n\t\t\t\t\t const morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t const morphTargetsRelative = this.morphTargetsRelative;\n \n\t\t\t\t\t for ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n \n\t\t\t\t\t\t _vector$8.fromBufferAttribute( morphAttribute, j );\n \n\t\t\t\t\t\t if ( morphTargetsRelative ) {\n \n\t\t\t\t\t\t\t _offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t _vector$8.add( _offset );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t this.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n \n\t\t\t if ( isNaN( this.boundingSphere.radius ) ) {\n \n\t\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t computeFaceNormals() {\n \n\t\t // backwards compatibility\n \n\t }\n \n\t computeTangents() {\n \n\t\t const index = this.index;\n\t\t const attributes = this.attributes;\n \n\t\t // based on http://www.terathon.com/code/tangent.html\n\t\t // (per vertex tangents)\n \n\t\t if ( index === null ||\n\t\t\t  attributes.position === undefined ||\n\t\t\t  attributes.normal === undefined ||\n\t\t\t  attributes.uv === undefined ) {\n \n\t\t\t console.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\t return;\n \n\t\t }\n \n\t\t const indices = index.array;\n\t\t const positions = attributes.position.array;\n\t\t const normals = attributes.normal.array;\n\t\t const uvs = attributes.uv.array;\n \n\t\t const nVertices = positions.length / 3;\n \n\t\t if ( attributes.tangent === undefined ) {\n \n\t\t\t this.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n \n\t\t }\n \n\t\t const tangents = attributes.tangent.array;\n \n\t\t const tan1 = [], tan2 = [];\n \n\t\t for ( let i = 0; i < nVertices; i ++ ) {\n \n\t\t\t tan1[ i ] = new Vector3();\n\t\t\t tan2[ i ] = new Vector3();\n \n\t\t }\n \n\t\t const vA = new Vector3(),\n\t\t\t vB = new Vector3(),\n\t\t\t vC = new Vector3(),\n \n\t\t\t uvA = new Vector2(),\n\t\t\t uvB = new Vector2(),\n\t\t\t uvC = new Vector2(),\n \n\t\t\t sdir = new Vector3(),\n\t\t\t tdir = new Vector3();\n \n\t\t function handleTriangle( a, b, c ) {\n \n\t\t\t vA.fromArray( positions, a * 3 );\n\t\t\t vB.fromArray( positions, b * 3 );\n\t\t\t vC.fromArray( positions, c * 3 );\n \n\t\t\t uvA.fromArray( uvs, a * 2 );\n\t\t\t uvB.fromArray( uvs, b * 2 );\n\t\t\t uvC.fromArray( uvs, c * 2 );\n \n\t\t\t vB.sub( vA );\n\t\t\t vC.sub( vA );\n \n\t\t\t uvB.sub( uvA );\n\t\t\t uvC.sub( uvA );\n \n\t\t\t const r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n \n\t\t\t // silently ignore degenerate uv triangles having coincident or colinear vertices\n \n\t\t\t if ( ! isFinite( r ) ) return;\n \n\t\t\t sdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\t tdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n \n\t\t\t tan1[ a ].add( sdir );\n\t\t\t tan1[ b ].add( sdir );\n\t\t\t tan1[ c ].add( sdir );\n \n\t\t\t tan2[ a ].add( tdir );\n\t\t\t tan2[ b ].add( tdir );\n\t\t\t tan2[ c ].add( tdir );\n \n\t\t }\n \n\t\t let groups = this.groups;\n \n\t\t if ( groups.length === 0 ) {\n \n\t\t\t groups = [ {\n\t\t\t\t start: 0,\n\t\t\t\t count: indices.length\n\t\t\t } ];\n \n\t\t }\n \n\t\t for ( let i = 0, il = groups.length; i < il; ++ i ) {\n \n\t\t\t const group = groups[ i ];\n \n\t\t\t const start = group.start;\n\t\t\t const count = group.count;\n \n\t\t\t for ( let j = start, jl = start + count; j < jl; j += 3 ) {\n \n\t\t\t\t handleTriangle(\n\t\t\t\t\t indices[ j + 0 ],\n\t\t\t\t\t indices[ j + 1 ],\n\t\t\t\t\t indices[ j + 2 ]\n\t\t\t\t );\n \n\t\t\t }\n \n\t\t }\n \n\t\t const tmp = new Vector3(), tmp2 = new Vector3();\n\t\t const n = new Vector3(), n2 = new Vector3();\n \n\t\t function handleVertex( v ) {\n \n\t\t\t n.fromArray( normals, v * 3 );\n\t\t\t n2.copy( n );\n \n\t\t\t const t = tan1[ v ];\n \n\t\t\t // Gram-Schmidt orthogonalize\n \n\t\t\t tmp.copy( t );\n\t\t\t tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n \n\t\t\t // Calculate handedness\n \n\t\t\t tmp2.crossVectors( n2, t );\n\t\t\t const test = tmp2.dot( tan2[ v ] );\n\t\t\t const w = ( test < 0.0 ) ? - 1.0 : 1.0;\n \n\t\t\t tangents[ v * 4 ] = tmp.x;\n\t\t\t tangents[ v * 4 + 1 ] = tmp.y;\n\t\t\t tangents[ v * 4 + 2 ] = tmp.z;\n\t\t\t tangents[ v * 4 + 3 ] = w;\n \n\t\t }\n \n\t\t for ( let i = 0, il = groups.length; i < il; ++ i ) {\n \n\t\t\t const group = groups[ i ];\n \n\t\t\t const start = group.start;\n\t\t\t const count = group.count;\n \n\t\t\t for ( let j = start, jl = start + count; j < jl; j += 3 ) {\n \n\t\t\t\t handleVertex( indices[ j + 0 ] );\n\t\t\t\t handleVertex( indices[ j + 1 ] );\n\t\t\t\t handleVertex( indices[ j + 2 ] );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t computeVertexNormals() {\n \n\t\t const index = this.index;\n\t\t const positionAttribute = this.getAttribute( 'position' );\n \n\t\t if ( positionAttribute !== undefined ) {\n \n\t\t\t let normalAttribute = this.getAttribute( 'normal' );\n \n\t\t\t if ( normalAttribute === undefined ) {\n \n\t\t\t\t normalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\t this.setAttribute( 'normal', normalAttribute );\n \n\t\t\t } else {\n \n\t\t\t\t // reset existing normals to zero\n \n\t\t\t\t for ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n \n\t\t\t\t\t normalAttribute.setXYZ( i, 0, 0, 0 );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t const pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t const nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\t const cb = new Vector3(), ab = new Vector3();\n \n\t\t\t // indexed elements\n \n\t\t\t if ( index ) {\n \n\t\t\t\t for ( let i = 0, il = index.count; i < il; i += 3 ) {\n \n\t\t\t\t\t const vA = index.getX( i + 0 );\n\t\t\t\t\t const vB = index.getX( i + 1 );\n\t\t\t\t\t const vC = index.getX( i + 2 );\n \n\t\t\t\t\t pA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\t pB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\t pC.fromBufferAttribute( positionAttribute, vC );\n \n\t\t\t\t\t cb.subVectors( pC, pB );\n\t\t\t\t\t ab.subVectors( pA, pB );\n\t\t\t\t\t cb.cross( ab );\n \n\t\t\t\t\t nA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\t nB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\t nC.fromBufferAttribute( normalAttribute, vC );\n \n\t\t\t\t\t nA.add( cb );\n\t\t\t\t\t nB.add( cb );\n\t\t\t\t\t nC.add( cb );\n \n\t\t\t\t\t normalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\t normalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\t normalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t // non-indexed elements (unconnected triangle soup)\n \n\t\t\t\t for ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n \n\t\t\t\t\t pA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\t pB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\t pC.fromBufferAttribute( positionAttribute, i + 2 );\n \n\t\t\t\t\t cb.subVectors( pC, pB );\n\t\t\t\t\t ab.subVectors( pA, pB );\n\t\t\t\t\t cb.cross( ab );\n \n\t\t\t\t\t normalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\t normalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\t normalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t this.normalizeNormals();\n \n\t\t\t normalAttribute.needsUpdate = true;\n \n\t\t }\n \n\t }\n \n\t merge( geometry, offset ) {\n \n\t\t if ( ! ( geometry && geometry.isBufferGeometry ) ) {\n \n\t\t\t console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t return;\n \n\t\t }\n \n\t\t if ( offset === undefined ) {\n \n\t\t\t offset = 0;\n \n\t\t\t console.warn(\n\t\t\t\t 'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t );\n \n\t\t }\n \n\t\t const attributes = this.attributes;\n \n\t\t for ( const key in attributes ) {\n \n\t\t\t if ( geometry.attributes[ key ] === undefined ) continue;\n \n\t\t\t const attribute1 = attributes[ key ];\n\t\t\t const attributeArray1 = attribute1.array;\n \n\t\t\t const attribute2 = geometry.attributes[ key ];\n\t\t\t const attributeArray2 = attribute2.array;\n \n\t\t\t const attributeOffset = attribute2.itemSize * offset;\n\t\t\t const length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n \n\t\t\t for ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n \n\t\t\t\t attributeArray1[ j ] = attributeArray2[ i ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t normalizeNormals() {\n \n\t\t const normals = this.attributes.normal;\n \n\t\t for ( let i = 0, il = normals.count; i < il; i ++ ) {\n \n\t\t\t _vector$8.fromBufferAttribute( normals, i );\n \n\t\t\t _vector$8.normalize();\n \n\t\t\t normals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n \n\t\t }\n \n\t }\n \n\t toNonIndexed() {\n \n\t\t function convertBufferAttribute( attribute, indices ) {\n \n\t\t\t const array = attribute.array;\n\t\t\t const itemSize = attribute.itemSize;\n\t\t\t const normalized = attribute.normalized;\n \n\t\t\t const array2 = new array.constructor( indices.length * itemSize );\n \n\t\t\t let index = 0, index2 = 0;\n \n\t\t\t for ( let i = 0, l = indices.length; i < l; i ++ ) {\n \n\t\t\t\t if ( attribute.isInterleavedBufferAttribute ) {\n \n\t\t\t\t\t index = indices[ i ] * attribute.data.stride + attribute.offset;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t index = indices[ i ] * itemSize;\n \n\t\t\t\t }\n \n\t\t\t\t for ( let j = 0; j < itemSize; j ++ ) {\n \n\t\t\t\t\t array2[ index2 ++ ] = array[ index ++ ];\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t return new BufferAttribute( array2, itemSize, normalized );\n \n\t\t }\n \n\t\t //\n \n\t\t if ( this.index === null ) {\n \n\t\t\t console.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\t return this;\n \n\t\t }\n \n\t\t const geometry2 = new BufferGeometry();\n \n\t\t const indices = this.index.array;\n\t\t const attributes = this.attributes;\n \n\t\t // attributes\n \n\t\t for ( const name in attributes ) {\n \n\t\t\t const attribute = attributes[ name ];\n \n\t\t\t const newAttribute = convertBufferAttribute( attribute, indices );\n \n\t\t\t geometry2.setAttribute( name, newAttribute );\n \n\t\t }\n \n\t\t // morph attributes\n \n\t\t const morphAttributes = this.morphAttributes;\n \n\t\t for ( const name in morphAttributes ) {\n \n\t\t\t const morphArray = [];\n\t\t\t const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n \n\t\t\t for ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n \n\t\t\t\t const attribute = morphAttribute[ i ];\n \n\t\t\t\t const newAttribute = convertBufferAttribute( attribute, indices );\n \n\t\t\t\t morphArray.push( newAttribute );\n \n\t\t\t }\n \n\t\t\t geometry2.morphAttributes[ name ] = morphArray;\n \n\t\t }\n \n\t\t geometry2.morphTargetsRelative = this.morphTargetsRelative;\n \n\t\t // groups\n \n\t\t const groups = this.groups;\n \n\t\t for ( let i = 0, l = groups.length; i < l; i ++ ) {\n \n\t\t\t const group = groups[ i ];\n\t\t\t geometry2.addGroup( group.start, group.count, group.materialIndex );\n \n\t\t }\n \n\t\t return geometry2;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = {\n\t\t\t metadata: {\n\t\t\t\t version: 4.5,\n\t\t\t\t type: 'BufferGeometry',\n\t\t\t\t generator: 'BufferGeometry.toJSON'\n\t\t\t }\n\t\t };\n \n\t\t // standard BufferGeometry serialization\n \n\t\t data.uuid = this.uuid;\n\t\t data.type = this.type;\n\t\t if ( this.name !== '' ) data.name = this.name;\n\t\t if ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n \n\t\t if ( this.parameters !== undefined ) {\n \n\t\t\t const parameters = this.parameters;\n \n\t\t\t for ( const key in parameters ) {\n \n\t\t\t\t if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n \n\t\t\t }\n \n\t\t\t return data;\n \n\t\t }\n \n\t\t // for simplicity the code assumes attributes are not shared across geometries, see #15811\n \n\t\t data.data = { attributes: {} };\n \n\t\t const index = this.index;\n \n\t\t if ( index !== null ) {\n \n\t\t\t data.data.index = {\n\t\t\t\t type: index.array.constructor.name,\n\t\t\t\t array: Array.prototype.slice.call( index.array )\n\t\t\t };\n \n\t\t }\n \n\t\t const attributes = this.attributes;\n \n\t\t for ( const key in attributes ) {\n \n\t\t\t const attribute = attributes[ key ];\n \n\t\t\t data.data.attributes[ key ] = attribute.toJSON( data.data );\n \n\t\t }\n \n\t\t const morphAttributes = {};\n\t\t let hasMorphAttributes = false;\n \n\t\t for ( const key in this.morphAttributes ) {\n \n\t\t\t const attributeArray = this.morphAttributes[ key ];\n \n\t\t\t const array = [];\n \n\t\t\t for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n \n\t\t\t\t const attribute = attributeArray[ i ];\n \n\t\t\t\t array.push( attribute.toJSON( data.data ) );\n \n\t\t\t }\n \n\t\t\t if ( array.length > 0 ) {\n \n\t\t\t\t morphAttributes[ key ] = array;\n \n\t\t\t\t hasMorphAttributes = true;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( hasMorphAttributes ) {\n \n\t\t\t data.data.morphAttributes = morphAttributes;\n\t\t\t data.data.morphTargetsRelative = this.morphTargetsRelative;\n \n\t\t }\n \n\t\t const groups = this.groups;\n \n\t\t if ( groups.length > 0 ) {\n \n\t\t\t data.data.groups = JSON.parse( JSON.stringify( groups ) );\n \n\t\t }\n \n\t\t const boundingSphere = this.boundingSphere;\n \n\t\t if ( boundingSphere !== null ) {\n \n\t\t\t data.data.boundingSphere = {\n\t\t\t\t center: boundingSphere.center.toArray(),\n\t\t\t\t radius: boundingSphere.radius\n\t\t\t };\n \n\t\t }\n \n\t\t return data;\n \n\t }\n \n\t clone() {\n \n\t\t /*\n\t\t  // Handle primitives\n \n\t\t  const parameters = this.parameters;\n \n\t\t  if ( parameters !== undefined ) {\n \n\t\t  const values = [];\n \n\t\t  for ( const key in parameters ) {\n \n\t\t  values.push( parameters[ key ] );\n \n\t\t  }\n \n\t\t  const geometry = Object.create( this.constructor.prototype );\n\t\t  this.constructor.apply( geometry, values );\n\t\t  return geometry;\n \n\t\t  }\n \n\t\t  return new this.constructor().copy( this );\n\t\t  */\n \n\t\t return new BufferGeometry().copy( this );\n \n\t }\n \n\t copy( source ) {\n \n\t\t // reset\n \n\t\t this.index = null;\n\t\t this.attributes = {};\n\t\t this.morphAttributes = {};\n\t\t this.groups = [];\n\t\t this.boundingBox = null;\n\t\t this.boundingSphere = null;\n \n\t\t // used for storing cloned, shared data\n \n\t\t const data = {};\n \n\t\t // name\n \n\t\t this.name = source.name;\n \n\t\t // index\n \n\t\t const index = source.index;\n \n\t\t if ( index !== null ) {\n \n\t\t\t this.setIndex( index.clone( data ) );\n \n\t\t }\n \n\t\t // attributes\n \n\t\t const attributes = source.attributes;\n \n\t\t for ( const name in attributes ) {\n \n\t\t\t const attribute = attributes[ name ];\n\t\t\t this.setAttribute( name, attribute.clone( data ) );\n \n\t\t }\n \n\t\t // morph attributes\n \n\t\t const morphAttributes = source.morphAttributes;\n \n\t\t for ( const name in morphAttributes ) {\n \n\t\t\t const array = [];\n\t\t\t const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n \n\t\t\t for ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n \n\t\t\t\t array.push( morphAttribute[ i ].clone( data ) );\n \n\t\t\t }\n \n\t\t\t this.morphAttributes[ name ] = array;\n \n\t\t }\n \n\t\t this.morphTargetsRelative = source.morphTargetsRelative;\n \n\t\t // groups\n \n\t\t const groups = source.groups;\n \n\t\t for ( let i = 0, l = groups.length; i < l; i ++ ) {\n \n\t\t\t const group = groups[ i ];\n\t\t\t this.addGroup( group.start, group.count, group.materialIndex );\n \n\t\t }\n \n\t\t // bounding box\n \n\t\t const boundingBox = source.boundingBox;\n \n\t\t if ( boundingBox !== null ) {\n \n\t\t\t this.boundingBox = boundingBox.clone();\n \n\t\t }\n \n\t\t // bounding sphere\n \n\t\t const boundingSphere = source.boundingSphere;\n \n\t\t if ( boundingSphere !== null ) {\n \n\t\t\t this.boundingSphere = boundingSphere.clone();\n \n\t\t }\n \n\t\t // draw range\n \n\t\t this.drawRange.start = source.drawRange.start;\n\t\t this.drawRange.count = source.drawRange.count;\n \n\t\t // user data\n \n\t\t this.userData = source.userData;\n \n\t\t return this;\n \n\t }\n \n\t dispose() {\n \n\t\t this.dispatchEvent( { type: 'dispose' } );\n \n\t }\n \n }\n \n BufferGeometry.prototype.isBufferGeometry = true;\n \n const _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\n const _ray$2 = /*@__PURE__*/ new Ray();\n const _sphere$3 = /*@__PURE__*/ new Sphere();\n \n const _vA$1 = /*@__PURE__*/ new Vector3();\n const _vB$1 = /*@__PURE__*/ new Vector3();\n const _vC$1 = /*@__PURE__*/ new Vector3();\n \n const _tempA = /*@__PURE__*/ new Vector3();\n const _tempB = /*@__PURE__*/ new Vector3();\n const _tempC = /*@__PURE__*/ new Vector3();\n \n const _morphA = /*@__PURE__*/ new Vector3();\n const _morphB = /*@__PURE__*/ new Vector3();\n const _morphC = /*@__PURE__*/ new Vector3();\n \n const _uvA$1 = /*@__PURE__*/ new Vector2();\n const _uvB$1 = /*@__PURE__*/ new Vector2();\n const _uvC$1 = /*@__PURE__*/ new Vector2();\n \n const _intersectionPoint = /*@__PURE__*/ new Vector3();\n const _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n \n class Mesh extends Object3D {\n \n\t constructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n \n\t\t super();\n \n\t\t this.type = 'Mesh';\n \n\t\t this.geometry = geometry;\n\t\t this.material = material;\n \n\t\t this.updateMorphTargets();\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t if ( source.morphTargetInfluences !== undefined ) {\n \n\t\t\t this.morphTargetInfluences = source.morphTargetInfluences.slice();\n \n\t\t }\n \n\t\t if ( source.morphTargetDictionary !== undefined ) {\n \n\t\t\t this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n \n\t\t }\n \n\t\t this.material = source.material;\n\t\t this.geometry = source.geometry;\n \n\t\t return this;\n \n\t }\n \n\t updateMorphTargets() {\n \n\t\t const geometry = this.geometry;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t const morphAttributes = geometry.morphAttributes;\n\t\t\t const keys = Object.keys( morphAttributes );\n \n\t\t\t if ( keys.length > 0 ) {\n \n\t\t\t\t const morphAttribute = morphAttributes[ keys[ 0 ] ];\n \n\t\t\t\t if ( morphAttribute !== undefined ) {\n \n\t\t\t\t\t this.morphTargetInfluences = [];\n\t\t\t\t\t this.morphTargetDictionary = {};\n \n\t\t\t\t\t for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n \n\t\t\t\t\t\t const name = morphAttribute[ m ].name || String( m );\n \n\t\t\t\t\t\t this.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t this.morphTargetDictionary[ name ] = m;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t const morphTargets = geometry.morphTargets;\n \n\t\t\t if ( morphTargets !== undefined && morphTargets.length > 0 ) {\n \n\t\t\t\t console.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t raycast( raycaster, intersects ) {\n \n\t\t const geometry = this.geometry;\n\t\t const material = this.material;\n\t\t const matrixWorld = this.matrixWorld;\n \n\t\t if ( material === undefined ) return;\n \n\t\t // Checking boundingSphere distance to ray\n \n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n\t\t _sphere$3.copy( geometry.boundingSphere );\n\t\t _sphere$3.applyMatrix4( matrixWorld );\n \n\t\t if ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n \n\t\t //\n \n\t\t _inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t _ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n \n\t\t // Check boundingBox before continuing\n \n\t\t if ( geometry.boundingBox !== null ) {\n \n\t\t\t if ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n \n\t\t }\n \n\t\t let intersection;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t const index = geometry.index;\n\t\t\t const position = geometry.attributes.position;\n\t\t\t const morphPosition = geometry.morphAttributes.position;\n\t\t\t const morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t const uv = geometry.attributes.uv;\n\t\t\t const uv2 = geometry.attributes.uv2;\n\t\t\t const groups = geometry.groups;\n\t\t\t const drawRange = geometry.drawRange;\n \n\t\t\t if ( index !== null ) {\n \n\t\t\t\t // indexed buffer geometry\n \n\t\t\t\t if ( Array.isArray( material ) ) {\n \n\t\t\t\t\t for ( let i = 0, il = groups.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t const group = groups[ i ];\n\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\n \n\t\t\t\t\t\t const start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t const end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t\t\t for ( let j = start, jl = end; j < jl; j += 3 ) {\n \n\t\t\t\t\t\t\t const a = index.getX( j );\n\t\t\t\t\t\t\t const b = index.getX( j + 1 );\n\t\t\t\t\t\t\t const c = index.getX( j + 2 );\n \n\t\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n\t\t\t\t\t\t\t if ( intersection ) {\n \n\t\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t intersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t intersects.push( intersection );\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t const start = Math.max( 0, drawRange.start );\n\t\t\t\t\t const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t\t for ( let i = start, il = end; i < il; i += 3 ) {\n \n\t\t\t\t\t\t const a = index.getX( i );\n\t\t\t\t\t\t const b = index.getX( i + 1 );\n\t\t\t\t\t\t const c = index.getX( i + 2 );\n \n\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n\t\t\t\t\t\t if ( intersection ) {\n \n\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t intersects.push( intersection );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t } else if ( position !== undefined ) {\n \n\t\t\t\t // non-indexed buffer geometry\n \n\t\t\t\t if ( Array.isArray( material ) ) {\n \n\t\t\t\t\t for ( let i = 0, il = groups.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t const group = groups[ i ];\n\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\n \n\t\t\t\t\t\t const start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t const end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t\t\t for ( let j = start, jl = end; j < jl; j += 3 ) {\n \n\t\t\t\t\t\t\t const a = j;\n\t\t\t\t\t\t\t const b = j + 1;\n\t\t\t\t\t\t\t const c = j + 2;\n \n\t\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n\t\t\t\t\t\t\t if ( intersection ) {\n \n\t\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t intersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t intersects.push( intersection );\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t const start = Math.max( 0, drawRange.start );\n\t\t\t\t\t const end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t\t for ( let i = start, il = end; i < il; i += 3 ) {\n \n\t\t\t\t\t\t const a = i;\n\t\t\t\t\t\t const b = i + 1;\n\t\t\t\t\t\t const c = i + 2;\n \n\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n \n\t\t\t\t\t\t if ( intersection ) {\n \n\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t intersects.push( intersection );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else if ( geometry.isGeometry ) {\n \n\t\t\t console.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t }\n \n\t }\n \n }\n \n Mesh.prototype.isMesh = true;\n \n function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n \n\t let intersect;\n \n\t if ( material.side === BackSide ) {\n \n\t\t intersect = ray.intersectTriangle( pC, pB, pA, true, point );\n \n\t } else {\n \n\t\t intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n \n\t }\n \n\t if ( intersect === null ) return null;\n \n\t _intersectionPointWorld.copy( point );\n\t _intersectionPointWorld.applyMatrix4( object.matrixWorld );\n \n\t const distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n \n\t if ( distance < raycaster.near || distance > raycaster.far ) return null;\n \n\t return {\n\t\t distance: distance,\n\t\t point: _intersectionPointWorld.clone(),\n\t\t object: object\n\t };\n \n }\n \n function checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n \n\t _vA$1.fromBufferAttribute( position, a );\n\t _vB$1.fromBufferAttribute( position, b );\n\t _vC$1.fromBufferAttribute( position, c );\n \n\t const morphInfluences = object.morphTargetInfluences;\n \n\t if ( material.morphTargets && morphPosition && morphInfluences ) {\n \n\t\t _morphA.set( 0, 0, 0 );\n\t\t _morphB.set( 0, 0, 0 );\n\t\t _morphC.set( 0, 0, 0 );\n \n\t\t for ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n \n\t\t\t const influence = morphInfluences[ i ];\n\t\t\t const morphAttribute = morphPosition[ i ];\n \n\t\t\t if ( influence === 0 ) continue;\n \n\t\t\t _tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t _tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t _tempC.fromBufferAttribute( morphAttribute, c );\n \n\t\t\t if ( morphTargetsRelative ) {\n \n\t\t\t\t _morphA.addScaledVector( _tempA, influence );\n\t\t\t\t _morphB.addScaledVector( _tempB, influence );\n\t\t\t\t _morphC.addScaledVector( _tempC, influence );\n \n\t\t\t } else {\n \n\t\t\t\t _morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t _morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t _morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n \n\t\t\t }\n \n\t\t }\n \n\t\t _vA$1.add( _morphA );\n\t\t _vB$1.add( _morphB );\n\t\t _vC$1.add( _morphC );\n \n\t }\n \n\t if ( object.isSkinnedMesh ) {\n \n\t\t object.boneTransform( a, _vA$1 );\n\t\t object.boneTransform( b, _vB$1 );\n\t\t object.boneTransform( c, _vC$1 );\n \n\t }\n \n\t const intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n \n\t if ( intersection ) {\n \n\t\t if ( uv ) {\n \n\t\t\t _uvA$1.fromBufferAttribute( uv, a );\n\t\t\t _uvB$1.fromBufferAttribute( uv, b );\n\t\t\t _uvC$1.fromBufferAttribute( uv, c );\n \n\t\t\t intersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n \n\t\t }\n \n\t\t if ( uv2 ) {\n \n\t\t\t _uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t _uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t _uvC$1.fromBufferAttribute( uv2, c );\n \n\t\t\t intersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n \n\t\t }\n \n\t\t const face = {\n\t\t\t a: a,\n\t\t\t b: b,\n\t\t\t c: c,\n\t\t\t normal: new Vector3(),\n\t\t\t materialIndex: 0\n\t\t };\n \n\t\t Triangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n \n\t\t intersection.face = face;\n \n\t }\n \n\t return intersection;\n \n }\n \n class BoxGeometry extends BufferGeometry {\n \n\t constructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n \n\t\t super();\n \n\t\t this.type = 'BoxGeometry';\n \n\t\t this.parameters = {\n\t\t\t width: width,\n\t\t\t height: height,\n\t\t\t depth: depth,\n\t\t\t widthSegments: widthSegments,\n\t\t\t heightSegments: heightSegments,\n\t\t\t depthSegments: depthSegments\n\t\t };\n \n\t\t const scope = this;\n \n\t\t // segments\n \n\t\t widthSegments = Math.floor( widthSegments );\n\t\t heightSegments = Math.floor( heightSegments );\n\t\t depthSegments = Math.floor( depthSegments );\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // helper variables\n \n\t\t let numberOfVertices = 0;\n\t\t let groupStart = 0;\n \n\t\t // build each side of the box geometry\n \n\t\t buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\t buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\t buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\t buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\t buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\t buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t\t function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n \n\t\t\t const segmentWidth = width / gridX;\n\t\t\t const segmentHeight = height / gridY;\n \n\t\t\t const widthHalf = width / 2;\n\t\t\t const heightHalf = height / 2;\n\t\t\t const depthHalf = depth / 2;\n \n\t\t\t const gridX1 = gridX + 1;\n\t\t\t const gridY1 = gridY + 1;\n \n\t\t\t let vertexCounter = 0;\n\t\t\t let groupCount = 0;\n \n\t\t\t const vector = new Vector3();\n \n\t\t\t // generate vertices, normals and uvs\n \n\t\t\t for ( let iy = 0; iy < gridY1; iy ++ ) {\n \n\t\t\t\t const y = iy * segmentHeight - heightHalf;\n \n\t\t\t\t for ( let ix = 0; ix < gridX1; ix ++ ) {\n \n\t\t\t\t\t const x = ix * segmentWidth - widthHalf;\n \n\t\t\t\t\t // set values to correct vector component\n \n\t\t\t\t\t vector[ u ] = x * udir;\n\t\t\t\t\t vector[ v ] = y * vdir;\n\t\t\t\t\t vector[ w ] = depthHalf;\n \n\t\t\t\t\t // now apply vector to vertex buffer\n \n\t\t\t\t\t vertices.push( vector.x, vector.y, vector.z );\n \n\t\t\t\t\t // set values to correct vector component\n \n\t\t\t\t\t vector[ u ] = 0;\n\t\t\t\t\t vector[ v ] = 0;\n\t\t\t\t\t vector[ w ] = depth > 0 ? 1 : - 1;\n \n\t\t\t\t\t // now apply vector to normal buffer\n \n\t\t\t\t\t normals.push( vector.x, vector.y, vector.z );\n \n\t\t\t\t\t // uvs\n \n\t\t\t\t\t uvs.push( ix / gridX );\n\t\t\t\t\t uvs.push( 1 - ( iy / gridY ) );\n \n\t\t\t\t\t // counters\n \n\t\t\t\t\t vertexCounter += 1;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // indices\n \n\t\t\t // 1. you need three indices to draw a single face\n\t\t\t // 2. a single segment consists of two faces\n\t\t\t // 3. so we need to generate six (2*3) indices per segment\n \n\t\t\t for ( let iy = 0; iy < gridY; iy ++ ) {\n \n\t\t\t\t for ( let ix = 0; ix < gridX; ix ++ ) {\n \n\t\t\t\t\t const a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t const b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\t const c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\t const d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n \n\t\t\t\t\t // faces\n \n\t\t\t\t\t indices.push( a, b, d );\n\t\t\t\t\t indices.push( b, c, d );\n \n\t\t\t\t\t // increase counter\n \n\t\t\t\t\t groupCount += 6;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // add a group to the geometry. this will ensure multi material support\n \n\t\t\t scope.addGroup( groupStart, groupCount, materialIndex );\n \n\t\t\t // calculate new start value for groups\n \n\t\t\t groupStart += groupCount;\n \n\t\t\t // update total number of vertices\n \n\t\t\t numberOfVertices += vertexCounter;\n \n\t\t }\n \n\t }\n \n }\n \n /**\n  * Uniform Utilities\n  */\n \n function cloneUniforms( src ) {\n \n\t const dst = {};\n \n\t for ( const u in src ) {\n \n\t\t dst[ u ] = {};\n \n\t\t for ( const p in src[ u ] ) {\n \n\t\t\t const property = src[ u ][ p ];\n \n\t\t\t if ( property && ( property.isColor ||\n\t\t\t\t property.isMatrix3 || property.isMatrix4 ||\n\t\t\t\t property.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\t property.isTexture || property.isQuaternion ) ) {\n \n\t\t\t\t dst[ u ][ p ] = property.clone();\n \n\t\t\t } else if ( Array.isArray( property ) ) {\n \n\t\t\t\t dst[ u ][ p ] = property.slice();\n \n\t\t\t } else {\n \n\t\t\t\t dst[ u ][ p ] = property;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t return dst;\n \n }\n \n function mergeUniforms( uniforms ) {\n \n\t const merged = {};\n \n\t for ( let u = 0; u < uniforms.length; u ++ ) {\n \n\t\t const tmp = cloneUniforms( uniforms[ u ] );\n \n\t\t for ( const p in tmp ) {\n \n\t\t\t merged[ p ] = tmp[ p ];\n \n\t\t }\n \n\t }\n \n\t return merged;\n \n }\n \n // Legacy\n \n const UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n \n var default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n \n var default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n \n /**\n  * parameters = {\n  *  defines: { \"label\" : \"value\" },\n  *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n  *\n  *  fragmentShader: <string>,\n  *  vertexShader: <string>,\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>,\n  *\n  *  lights: <bool>,\n  *\n  *  morphTargets: <bool>,\n  *  morphNormals: <bool>\n  * }\n  */\n \n class ShaderMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'ShaderMaterial';\n \n\t\t this.defines = {};\n\t\t this.uniforms = {};\n \n\t\t this.vertexShader = default_vertex;\n\t\t this.fragmentShader = default_fragment;\n \n\t\t this.linewidth = 1;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n \n\t\t this.fog = false; // set to use scene fog\n\t\t this.lights = false; // set to use scene lights\n\t\t this.clipping = false; // set to use user-defined clipping planes\n \n\t\t this.morphTargets = false; // set to use morph targets\n\t\t this.morphNormals = false; // set to use morph normals\n \n\t\t this.extensions = {\n\t\t\t derivatives: false, // set to use derivatives\n\t\t\t fragDepth: false, // set to use fragment depth values\n\t\t\t drawBuffers: false, // set to use draw buffers\n\t\t\t shaderTextureLOD: false // set to use shader texture LOD\n\t\t };\n \n\t\t // When rendered geometry doesn't include these attributes but the material does,\n\t\t // use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\t this.defaultAttributeValues = {\n\t\t\t 'color': [ 1, 1, 1 ],\n\t\t\t 'uv': [ 0, 0 ],\n\t\t\t 'uv2': [ 0, 0 ]\n\t\t };\n \n\t\t this.index0AttributeName = undefined;\n\t\t this.uniformsNeedUpdate = false;\n \n\t\t this.glslVersion = null;\n \n\t\t if ( parameters !== undefined ) {\n \n\t\t\t if ( parameters.attributes !== undefined ) {\n \n\t\t\t\t console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n \n\t\t\t }\n \n\t\t\t this.setValues( parameters );\n \n\t\t }\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.fragmentShader = source.fragmentShader;\n\t\t this.vertexShader = source.vertexShader;\n \n\t\t this.uniforms = cloneUniforms( source.uniforms );\n \n\t\t this.defines = Object.assign( {}, source.defines );\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n \n\t\t this.lights = source.lights;\n\t\t this.clipping = source.clipping;\n \n\t\t this.morphTargets = source.morphTargets;\n\t\t this.morphNormals = source.morphNormals;\n \n\t\t this.extensions = Object.assign( {}, source.extensions );\n \n\t\t this.glslVersion = source.glslVersion;\n \n\t\t return this;\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t data.glslVersion = this.glslVersion;\n\t\t data.uniforms = {};\n \n\t\t for ( const name in this.uniforms ) {\n \n\t\t\t const uniform = this.uniforms[ name ];\n\t\t\t const value = uniform.value;\n \n\t\t\t if ( value && value.isTexture ) {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t type: 't',\n\t\t\t\t\t value: value.toJSON( meta ).uuid\n\t\t\t\t };\n \n\t\t\t } else if ( value && value.isColor ) {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t type: 'c',\n\t\t\t\t\t value: value.getHex()\n\t\t\t\t };\n \n\t\t\t } else if ( value && value.isVector2 ) {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t type: 'v2',\n\t\t\t\t\t value: value.toArray()\n\t\t\t\t };\n \n\t\t\t } else if ( value && value.isVector3 ) {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t type: 'v3',\n\t\t\t\t\t value: value.toArray()\n\t\t\t\t };\n \n\t\t\t } else if ( value && value.isVector4 ) {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t type: 'v4',\n\t\t\t\t\t value: value.toArray()\n\t\t\t\t };\n \n\t\t\t } else if ( value && value.isMatrix3 ) {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t type: 'm3',\n\t\t\t\t\t value: value.toArray()\n\t\t\t\t };\n \n\t\t\t } else if ( value && value.isMatrix4 ) {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t type: 'm4',\n\t\t\t\t\t value: value.toArray()\n\t\t\t\t };\n \n\t\t\t } else {\n \n\t\t\t\t data.uniforms[ name ] = {\n\t\t\t\t\t value: value\n\t\t\t\t };\n \n\t\t\t\t // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n \n\t\t data.vertexShader = this.vertexShader;\n\t\t data.fragmentShader = this.fragmentShader;\n \n\t\t const extensions = {};\n \n\t\t for ( const key in this.extensions ) {\n \n\t\t\t if ( this.extensions[ key ] === true ) extensions[ key ] = true;\n \n\t\t }\n \n\t\t if ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n \n\t\t return data;\n \n\t }\n \n }\n \n ShaderMaterial.prototype.isShaderMaterial = true;\n \n class Camera extends Object3D {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this.type = 'Camera';\n \n\t\t this.matrixWorldInverse = new Matrix4();\n \n\t\t this.projectionMatrix = new Matrix4();\n\t\t this.projectionMatrixInverse = new Matrix4();\n \n\t }\n \n\t copy( source, recursive ) {\n \n\t\t super.copy( source, recursive );\n \n\t\t this.matrixWorldInverse.copy( source.matrixWorldInverse );\n \n\t\t this.projectionMatrix.copy( source.projectionMatrix );\n\t\t this.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n \n\t\t return this;\n \n\t }\n \n\t getWorldDirection( target ) {\n \n\t\t this.updateWorldMatrix( true, false );\n \n\t\t const e = this.matrixWorld.elements;\n \n\t\t return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t super.updateMatrixWorld( force );\n \n\t\t this.matrixWorldInverse.copy( this.matrixWorld ).invert();\n \n\t }\n \n\t updateWorldMatrix( updateParents, updateChildren ) {\n \n\t\t super.updateWorldMatrix( updateParents, updateChildren );\n \n\t\t this.matrixWorldInverse.copy( this.matrixWorld ).invert();\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n Camera.prototype.isCamera = true;\n \n class PerspectiveCamera extends Camera {\n \n\t constructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n \n\t\t super();\n \n\t\t this.type = 'PerspectiveCamera';\n \n\t\t this.fov = fov;\n\t\t this.zoom = 1;\n \n\t\t this.near = near;\n\t\t this.far = far;\n\t\t this.focus = 10;\n \n\t\t this.aspect = aspect;\n\t\t this.view = null;\n \n\t\t this.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\t this.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n \n\t\t this.updateProjectionMatrix();\n \n\t }\n \n\t copy( source, recursive ) {\n \n\t\t super.copy( source, recursive );\n \n\t\t this.fov = source.fov;\n\t\t this.zoom = source.zoom;\n \n\t\t this.near = source.near;\n\t\t this.far = source.far;\n\t\t this.focus = source.focus;\n \n\t\t this.aspect = source.aspect;\n\t\t this.view = source.view === null ? null : Object.assign( {}, source.view );\n \n\t\t this.filmGauge = source.filmGauge;\n\t\t this.filmOffset = source.filmOffset;\n \n\t\t return this;\n \n\t }\n \n\t /**\n\t  * Sets the FOV by focal length in respect to the current .filmGauge.\n\t  *\n\t  * The default film gauge is 35, so that the focal length can be specified for\n\t  * a 35mm (full frame) camera.\n\t  *\n\t  * Values for focal length and film gauge must have the same unit.\n\t  */\n\t setFocalLength( focalLength ) {\n \n\t\t /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n \n\t\t this.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t this.updateProjectionMatrix();\n \n\t }\n \n\t /**\n\t  * Calculates the focal length from the current .fov and .filmGauge.\n\t  */\n\t getFocalLength() {\n \n\t\t const vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n \n\t\t return 0.5 * this.getFilmHeight() / vExtentSlope;\n \n\t }\n \n\t getEffectiveFOV() {\n \n\t\t return RAD2DEG * 2 * Math.atan(\n\t\t\t Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n \n\t }\n \n\t getFilmWidth() {\n \n\t\t // film not completely covered in portrait format (aspect < 1)\n\t\t return this.filmGauge * Math.min( this.aspect, 1 );\n \n\t }\n \n\t getFilmHeight() {\n \n\t\t // film not completely covered in landscape format (aspect > 1)\n\t\t return this.filmGauge / Math.max( this.aspect, 1 );\n \n\t }\n \n\t /**\n\t  * Sets an offset in a larger frustum. This is useful for multi-window or\n\t  * multi-monitor/multi-machine setups.\n\t  *\n\t  * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t  * the monitors are in grid like this\n\t  *\n\t  *   +---+---+---+\n\t  *   | A | B | C |\n\t  *   +---+---+---+\n\t  *   | D | E | F |\n\t  *   +---+---+---+\n\t  *\n\t  * then for each monitor you would call it like this\n\t  *\n\t  *   const w = 1920;\n\t  *   const h = 1080;\n\t  *   const fullWidth = w * 3;\n\t  *   const fullHeight = h * 2;\n\t  *\n\t  *   --A--\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t  *   --B--\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t  *   --C--\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t  *   --D--\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t  *   --E--\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t  *   --F--\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t  *\n\t  *   Note there is no reason monitors have to be the same size or in a grid.\n\t  */\n\t setViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n \n\t\t this.aspect = fullWidth / fullHeight;\n \n\t\t if ( this.view === null ) {\n \n\t\t\t this.view = {\n\t\t\t\t enabled: true,\n\t\t\t\t fullWidth: 1,\n\t\t\t\t fullHeight: 1,\n\t\t\t\t offsetX: 0,\n\t\t\t\t offsetY: 0,\n\t\t\t\t width: 1,\n\t\t\t\t height: 1\n\t\t\t };\n \n\t\t }\n \n\t\t this.view.enabled = true;\n\t\t this.view.fullWidth = fullWidth;\n\t\t this.view.fullHeight = fullHeight;\n\t\t this.view.offsetX = x;\n\t\t this.view.offsetY = y;\n\t\t this.view.width = width;\n\t\t this.view.height = height;\n \n\t\t this.updateProjectionMatrix();\n \n\t }\n \n\t clearViewOffset() {\n \n\t\t if ( this.view !== null ) {\n \n\t\t\t this.view.enabled = false;\n \n\t\t }\n \n\t\t this.updateProjectionMatrix();\n \n\t }\n \n\t updateProjectionMatrix() {\n \n\t\t const near = this.near;\n\t\t let top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\t let height = 2 * top;\n\t\t let width = this.aspect * height;\n\t\t let left = - 0.5 * width;\n\t\t const view = this.view;\n \n\t\t if ( this.view !== null && this.view.enabled ) {\n \n\t\t\t const fullWidth = view.fullWidth,\n\t\t\t\t fullHeight = view.fullHeight;\n \n\t\t\t left += view.offsetX * width / fullWidth;\n\t\t\t top -= view.offsetY * height / fullHeight;\n\t\t\t width *= view.width / fullWidth;\n\t\t\t height *= view.height / fullHeight;\n \n\t\t }\n \n\t\t const skew = this.filmOffset;\n\t\t if ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n \n\t\t this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n \n\t\t this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t data.object.fov = this.fov;\n\t\t data.object.zoom = this.zoom;\n \n\t\t data.object.near = this.near;\n\t\t data.object.far = this.far;\n\t\t data.object.focus = this.focus;\n \n\t\t data.object.aspect = this.aspect;\n \n\t\t if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n \n\t\t data.object.filmGauge = this.filmGauge;\n\t\t data.object.filmOffset = this.filmOffset;\n \n\t\t return data;\n \n\t }\n \n }\n \n PerspectiveCamera.prototype.isPerspectiveCamera = true;\n \n const fov = 90, aspect = 1;\n \n class CubeCamera extends Object3D {\n \n\t constructor( near, far, renderTarget ) {\n \n\t\t super();\n \n\t\t this.type = 'CubeCamera';\n \n\t\t if ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n \n\t\t\t console.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t this.renderTarget = renderTarget;\n \n\t\t const cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\t cameraPX.layers = this.layers;\n\t\t cameraPX.up.set( 0, - 1, 0 );\n\t\t cameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\t this.add( cameraPX );\n \n\t\t const cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\t cameraNX.layers = this.layers;\n\t\t cameraNX.up.set( 0, - 1, 0 );\n\t\t cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\t this.add( cameraNX );\n \n\t\t const cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\t cameraPY.layers = this.layers;\n\t\t cameraPY.up.set( 0, 0, 1 );\n\t\t cameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\t this.add( cameraPY );\n \n\t\t const cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\t cameraNY.layers = this.layers;\n\t\t cameraNY.up.set( 0, 0, - 1 );\n\t\t cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\t this.add( cameraNY );\n \n\t\t const cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\t cameraPZ.layers = this.layers;\n\t\t cameraPZ.up.set( 0, - 1, 0 );\n\t\t cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\t this.add( cameraPZ );\n \n\t\t const cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\t cameraNZ.layers = this.layers;\n\t\t cameraNZ.up.set( 0, - 1, 0 );\n\t\t cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\t this.add( cameraNZ );\n \n\t }\n \n\t update( renderer, scene ) {\n \n\t\t if ( this.parent === null ) this.updateMatrixWorld();\n \n\t\t const renderTarget = this.renderTarget;\n \n\t\t const [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n \n\t\t const currentXrEnabled = renderer.xr.enabled;\n\t\t const currentRenderTarget = renderer.getRenderTarget();\n \n\t\t renderer.xr.enabled = false;\n \n\t\t const generateMipmaps = renderTarget.texture.generateMipmaps;\n \n\t\t renderTarget.texture.generateMipmaps = false;\n \n\t\t renderer.setRenderTarget( renderTarget, 0 );\n\t\t renderer.render( scene, cameraPX );\n \n\t\t renderer.setRenderTarget( renderTarget, 1 );\n\t\t renderer.render( scene, cameraNX );\n \n\t\t renderer.setRenderTarget( renderTarget, 2 );\n\t\t renderer.render( scene, cameraPY );\n \n\t\t renderer.setRenderTarget( renderTarget, 3 );\n\t\t renderer.render( scene, cameraNY );\n \n\t\t renderer.setRenderTarget( renderTarget, 4 );\n\t\t renderer.render( scene, cameraPZ );\n \n\t\t renderTarget.texture.generateMipmaps = generateMipmaps;\n \n\t\t renderer.setRenderTarget( renderTarget, 5 );\n\t\t renderer.render( scene, cameraNZ );\n \n\t\t renderer.setRenderTarget( currentRenderTarget );\n \n\t\t renderer.xr.enabled = currentXrEnabled;\n \n\t }\n \n }\n \n class CubeTexture extends Texture {\n \n\t constructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n \n\t\t images = images !== undefined ? images : [];\n\t\t mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t format = format !== undefined ? format : RGBFormat;\n \n\t\t super( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n \n\t\t // Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t //\n\t\t // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n \n\t\t // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t // and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t // when using WebGLCubeRenderTarget.texture as a cube texture.\n \n\t\t this._needsFlipEnvMap = true;\n \n\t\t this.flipY = false;\n \n\t }\n \n\t get images() {\n \n\t\t return this.image;\n \n\t }\n \n\t set images( value ) {\n \n\t\t this.image = value;\n \n\t }\n \n }\n \n CubeTexture.prototype.isCubeTexture = true;\n \n class WebGLCubeRenderTarget extends WebGLRenderTarget {\n \n\t constructor( size, options, dummy ) {\n \n\t\t if ( Number.isInteger( options ) ) {\n \n\t\t\t console.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n \n\t\t\t options = dummy;\n \n\t\t }\n \n\t\t super( size, size, options );\n \n\t\t options = options || {};\n \n\t\t this.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n \n\t\t this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n \n\t\t this.texture._needsFlipEnvMap = false;\n \n\t }\n \n\t fromEquirectangularTexture( renderer, texture ) {\n \n\t\t this.texture.type = texture.type;\n\t\t this.texture.format = RGBAFormat; // see #18859\n\t\t this.texture.encoding = texture.encoding;\n \n\t\t this.texture.generateMipmaps = texture.generateMipmaps;\n\t\t this.texture.minFilter = texture.minFilter;\n\t\t this.texture.magFilter = texture.magFilter;\n \n\t\t const shader = {\n \n\t\t\t uniforms: {\n\t\t\t\t tEquirect: { value: null },\n\t\t\t },\n \n\t\t\t vertexShader: /* glsl */`\n \n\t\t\t\t varying vec3 vWorldDirection;\n \n\t\t\t\t vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n \n\t\t\t\t\t return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n \n\t\t\t\t }\n \n\t\t\t\t void main() {\n \n\t\t\t\t\t vWorldDirection = transformDirection( position, modelMatrix );\n \n\t\t\t\t\t #include <begin_vertex>\n\t\t\t\t\t #include <project_vertex>\n \n\t\t\t\t }\n\t\t\t `,\n \n\t\t\t fragmentShader: /* glsl */`\n \n\t\t\t\t uniform sampler2D tEquirect;\n \n\t\t\t\t varying vec3 vWorldDirection;\n \n\t\t\t\t #include <common>\n \n\t\t\t\t void main() {\n \n\t\t\t\t\t vec3 direction = normalize( vWorldDirection );\n \n\t\t\t\t\t vec2 sampleUV = equirectUv( direction );\n \n\t\t\t\t\t gl_FragColor = texture2D( tEquirect, sampleUV );\n \n\t\t\t\t }\n\t\t\t `\n\t\t };\n \n\t\t const geometry = new BoxGeometry( 5, 5, 5 );\n \n\t\t const material = new ShaderMaterial( {\n \n\t\t\t name: 'CubemapFromEquirect',\n \n\t\t\t uniforms: cloneUniforms( shader.uniforms ),\n\t\t\t vertexShader: shader.vertexShader,\n\t\t\t fragmentShader: shader.fragmentShader,\n\t\t\t side: BackSide,\n\t\t\t blending: NoBlending\n \n\t\t } );\n \n\t\t material.uniforms.tEquirect.value = texture;\n \n\t\t const mesh = new Mesh( geometry, material );\n \n\t\t const currentMinFilter = texture.minFilter;\n \n\t\t // Avoid blurred poles\n\t\t if ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n \n\t\t const camera = new CubeCamera( 1, 10, this );\n\t\t camera.update( renderer, mesh );\n \n\t\t texture.minFilter = currentMinFilter;\n \n\t\t mesh.geometry.dispose();\n\t\t mesh.material.dispose();\n \n\t\t return this;\n \n\t }\n \n\t clear( renderer, color, depth, stencil ) {\n \n\t\t const currentRenderTarget = renderer.getRenderTarget();\n \n\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t renderer.setRenderTarget( this, i );\n \n\t\t\t renderer.clear( color, depth, stencil );\n \n\t\t }\n \n\t\t renderer.setRenderTarget( currentRenderTarget );\n \n\t }\n \n }\n \n WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n \n const _vector1 = /*@__PURE__*/ new Vector3();\n const _vector2 = /*@__PURE__*/ new Vector3();\n const _normalMatrix = /*@__PURE__*/ new Matrix3();\n \n class Plane {\n \n\t constructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n \n\t\t // normal is assumed to be normalized\n \n\t\t this.normal = normal;\n\t\t this.constant = constant;\n \n\t }\n \n\t set( normal, constant ) {\n \n\t\t this.normal.copy( normal );\n\t\t this.constant = constant;\n \n\t\t return this;\n \n\t }\n \n\t setComponents( x, y, z, w ) {\n \n\t\t this.normal.set( x, y, z );\n\t\t this.constant = w;\n \n\t\t return this;\n \n\t }\n \n\t setFromNormalAndCoplanarPoint( normal, point ) {\n \n\t\t this.normal.copy( normal );\n\t\t this.constant = - point.dot( this.normal );\n \n\t\t return this;\n \n\t }\n \n\t setFromCoplanarPoints( a, b, c ) {\n \n\t\t const normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n \n\t\t // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n \n\t\t this.setFromNormalAndCoplanarPoint( normal, a );\n \n\t\t return this;\n \n\t }\n \n\t copy( plane ) {\n \n\t\t this.normal.copy( plane.normal );\n\t\t this.constant = plane.constant;\n \n\t\t return this;\n \n\t }\n \n\t normalize() {\n \n\t\t // Note: will lead to a divide by zero if the plane is invalid.\n \n\t\t const inverseNormalLength = 1.0 / this.normal.length();\n\t\t this.normal.multiplyScalar( inverseNormalLength );\n\t\t this.constant *= inverseNormalLength;\n \n\t\t return this;\n \n\t }\n \n\t negate() {\n \n\t\t this.constant *= - 1;\n\t\t this.normal.negate();\n \n\t\t return this;\n \n\t }\n \n\t distanceToPoint( point ) {\n \n\t\t return this.normal.dot( point ) + this.constant;\n \n\t }\n \n\t distanceToSphere( sphere ) {\n \n\t\t return this.distanceToPoint( sphere.center ) - sphere.radius;\n \n\t }\n \n\t projectPoint( point, target ) {\n \n\t\t return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n \n\t }\n \n\t intersectLine( line, target ) {\n \n\t\t const direction = line.delta( _vector1 );\n \n\t\t const denominator = this.normal.dot( direction );\n \n\t\t if ( denominator === 0 ) {\n \n\t\t\t // line is coplanar, return origin\n\t\t\t if ( this.distanceToPoint( line.start ) === 0 ) {\n \n\t\t\t\t return target.copy( line.start );\n \n\t\t\t }\n \n\t\t\t // Unsure if this is the correct method to handle this case.\n\t\t\t return null;\n \n\t\t }\n \n\t\t const t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n \n\t\t if ( t < 0 || t > 1 ) {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t return target.copy( direction ).multiplyScalar( t ).add( line.start );\n \n\t }\n \n\t intersectsLine( line ) {\n \n\t\t // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n \n\t\t const startSign = this.distanceToPoint( line.start );\n\t\t const endSign = this.distanceToPoint( line.end );\n \n\t\t return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n \n\t }\n \n\t intersectsBox( box ) {\n \n\t\t return box.intersectsPlane( this );\n \n\t }\n \n\t intersectsSphere( sphere ) {\n \n\t\t return sphere.intersectsPlane( this );\n \n\t }\n \n\t coplanarPoint( target ) {\n \n\t\t return target.copy( this.normal ).multiplyScalar( - this.constant );\n \n\t }\n \n\t applyMatrix4( matrix, optionalNormalMatrix ) {\n \n\t\t const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n \n\t\t const referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n \n\t\t const normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n \n\t\t this.constant = - referencePoint.dot( normal );\n \n\t\t return this;\n \n\t }\n \n\t translate( offset ) {\n \n\t\t this.constant -= offset.dot( this.normal );\n \n\t\t return this;\n \n\t }\n \n\t equals( plane ) {\n \n\t\t return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n Plane.prototype.isPlane = true;\n \n const _sphere$2 = /*@__PURE__*/ new Sphere();\n const _vector$7 = /*@__PURE__*/ new Vector3();\n \n class Frustum {\n \n\t constructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n \n\t\t this.planes = [ p0, p1, p2, p3, p4, p5 ];\n \n\t }\n \n\t set( p0, p1, p2, p3, p4, p5 ) {\n \n\t\t const planes = this.planes;\n \n\t\t planes[ 0 ].copy( p0 );\n\t\t planes[ 1 ].copy( p1 );\n\t\t planes[ 2 ].copy( p2 );\n\t\t planes[ 3 ].copy( p3 );\n\t\t planes[ 4 ].copy( p4 );\n\t\t planes[ 5 ].copy( p5 );\n \n\t\t return this;\n \n\t }\n \n\t copy( frustum ) {\n \n\t\t const planes = this.planes;\n \n\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t planes[ i ].copy( frustum.planes[ i ] );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setFromProjectionMatrix( m ) {\n \n\t\t const planes = this.planes;\n\t\t const me = m.elements;\n\t\t const me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t const me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t const me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t const me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n \n\t\t planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n \n\t\t return this;\n \n\t }\n \n\t intersectsObject( object ) {\n \n\t\t const geometry = object.geometry;\n \n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n\t\t _sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n \n\t\t return this.intersectsSphere( _sphere$2 );\n \n\t }\n \n\t intersectsSprite( sprite ) {\n \n\t\t _sphere$2.center.set( 0, 0, 0 );\n\t\t _sphere$2.radius = 0.7071067811865476;\n\t\t _sphere$2.applyMatrix4( sprite.matrixWorld );\n \n\t\t return this.intersectsSphere( _sphere$2 );\n \n\t }\n \n\t intersectsSphere( sphere ) {\n \n\t\t const planes = this.planes;\n\t\t const center = sphere.center;\n\t\t const negRadius = - sphere.radius;\n \n\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t const distance = planes[ i ].distanceToPoint( center );\n \n\t\t\t if ( distance < negRadius ) {\n \n\t\t\t\t return false;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return true;\n \n\t }\n \n\t intersectsBox( box ) {\n \n\t\t const planes = this.planes;\n \n\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t const plane = planes[ i ];\n \n\t\t\t // corner at max distance\n \n\t\t\t _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n \n\t\t\t if ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n \n\t\t\t\t return false;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return true;\n \n\t }\n \n\t containsPoint( point ) {\n \n\t\t const planes = this.planes;\n \n\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t if ( planes[ i ].distanceToPoint( point ) < 0 ) {\n \n\t\t\t\t return false;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return true;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n function WebGLAnimation() {\n \n\t let context = null;\n\t let isAnimating = false;\n\t let animationLoop = null;\n\t let requestId = null;\n \n\t function onAnimationFrame( time, frame ) {\n \n\t\t animationLoop( time, frame );\n \n\t\t requestId = context.requestAnimationFrame( onAnimationFrame );\n \n\t }\n \n\t return {\n \n\t\t start: function () {\n \n\t\t\t if ( isAnimating === true ) return;\n\t\t\t if ( animationLoop === null ) return;\n \n\t\t\t requestId = context.requestAnimationFrame( onAnimationFrame );\n \n\t\t\t isAnimating = true;\n \n\t\t },\n \n\t\t stop: function () {\n \n\t\t\t context.cancelAnimationFrame( requestId );\n \n\t\t\t isAnimating = false;\n \n\t\t },\n \n\t\t setAnimationLoop: function ( callback ) {\n \n\t\t\t animationLoop = callback;\n \n\t\t },\n \n\t\t setContext: function ( value ) {\n \n\t\t\t context = value;\n \n\t\t }\n \n\t };\n \n }\n \n function WebGLAttributes( gl, capabilities ) {\n \n\t const isWebGL2 = capabilities.isWebGL2;\n \n\t const buffers = new WeakMap();\n \n\t function createBuffer( attribute, bufferType ) {\n \n\t\t const array = attribute.array;\n\t\t const usage = attribute.usage;\n \n\t\t const buffer = gl.createBuffer();\n \n\t\t gl.bindBuffer( bufferType, buffer );\n\t\t gl.bufferData( bufferType, array, usage );\n \n\t\t attribute.onUploadCallback();\n \n\t\t let type = 5126;\n \n\t\t if ( array instanceof Float32Array ) {\n \n\t\t\t type = 5126;\n \n\t\t } else if ( array instanceof Float64Array ) {\n \n\t\t\t console.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n \n\t\t } else if ( array instanceof Uint16Array ) {\n \n\t\t\t if ( attribute.isFloat16BufferAttribute ) {\n \n\t\t\t\t if ( isWebGL2 ) {\n \n\t\t\t\t\t type = 5131;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t type = 5123;\n \n\t\t\t }\n \n\t\t } else if ( array instanceof Int16Array ) {\n \n\t\t\t type = 5122;\n \n\t\t } else if ( array instanceof Uint32Array ) {\n \n\t\t\t type = 5125;\n \n\t\t } else if ( array instanceof Int32Array ) {\n \n\t\t\t type = 5124;\n \n\t\t } else if ( array instanceof Int8Array ) {\n \n\t\t\t type = 5120;\n \n\t\t } else if ( array instanceof Uint8Array ) {\n \n\t\t\t type = 5121;\n \n\t\t } else if ( array instanceof Uint8ClampedArray ) {\n \n\t\t\t type = 5121;\n \n\t\t }\n \n\t\t return {\n\t\t\t buffer: buffer,\n\t\t\t type: type,\n\t\t\t bytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t version: attribute.version\n\t\t };\n \n\t }\n \n\t function updateBuffer( buffer, attribute, bufferType ) {\n \n\t\t const array = attribute.array;\n\t\t const updateRange = attribute.updateRange;\n \n\t\t gl.bindBuffer( bufferType, buffer );\n \n\t\t if ( updateRange.count === - 1 ) {\n \n\t\t\t // Not using update ranges\n \n\t\t\t gl.bufferSubData( bufferType, 0, array );\n \n\t\t } else {\n \n\t\t\t if ( isWebGL2 ) {\n \n\t\t\t\t gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t array, updateRange.offset, updateRange.count );\n \n\t\t\t } else {\n \n\t\t\t\t gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n \n\t\t\t }\n \n\t\t\t updateRange.count = - 1; // reset range\n \n\t\t }\n \n\t }\n \n\t //\n \n\t function get( attribute ) {\n \n\t\t if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n \n\t\t return buffers.get( attribute );\n \n\t }\n \n\t function remove( attribute ) {\n \n\t\t if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n \n\t\t const data = buffers.get( attribute );\n \n\t\t if ( data ) {\n \n\t\t\t gl.deleteBuffer( data.buffer );\n \n\t\t\t buffers.delete( attribute );\n \n\t\t }\n \n\t }\n \n\t function update( attribute, bufferType ) {\n \n\t\t if ( attribute.isGLBufferAttribute ) {\n \n\t\t\t const cached = buffers.get( attribute );\n \n\t\t\t if ( ! cached || cached.version < attribute.version ) {\n \n\t\t\t\t buffers.set( attribute, {\n\t\t\t\t\t buffer: attribute.buffer,\n\t\t\t\t\t type: attribute.type,\n\t\t\t\t\t bytesPerElement: attribute.elementSize,\n\t\t\t\t\t version: attribute.version\n\t\t\t\t } );\n \n\t\t\t }\n \n\t\t\t return;\n \n\t\t }\n \n\t\t if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n \n\t\t const data = buffers.get( attribute );\n \n\t\t if ( data === undefined ) {\n \n\t\t\t buffers.set( attribute, createBuffer( attribute, bufferType ) );\n \n\t\t } else if ( data.version < attribute.version ) {\n \n\t\t\t updateBuffer( data.buffer, attribute, bufferType );\n \n\t\t\t data.version = attribute.version;\n \n\t\t }\n \n\t }\n \n\t return {\n \n\t\t get: get,\n\t\t remove: remove,\n\t\t update: update\n \n\t };\n \n }\n \n class PlaneGeometry extends BufferGeometry {\n \n\t constructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n \n\t\t super();\n\t\t this.type = 'PlaneGeometry';\n \n\t\t this.parameters = {\n\t\t\t width: width,\n\t\t\t height: height,\n\t\t\t widthSegments: widthSegments,\n\t\t\t heightSegments: heightSegments\n\t\t };\n \n\t\t const width_half = width / 2;\n\t\t const height_half = height / 2;\n \n\t\t const gridX = Math.floor( widthSegments );\n\t\t const gridY = Math.floor( heightSegments );\n \n\t\t const gridX1 = gridX + 1;\n\t\t const gridY1 = gridY + 1;\n \n\t\t const segment_width = width / gridX;\n\t\t const segment_height = height / gridY;\n \n\t\t //\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t for ( let iy = 0; iy < gridY1; iy ++ ) {\n \n\t\t\t const y = iy * segment_height - height_half;\n \n\t\t\t for ( let ix = 0; ix < gridX1; ix ++ ) {\n \n\t\t\t\t const x = ix * segment_width - width_half;\n \n\t\t\t\t vertices.push( x, - y, 0 );\n \n\t\t\t\t normals.push( 0, 0, 1 );\n \n\t\t\t\t uvs.push( ix / gridX );\n\t\t\t\t uvs.push( 1 - ( iy / gridY ) );\n \n\t\t\t }\n \n\t\t }\n \n\t\t for ( let iy = 0; iy < gridY; iy ++ ) {\n \n\t\t\t for ( let ix = 0; ix < gridX; ix ++ ) {\n \n\t\t\t\t const a = ix + gridX1 * iy;\n\t\t\t\t const b = ix + gridX1 * ( iy + 1 );\n\t\t\t\t const c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t const d = ( ix + 1 ) + gridX1 * iy;\n \n\t\t\t\t indices.push( a, b, d );\n\t\t\t\t indices.push( b, c, d );\n \n\t\t\t }\n \n\t\t }\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t }\n \n }\n \n var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n \n var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n \n var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n \n var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n \n var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n \n var begin_vertex = \"vec3 transformed = vec3( position );\";\n \n var beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n \n var bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n \n var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n \n var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n \n var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n \n var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n \n var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n \n var color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n \n var color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n \n var color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n \n var color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n \n var common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n \n var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n \n var defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n \n var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n \n var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n \n var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n \n var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n \n var encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n \n var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n \n var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n \n var envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n \n var envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n \n var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n \n var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n \n var fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n \n var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n \n var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n \n var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n \n var gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n \n var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n \n var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n \n var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n \n var lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n \n var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n \n var lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n \n var lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n \n var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n \n var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n \n var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n \n var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n \n var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n \n var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n \n var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n \n var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n \n var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n \n var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n \n var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n \n var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n \n var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n \n var map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n \n var map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n \n var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n \n var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n \n var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n \n var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n \n var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n \n var normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n \n var normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n \n var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n \n var clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n \n var clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n \n var clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n \n var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n \n var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n \n var project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n \n var dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n \n var dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n \n var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n \n var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n \n var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n \n var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n \n var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n \n var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n \n var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n \n var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n \n var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n \n var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n \n var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n \n var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n \n var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n \n var tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n \n var transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\\n\\t\\tnormal, v, roughnessFactor, material.diffuseColor, totalSpecular,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\\n#endif\";\n \n var transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";\n \n var uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n \n var uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n \n var uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n \n var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n \n var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n \n var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n \n var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n \n var background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n \n var background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n \n var cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n \n var cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n \n var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n \n var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n \n var distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n \n var distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n \n var equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n \n var equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n \n var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n \n var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n var meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n var meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n \n var meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n var meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n var meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n \n var meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";\n \n var normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n \n var normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n \n var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n \n var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n var shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n \n var shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n var sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n \n var sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n \n const ShaderChunk = {\n\t alphamap_fragment: alphamap_fragment,\n\t alphamap_pars_fragment: alphamap_pars_fragment,\n\t alphatest_fragment: alphatest_fragment,\n\t aomap_fragment: aomap_fragment,\n\t aomap_pars_fragment: aomap_pars_fragment,\n\t begin_vertex: begin_vertex,\n\t beginnormal_vertex: beginnormal_vertex,\n\t bsdfs: bsdfs,\n\t bumpmap_pars_fragment: bumpmap_pars_fragment,\n\t clipping_planes_fragment: clipping_planes_fragment,\n\t clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t clipping_planes_vertex: clipping_planes_vertex,\n\t color_fragment: color_fragment,\n\t color_pars_fragment: color_pars_fragment,\n\t color_pars_vertex: color_pars_vertex,\n\t color_vertex: color_vertex,\n\t common: common,\n\t cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t defaultnormal_vertex: defaultnormal_vertex,\n\t displacementmap_pars_vertex: displacementmap_pars_vertex,\n\t displacementmap_vertex: displacementmap_vertex,\n\t emissivemap_fragment: emissivemap_fragment,\n\t emissivemap_pars_fragment: emissivemap_pars_fragment,\n\t encodings_fragment: encodings_fragment,\n\t encodings_pars_fragment: encodings_pars_fragment,\n\t envmap_fragment: envmap_fragment,\n\t envmap_common_pars_fragment: envmap_common_pars_fragment,\n\t envmap_pars_fragment: envmap_pars_fragment,\n\t envmap_pars_vertex: envmap_pars_vertex,\n\t envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t envmap_vertex: envmap_vertex,\n\t fog_vertex: fog_vertex,\n\t fog_pars_vertex: fog_pars_vertex,\n\t fog_fragment: fog_fragment,\n\t fog_pars_fragment: fog_pars_fragment,\n\t gradientmap_pars_fragment: gradientmap_pars_fragment,\n\t lightmap_fragment: lightmap_fragment,\n\t lightmap_pars_fragment: lightmap_pars_fragment,\n\t lights_lambert_vertex: lights_lambert_vertex,\n\t lights_pars_begin: lights_pars_begin,\n\t lights_toon_fragment: lights_toon_fragment,\n\t lights_toon_pars_fragment: lights_toon_pars_fragment,\n\t lights_phong_fragment: lights_phong_fragment,\n\t lights_phong_pars_fragment: lights_phong_pars_fragment,\n\t lights_physical_fragment: lights_physical_fragment,\n\t lights_physical_pars_fragment: lights_physical_pars_fragment,\n\t lights_fragment_begin: lights_fragment_begin,\n\t lights_fragment_maps: lights_fragment_maps,\n\t lights_fragment_end: lights_fragment_end,\n\t logdepthbuf_fragment: logdepthbuf_fragment,\n\t logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t logdepthbuf_vertex: logdepthbuf_vertex,\n\t map_fragment: map_fragment,\n\t map_pars_fragment: map_pars_fragment,\n\t map_particle_fragment: map_particle_fragment,\n\t map_particle_pars_fragment: map_particle_pars_fragment,\n\t metalnessmap_fragment: metalnessmap_fragment,\n\t metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t morphnormal_vertex: morphnormal_vertex,\n\t morphtarget_pars_vertex: morphtarget_pars_vertex,\n\t morphtarget_vertex: morphtarget_vertex,\n\t normal_fragment_begin: normal_fragment_begin,\n\t normal_fragment_maps: normal_fragment_maps,\n\t normalmap_pars_fragment: normalmap_pars_fragment,\n\t clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t clearcoat_pars_fragment: clearcoat_pars_fragment,\n\t packing: packing,\n\t premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t project_vertex: project_vertex,\n\t dithering_fragment: dithering_fragment,\n\t dithering_pars_fragment: dithering_pars_fragment,\n\t roughnessmap_fragment: roughnessmap_fragment,\n\t roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t shadowmap_pars_fragment: shadowmap_pars_fragment,\n\t shadowmap_pars_vertex: shadowmap_pars_vertex,\n\t shadowmap_vertex: shadowmap_vertex,\n\t shadowmask_pars_fragment: shadowmask_pars_fragment,\n\t skinbase_vertex: skinbase_vertex,\n\t skinning_pars_vertex: skinning_pars_vertex,\n\t skinning_vertex: skinning_vertex,\n\t skinnormal_vertex: skinnormal_vertex,\n\t specularmap_fragment: specularmap_fragment,\n\t specularmap_pars_fragment: specularmap_pars_fragment,\n\t tonemapping_fragment: tonemapping_fragment,\n\t tonemapping_pars_fragment: tonemapping_pars_fragment,\n\t transmission_fragment: transmission_fragment,\n\t transmission_pars_fragment: transmission_pars_fragment,\n\t uv_pars_fragment: uv_pars_fragment,\n\t uv_pars_vertex: uv_pars_vertex,\n\t uv_vertex: uv_vertex,\n\t uv2_pars_fragment: uv2_pars_fragment,\n\t uv2_pars_vertex: uv2_pars_vertex,\n\t uv2_vertex: uv2_vertex,\n\t worldpos_vertex: worldpos_vertex,\n \n\t background_frag: background_frag,\n\t background_vert: background_vert,\n\t cube_frag: cube_frag,\n\t cube_vert: cube_vert,\n\t depth_frag: depth_frag,\n\t depth_vert: depth_vert,\n\t distanceRGBA_frag: distanceRGBA_frag,\n\t distanceRGBA_vert: distanceRGBA_vert,\n\t equirect_frag: equirect_frag,\n\t equirect_vert: equirect_vert,\n\t linedashed_frag: linedashed_frag,\n\t linedashed_vert: linedashed_vert,\n\t meshbasic_frag: meshbasic_frag,\n\t meshbasic_vert: meshbasic_vert,\n\t meshlambert_frag: meshlambert_frag,\n\t meshlambert_vert: meshlambert_vert,\n\t meshmatcap_frag: meshmatcap_frag,\n\t meshmatcap_vert: meshmatcap_vert,\n\t meshtoon_frag: meshtoon_frag,\n\t meshtoon_vert: meshtoon_vert,\n\t meshphong_frag: meshphong_frag,\n\t meshphong_vert: meshphong_vert,\n\t meshphysical_frag: meshphysical_frag,\n\t meshphysical_vert: meshphysical_vert,\n\t normal_frag: normal_frag,\n\t normal_vert: normal_vert,\n\t points_frag: points_frag,\n\t points_vert: points_vert,\n\t shadow_frag: shadow_frag,\n\t shadow_vert: shadow_vert,\n\t sprite_frag: sprite_frag,\n\t sprite_vert: sprite_vert\n };\n \n /**\n  * Uniforms library for shared webgl shaders\n  */\n \n const UniformsLib = {\n \n\t common: {\n \n\t\t diffuse: { value: new Color( 0xffffff ) },\n\t\t opacity: { value: 1.0 },\n \n\t\t map: { value: null },\n\t\t uvTransform: { value: new Matrix3() },\n\t\t uv2Transform: { value: new Matrix3() },\n \n\t\t alphaMap: { value: null },\n \n\t },\n \n\t specularmap: {\n \n\t\t specularMap: { value: null },\n \n\t },\n \n\t envmap: {\n \n\t\t envMap: { value: null },\n\t\t flipEnvMap: { value: - 1 },\n\t\t reflectivity: { value: 1.0 },\n\t\t refractionRatio: { value: 0.98 },\n\t\t maxMipLevel: { value: 0 }\n \n\t },\n \n\t aomap: {\n \n\t\t aoMap: { value: null },\n\t\t aoMapIntensity: { value: 1 }\n \n\t },\n \n\t lightmap: {\n \n\t\t lightMap: { value: null },\n\t\t lightMapIntensity: { value: 1 }\n \n\t },\n \n\t emissivemap: {\n \n\t\t emissiveMap: { value: null }\n \n\t },\n \n\t bumpmap: {\n \n\t\t bumpMap: { value: null },\n\t\t bumpScale: { value: 1 }\n \n\t },\n \n\t normalmap: {\n \n\t\t normalMap: { value: null },\n\t\t normalScale: { value: new Vector2( 1, 1 ) }\n \n\t },\n \n\t displacementmap: {\n \n\t\t displacementMap: { value: null },\n\t\t displacementScale: { value: 1 },\n\t\t displacementBias: { value: 0 }\n \n\t },\n \n\t roughnessmap: {\n \n\t\t roughnessMap: { value: null }\n \n\t },\n \n\t metalnessmap: {\n \n\t\t metalnessMap: { value: null }\n \n\t },\n \n\t gradientmap: {\n \n\t\t gradientMap: { value: null }\n \n\t },\n \n\t fog: {\n \n\t\t fogDensity: { value: 0.00025 },\n\t\t fogNear: { value: 1 },\n\t\t fogFar: { value: 2000 },\n\t\t fogColor: { value: new Color( 0xffffff ) }\n \n\t },\n \n\t lights: {\n \n\t\t ambientLightColor: { value: [] },\n \n\t\t lightProbe: { value: [] },\n \n\t\t directionalLights: { value: [], properties: {\n\t\t\t direction: {},\n\t\t\t color: {}\n\t\t } },\n \n\t\t directionalLightShadows: { value: [], properties: {\n\t\t\t shadowBias: {},\n\t\t\t shadowNormalBias: {},\n\t\t\t shadowRadius: {},\n\t\t\t shadowMapSize: {}\n\t\t } },\n \n\t\t directionalShadowMap: { value: [] },\n\t\t directionalShadowMatrix: { value: [] },\n \n\t\t spotLights: { value: [], properties: {\n\t\t\t color: {},\n\t\t\t position: {},\n\t\t\t direction: {},\n\t\t\t distance: {},\n\t\t\t coneCos: {},\n\t\t\t penumbraCos: {},\n\t\t\t decay: {}\n\t\t } },\n \n\t\t spotLightShadows: { value: [], properties: {\n\t\t\t shadowBias: {},\n\t\t\t shadowNormalBias: {},\n\t\t\t shadowRadius: {},\n\t\t\t shadowMapSize: {}\n\t\t } },\n \n\t\t spotShadowMap: { value: [] },\n\t\t spotShadowMatrix: { value: [] },\n \n\t\t pointLights: { value: [], properties: {\n\t\t\t color: {},\n\t\t\t position: {},\n\t\t\t decay: {},\n\t\t\t distance: {}\n\t\t } },\n \n\t\t pointLightShadows: { value: [], properties: {\n\t\t\t shadowBias: {},\n\t\t\t shadowNormalBias: {},\n\t\t\t shadowRadius: {},\n\t\t\t shadowMapSize: {},\n\t\t\t shadowCameraNear: {},\n\t\t\t shadowCameraFar: {}\n\t\t } },\n \n\t\t pointShadowMap: { value: [] },\n\t\t pointShadowMatrix: { value: [] },\n \n\t\t hemisphereLights: { value: [], properties: {\n\t\t\t direction: {},\n\t\t\t skyColor: {},\n\t\t\t groundColor: {}\n\t\t } },\n \n\t\t // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t rectAreaLights: { value: [], properties: {\n\t\t\t color: {},\n\t\t\t position: {},\n\t\t\t width: {},\n\t\t\t height: {}\n\t\t } },\n \n\t\t ltc_1: { value: null },\n\t\t ltc_2: { value: null }\n \n\t },\n \n\t points: {\n \n\t\t diffuse: { value: new Color( 0xffffff ) },\n\t\t opacity: { value: 1.0 },\n\t\t size: { value: 1.0 },\n\t\t scale: { value: 1.0 },\n\t\t map: { value: null },\n\t\t alphaMap: { value: null },\n\t\t uvTransform: { value: new Matrix3() }\n \n\t },\n \n\t sprite: {\n \n\t\t diffuse: { value: new Color( 0xffffff ) },\n\t\t opacity: { value: 1.0 },\n\t\t center: { value: new Vector2( 0.5, 0.5 ) },\n\t\t rotation: { value: 0.0 },\n\t\t map: { value: null },\n\t\t alphaMap: { value: null },\n\t\t uvTransform: { value: new Matrix3() }\n \n\t }\n \n };\n \n const ShaderLib = {\n \n\t basic: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.specularmap,\n\t\t\t UniformsLib.envmap,\n\t\t\t UniformsLib.aomap,\n\t\t\t UniformsLib.lightmap,\n\t\t\t UniformsLib.fog\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.meshbasic_vert,\n\t\t fragmentShader: ShaderChunk.meshbasic_frag\n \n\t },\n \n\t lambert: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.specularmap,\n\t\t\t UniformsLib.envmap,\n\t\t\t UniformsLib.aomap,\n\t\t\t UniformsLib.lightmap,\n\t\t\t UniformsLib.emissivemap,\n\t\t\t UniformsLib.fog,\n\t\t\t UniformsLib.lights,\n\t\t\t {\n\t\t\t\t emissive: { value: new Color( 0x000000 ) }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.meshlambert_vert,\n\t\t fragmentShader: ShaderChunk.meshlambert_frag\n \n\t },\n \n\t phong: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.specularmap,\n\t\t\t UniformsLib.envmap,\n\t\t\t UniformsLib.aomap,\n\t\t\t UniformsLib.lightmap,\n\t\t\t UniformsLib.emissivemap,\n\t\t\t UniformsLib.bumpmap,\n\t\t\t UniformsLib.normalmap,\n\t\t\t UniformsLib.displacementmap,\n\t\t\t UniformsLib.fog,\n\t\t\t UniformsLib.lights,\n\t\t\t {\n\t\t\t\t emissive: { value: new Color( 0x000000 ) },\n\t\t\t\t specular: { value: new Color( 0x111111 ) },\n\t\t\t\t shininess: { value: 30 }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.meshphong_vert,\n\t\t fragmentShader: ShaderChunk.meshphong_frag\n \n\t },\n \n\t standard: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.envmap,\n\t\t\t UniformsLib.aomap,\n\t\t\t UniformsLib.lightmap,\n\t\t\t UniformsLib.emissivemap,\n\t\t\t UniformsLib.bumpmap,\n\t\t\t UniformsLib.normalmap,\n\t\t\t UniformsLib.displacementmap,\n\t\t\t UniformsLib.roughnessmap,\n\t\t\t UniformsLib.metalnessmap,\n\t\t\t UniformsLib.fog,\n\t\t\t UniformsLib.lights,\n\t\t\t {\n\t\t\t\t emissive: { value: new Color( 0x000000 ) },\n\t\t\t\t roughness: { value: 1.0 },\n\t\t\t\t metalness: { value: 0.0 },\n\t\t\t\t envMapIntensity: { value: 1 } // temporary\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.meshphysical_vert,\n\t\t fragmentShader: ShaderChunk.meshphysical_frag\n \n\t },\n \n\t toon: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.aomap,\n\t\t\t UniformsLib.lightmap,\n\t\t\t UniformsLib.emissivemap,\n\t\t\t UniformsLib.bumpmap,\n\t\t\t UniformsLib.normalmap,\n\t\t\t UniformsLib.displacementmap,\n\t\t\t UniformsLib.gradientmap,\n\t\t\t UniformsLib.fog,\n\t\t\t UniformsLib.lights,\n\t\t\t {\n\t\t\t\t emissive: { value: new Color( 0x000000 ) }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.meshtoon_vert,\n\t\t fragmentShader: ShaderChunk.meshtoon_frag\n \n\t },\n \n\t matcap: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.bumpmap,\n\t\t\t UniformsLib.normalmap,\n\t\t\t UniformsLib.displacementmap,\n\t\t\t UniformsLib.fog,\n\t\t\t {\n\t\t\t\t matcap: { value: null }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.meshmatcap_vert,\n\t\t fragmentShader: ShaderChunk.meshmatcap_frag\n \n\t },\n \n\t points: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.points,\n\t\t\t UniformsLib.fog\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.points_vert,\n\t\t fragmentShader: ShaderChunk.points_frag\n \n\t },\n \n\t dashed: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.fog,\n\t\t\t {\n\t\t\t\t scale: { value: 1 },\n\t\t\t\t dashSize: { value: 1 },\n\t\t\t\t totalSize: { value: 2 }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.linedashed_vert,\n\t\t fragmentShader: ShaderChunk.linedashed_frag\n \n\t },\n \n\t depth: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.displacementmap\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.depth_vert,\n\t\t fragmentShader: ShaderChunk.depth_frag\n \n\t },\n \n\t normal: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.bumpmap,\n\t\t\t UniformsLib.normalmap,\n\t\t\t UniformsLib.displacementmap,\n\t\t\t {\n\t\t\t\t opacity: { value: 1.0 }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.normal_vert,\n\t\t fragmentShader: ShaderChunk.normal_frag\n \n\t },\n \n\t sprite: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.sprite,\n\t\t\t UniformsLib.fog\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.sprite_vert,\n\t\t fragmentShader: ShaderChunk.sprite_frag\n \n\t },\n \n\t background: {\n \n\t\t uniforms: {\n\t\t\t uvTransform: { value: new Matrix3() },\n\t\t\t t2D: { value: null },\n\t\t },\n \n\t\t vertexShader: ShaderChunk.background_vert,\n\t\t fragmentShader: ShaderChunk.background_frag\n \n\t },\n\t /* -------------------------------------------------------------------------\n\t //\tCube map shader\n\t  ------------------------------------------------------------------------- */\n \n\t cube: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.envmap,\n\t\t\t {\n\t\t\t\t opacity: { value: 1.0 }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.cube_vert,\n\t\t fragmentShader: ShaderChunk.cube_frag\n \n\t },\n \n\t equirect: {\n \n\t\t uniforms: {\n\t\t\t tEquirect: { value: null },\n\t\t },\n \n\t\t vertexShader: ShaderChunk.equirect_vert,\n\t\t fragmentShader: ShaderChunk.equirect_frag\n \n\t },\n \n\t distanceRGBA: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.common,\n\t\t\t UniformsLib.displacementmap,\n\t\t\t {\n\t\t\t\t referencePosition: { value: new Vector3() },\n\t\t\t\t nearDistance: { value: 1 },\n\t\t\t\t farDistance: { value: 1000 }\n\t\t\t }\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t fragmentShader: ShaderChunk.distanceRGBA_frag\n \n\t },\n \n\t shadow: {\n \n\t\t uniforms: mergeUniforms( [\n\t\t\t UniformsLib.lights,\n\t\t\t UniformsLib.fog,\n\t\t\t {\n\t\t\t\t color: { value: new Color( 0x00000 ) },\n\t\t\t\t opacity: { value: 1.0 }\n\t\t\t },\n\t\t ] ),\n \n\t\t vertexShader: ShaderChunk.shadow_vert,\n\t\t fragmentShader: ShaderChunk.shadow_frag\n \n\t }\n \n };\n \n ShaderLib.physical = {\n \n\t uniforms: mergeUniforms( [\n\t\t ShaderLib.standard.uniforms,\n\t\t {\n\t\t\t clearcoat: { value: 0 },\n\t\t\t clearcoatMap: { value: null },\n\t\t\t clearcoatRoughness: { value: 0 },\n\t\t\t clearcoatRoughnessMap: { value: null },\n\t\t\t clearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t clearcoatNormalMap: { value: null },\n\t\t\t sheen: { value: new Color( 0x000000 ) },\n\t\t\t transmission: { value: 0 },\n\t\t\t transmissionMap: { value: null },\n\t\t\t transmissionSamplerSize: { value: new Vector2() },\n\t\t\t transmissionSamplerMap: { value: null },\n\t\t\t thickness: { value: 0 },\n\t\t\t thicknessMap: { value: null },\n\t\t\t attenuationDistance: { value: 0 },\n\t\t\t attenuationColor: { value: new Color( 0x000000 ) }\n\t\t }\n\t ] ),\n \n\t vertexShader: ShaderChunk.meshphysical_vert,\n\t fragmentShader: ShaderChunk.meshphysical_frag\n \n };\n \n function WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n \n\t const clearColor = new Color( 0x000000 );\n\t let clearAlpha = 0;\n \n\t let planeMesh;\n\t let boxMesh;\n \n\t let currentBackground = null;\n\t let currentBackgroundVersion = 0;\n\t let currentTonemapping = null;\n \n\t function render( renderList, scene ) {\n \n\t\t let forceClear = false;\n\t\t let background = scene.isScene === true ? scene.background : null;\n \n\t\t if ( background && background.isTexture ) {\n \n\t\t\t background = cubemaps.get( background );\n \n\t\t }\n \n\t\t // Ignore background in AR\n\t\t // TODO: Reconsider this.\n \n\t\t const xr = renderer.xr;\n\t\t const session = xr.getSession && xr.getSession();\n \n\t\t if ( session && session.environmentBlendMode === 'additive' ) {\n \n\t\t\t background = null;\n \n\t\t }\n \n\t\t if ( background === null ) {\n \n\t\t\t setClear( clearColor, clearAlpha );\n \n\t\t } else if ( background && background.isColor ) {\n \n\t\t\t setClear( background, 1 );\n\t\t\t forceClear = true;\n \n\t\t }\n \n\t\t if ( renderer.autoClear || forceClear ) {\n \n\t\t\t renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n \n\t\t }\n \n\t\t if ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n \n\t\t\t if ( boxMesh === undefined ) {\n \n\t\t\t\t boxMesh = new Mesh(\n\t\t\t\t\t new BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\t new ShaderMaterial( {\n\t\t\t\t\t\t name: 'BackgroundCubeMaterial',\n\t\t\t\t\t\t uniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\t vertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t fragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t side: BackSide,\n\t\t\t\t\t\t depthTest: false,\n\t\t\t\t\t\t depthWrite: false,\n\t\t\t\t\t\t fog: false\n\t\t\t\t\t } )\n\t\t\t\t );\n \n\t\t\t\t boxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\t boxMesh.geometry.deleteAttribute( 'uv' );\n \n\t\t\t\t boxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n \n\t\t\t\t\t this.matrixWorld.copyPosition( camera.matrixWorld );\n \n\t\t\t\t };\n \n\t\t\t\t // enable code injection for non-built-in material\n\t\t\t\t Object.defineProperty( boxMesh.material, 'envMap', {\n \n\t\t\t\t\t get: function () {\n \n\t\t\t\t\t\t return this.uniforms.envMap.value;\n \n\t\t\t\t\t }\n \n\t\t\t\t } );\n \n\t\t\t\t objects.update( boxMesh );\n \n\t\t\t }\n \n\t\t\t boxMesh.material.uniforms.envMap.value = background;\n\t\t\t boxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n \n\t\t\t if ( currentBackground !== background ||\n\t\t\t\t currentBackgroundVersion !== background.version ||\n\t\t\t\t currentTonemapping !== renderer.toneMapping ) {\n \n\t\t\t\t boxMesh.material.needsUpdate = true;\n \n\t\t\t\t currentBackground = background;\n\t\t\t\t currentBackgroundVersion = background.version;\n\t\t\t\t currentTonemapping = renderer.toneMapping;\n \n\t\t\t }\n \n\t\t\t // push to the pre-sorted opaque render list\n\t\t\t renderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n \n\t\t } else if ( background && background.isTexture ) {\n \n\t\t\t if ( planeMesh === undefined ) {\n \n\t\t\t\t planeMesh = new Mesh(\n\t\t\t\t\t new PlaneGeometry( 2, 2 ),\n\t\t\t\t\t new ShaderMaterial( {\n\t\t\t\t\t\t name: 'BackgroundMaterial',\n\t\t\t\t\t\t uniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t vertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t fragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t side: FrontSide,\n\t\t\t\t\t\t depthTest: false,\n\t\t\t\t\t\t depthWrite: false,\n\t\t\t\t\t\t fog: false\n\t\t\t\t\t } )\n\t\t\t\t );\n \n\t\t\t\t planeMesh.geometry.deleteAttribute( 'normal' );\n \n\t\t\t\t // enable code injection for non-built-in material\n\t\t\t\t Object.defineProperty( planeMesh.material, 'map', {\n \n\t\t\t\t\t get: function () {\n \n\t\t\t\t\t\t return this.uniforms.t2D.value;\n \n\t\t\t\t\t }\n \n\t\t\t\t } );\n \n\t\t\t\t objects.update( planeMesh );\n \n\t\t\t }\n \n\t\t\t planeMesh.material.uniforms.t2D.value = background;\n \n\t\t\t if ( background.matrixAutoUpdate === true ) {\n \n\t\t\t\t background.updateMatrix();\n \n\t\t\t }\n \n\t\t\t planeMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n \n\t\t\t if ( currentBackground !== background ||\n\t\t\t\t currentBackgroundVersion !== background.version ||\n\t\t\t\t currentTonemapping !== renderer.toneMapping ) {\n \n\t\t\t\t planeMesh.material.needsUpdate = true;\n \n\t\t\t\t currentBackground = background;\n\t\t\t\t currentBackgroundVersion = background.version;\n\t\t\t\t currentTonemapping = renderer.toneMapping;\n \n\t\t\t }\n \n \n\t\t\t // push to the pre-sorted opaque render list\n\t\t\t renderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n \n\t\t }\n \n\t }\n \n\t function setClear( color, alpha ) {\n \n\t\t state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n \n\t }\n \n\t return {\n \n\t\t getClearColor: function () {\n \n\t\t\t return clearColor;\n \n\t\t },\n\t\t setClearColor: function ( color, alpha = 1 ) {\n \n\t\t\t clearColor.set( color );\n\t\t\t clearAlpha = alpha;\n\t\t\t setClear( clearColor, clearAlpha );\n \n\t\t },\n\t\t getClearAlpha: function () {\n \n\t\t\t return clearAlpha;\n \n\t\t },\n\t\t setClearAlpha: function ( alpha ) {\n \n\t\t\t clearAlpha = alpha;\n\t\t\t setClear( clearColor, clearAlpha );\n \n\t\t },\n\t\t render: render\n \n\t };\n \n }\n \n function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n \n\t const maxVertexAttributes = gl.getParameter( 34921 );\n \n\t const extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\t const vaoAvailable = capabilities.isWebGL2 || extension !== null;\n \n\t const bindingStates = {};\n \n\t const defaultState = createBindingState( null );\n\t let currentState = defaultState;\n \n\t function setup( object, material, program, geometry, index ) {\n \n\t\t let updateBuffers = false;\n \n\t\t if ( vaoAvailable ) {\n \n\t\t\t const state = getBindingState( geometry, program, material );\n \n\t\t\t if ( currentState !== state ) {\n \n\t\t\t\t currentState = state;\n\t\t\t\t bindVertexArrayObject( currentState.object );\n \n\t\t\t }\n \n\t\t\t updateBuffers = needsUpdate( geometry, index );\n \n\t\t\t if ( updateBuffers ) saveCache( geometry, index );\n \n\t\t } else {\n \n\t\t\t const wireframe = ( material.wireframe === true );\n \n\t\t\t if ( currentState.geometry !== geometry.id ||\n\t\t\t\t currentState.program !== program.id ||\n\t\t\t\t currentState.wireframe !== wireframe ) {\n \n\t\t\t\t currentState.geometry = geometry.id;\n\t\t\t\t currentState.program = program.id;\n\t\t\t\t currentState.wireframe = wireframe;\n \n\t\t\t\t updateBuffers = true;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( object.isInstancedMesh === true ) {\n \n\t\t\t updateBuffers = true;\n \n\t\t }\n \n\t\t if ( index !== null ) {\n \n\t\t\t attributes.update( index, 34963 );\n \n\t\t }\n \n\t\t if ( updateBuffers ) {\n \n\t\t\t setupVertexAttributes( object, material, program, geometry );\n \n\t\t\t if ( index !== null ) {\n \n\t\t\t\t gl.bindBuffer( 34963, attributes.get( index ).buffer );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t function createVertexArrayObject() {\n \n\t\t if ( capabilities.isWebGL2 ) return gl.createVertexArray();\n \n\t\t return extension.createVertexArrayOES();\n \n\t }\n \n\t function bindVertexArrayObject( vao ) {\n \n\t\t if ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n \n\t\t return extension.bindVertexArrayOES( vao );\n \n\t }\n \n\t function deleteVertexArrayObject( vao ) {\n \n\t\t if ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n \n\t\t return extension.deleteVertexArrayOES( vao );\n \n\t }\n \n\t function getBindingState( geometry, program, material ) {\n \n\t\t const wireframe = ( material.wireframe === true );\n \n\t\t let programMap = bindingStates[ geometry.id ];\n \n\t\t if ( programMap === undefined ) {\n \n\t\t\t programMap = {};\n\t\t\t bindingStates[ geometry.id ] = programMap;\n \n\t\t }\n \n\t\t let stateMap = programMap[ program.id ];\n \n\t\t if ( stateMap === undefined ) {\n \n\t\t\t stateMap = {};\n\t\t\t programMap[ program.id ] = stateMap;\n \n\t\t }\n \n\t\t let state = stateMap[ wireframe ];\n \n\t\t if ( state === undefined ) {\n \n\t\t\t state = createBindingState( createVertexArrayObject() );\n\t\t\t stateMap[ wireframe ] = state;\n \n\t\t }\n \n\t\t return state;\n \n\t }\n \n\t function createBindingState( vao ) {\n \n\t\t const newAttributes = [];\n\t\t const enabledAttributes = [];\n\t\t const attributeDivisors = [];\n \n\t\t for ( let i = 0; i < maxVertexAttributes; i ++ ) {\n \n\t\t\t newAttributes[ i ] = 0;\n\t\t\t enabledAttributes[ i ] = 0;\n\t\t\t attributeDivisors[ i ] = 0;\n \n\t\t }\n \n\t\t return {\n \n\t\t\t // for backward compatibility on non-VAO support browser\n\t\t\t geometry: null,\n\t\t\t program: null,\n\t\t\t wireframe: false,\n \n\t\t\t newAttributes: newAttributes,\n\t\t\t enabledAttributes: enabledAttributes,\n\t\t\t attributeDivisors: attributeDivisors,\n\t\t\t object: vao,\n\t\t\t attributes: {},\n\t\t\t index: null\n \n\t\t };\n \n\t }\n \n\t function needsUpdate( geometry, index ) {\n \n\t\t const cachedAttributes = currentState.attributes;\n\t\t const geometryAttributes = geometry.attributes;\n \n\t\t let attributesNum = 0;\n \n\t\t for ( const key in geometryAttributes ) {\n \n\t\t\t const cachedAttribute = cachedAttributes[ key ];\n\t\t\t const geometryAttribute = geometryAttributes[ key ];\n \n\t\t\t if ( cachedAttribute === undefined ) return true;\n \n\t\t\t if ( cachedAttribute.attribute !== geometryAttribute ) return true;\n \n\t\t\t if ( cachedAttribute.data !== geometryAttribute.data ) return true;\n \n\t\t\t attributesNum ++;\n \n\t\t }\n \n\t\t if ( currentState.attributesNum !== attributesNum ) return true;\n \n\t\t if ( currentState.index !== index ) return true;\n \n\t\t return false;\n \n\t }\n \n\t function saveCache( geometry, index ) {\n \n\t\t const cache = {};\n\t\t const attributes = geometry.attributes;\n\t\t let attributesNum = 0;\n \n\t\t for ( const key in attributes ) {\n \n\t\t\t const attribute = attributes[ key ];\n \n\t\t\t const data = {};\n\t\t\t data.attribute = attribute;\n \n\t\t\t if ( attribute.data ) {\n \n\t\t\t\t data.data = attribute.data;\n \n\t\t\t }\n \n\t\t\t cache[ key ] = data;\n \n\t\t\t attributesNum ++;\n \n\t\t }\n \n\t\t currentState.attributes = cache;\n\t\t currentState.attributesNum = attributesNum;\n \n\t\t currentState.index = index;\n \n\t }\n \n\t function initAttributes() {\n \n\t\t const newAttributes = currentState.newAttributes;\n \n\t\t for ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n \n\t\t\t newAttributes[ i ] = 0;\n \n\t\t }\n \n\t }\n \n\t function enableAttribute( attribute ) {\n \n\t\t enableAttributeAndDivisor( attribute, 0 );\n \n\t }\n \n\t function enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n \n\t\t const newAttributes = currentState.newAttributes;\n\t\t const enabledAttributes = currentState.enabledAttributes;\n\t\t const attributeDivisors = currentState.attributeDivisors;\n \n\t\t newAttributes[ attribute ] = 1;\n \n\t\t if ( enabledAttributes[ attribute ] === 0 ) {\n \n\t\t\t gl.enableVertexAttribArray( attribute );\n\t\t\t enabledAttributes[ attribute ] = 1;\n \n\t\t }\n \n\t\t if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n \n\t\t\t const extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n \n\t\t\t extension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t attributeDivisors[ attribute ] = meshPerAttribute;\n \n\t\t }\n \n\t }\n \n\t function disableUnusedAttributes() {\n \n\t\t const newAttributes = currentState.newAttributes;\n\t\t const enabledAttributes = currentState.enabledAttributes;\n \n\t\t for ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n \n\t\t\t if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n \n\t\t\t\t gl.disableVertexAttribArray( i );\n\t\t\t\t enabledAttributes[ i ] = 0;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t function vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n \n\t\t if ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n \n\t\t\t gl.vertexAttribIPointer( index, size, type, stride, offset );\n \n\t\t } else {\n \n\t\t\t gl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n \n\t\t }\n \n\t }\n \n\t function setupVertexAttributes( object, material, program, geometry ) {\n \n\t\t if ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n \n\t\t\t if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n \n\t\t }\n \n\t\t initAttributes();\n \n\t\t const geometryAttributes = geometry.attributes;\n \n\t\t const programAttributes = program.getAttributes();\n \n\t\t const materialDefaultAttributeValues = material.defaultAttributeValues;\n \n\t\t for ( const name in programAttributes ) {\n \n\t\t\t const programAttribute = programAttributes[ name ];\n \n\t\t\t if ( programAttribute >= 0 ) {\n \n\t\t\t\t const geometryAttribute = geometryAttributes[ name ];\n \n\t\t\t\t if ( geometryAttribute !== undefined ) {\n \n\t\t\t\t\t const normalized = geometryAttribute.normalized;\n\t\t\t\t\t const size = geometryAttribute.itemSize;\n \n\t\t\t\t\t const attribute = attributes.get( geometryAttribute );\n \n\t\t\t\t\t // TODO Attribute may not be available on context restore\n \n\t\t\t\t\t if ( attribute === undefined ) continue;\n \n\t\t\t\t\t const buffer = attribute.buffer;\n\t\t\t\t\t const type = attribute.type;\n\t\t\t\t\t const bytesPerElement = attribute.bytesPerElement;\n \n\t\t\t\t\t if ( geometryAttribute.isInterleavedBufferAttribute ) {\n \n\t\t\t\t\t\t const data = geometryAttribute.data;\n\t\t\t\t\t\t const stride = data.stride;\n\t\t\t\t\t\t const offset = geometryAttribute.offset;\n \n\t\t\t\t\t\t if ( data && data.isInstancedInterleavedBuffer ) {\n \n\t\t\t\t\t\t\t enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n \n\t\t\t\t\t\t\t if ( geometry._maxInstanceCount === undefined ) {\n \n\t\t\t\t\t\t\t\t geometry._maxInstanceCount = data.meshPerAttribute * data.count;\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t enableAttribute( programAttribute );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t if ( geometryAttribute.isInstancedBufferAttribute ) {\n \n\t\t\t\t\t\t\t enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n \n\t\t\t\t\t\t\t if ( geometry._maxInstanceCount === undefined ) {\n \n\t\t\t\t\t\t\t\t geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t enableAttribute( programAttribute );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else if ( name === 'instanceMatrix' ) {\n \n\t\t\t\t\t const attribute = attributes.get( object.instanceMatrix );\n \n\t\t\t\t\t // TODO Attribute may not be available on context restore\n \n\t\t\t\t\t if ( attribute === undefined ) continue;\n \n\t\t\t\t\t const buffer = attribute.buffer;\n\t\t\t\t\t const type = attribute.type;\n \n\t\t\t\t\t enableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\t enableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\t enableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\t enableAttributeAndDivisor( programAttribute + 3, 1 );\n \n\t\t\t\t\t gl.bindBuffer( 34962, buffer );\n \n\t\t\t\t\t gl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\t gl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\t gl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\t gl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n \n\t\t\t\t } else if ( name === 'instanceColor' ) {\n \n\t\t\t\t\t const attribute = attributes.get( object.instanceColor );\n \n\t\t\t\t\t // TODO Attribute may not be available on context restore\n \n\t\t\t\t\t if ( attribute === undefined ) continue;\n \n\t\t\t\t\t const buffer = attribute.buffer;\n\t\t\t\t\t const type = attribute.type;\n \n\t\t\t\t\t enableAttributeAndDivisor( programAttribute, 1 );\n \n\t\t\t\t\t gl.bindBuffer( 34962, buffer );\n \n\t\t\t\t\t gl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n \n\t\t\t\t } else if ( materialDefaultAttributeValues !== undefined ) {\n \n\t\t\t\t\t const value = materialDefaultAttributeValues[ name ];\n \n\t\t\t\t\t if ( value !== undefined ) {\n \n\t\t\t\t\t\t switch ( value.length ) {\n \n\t\t\t\t\t\t\t case 2:\n\t\t\t\t\t\t\t\t gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case 3:\n\t\t\t\t\t\t\t\t gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case 4:\n\t\t\t\t\t\t\t\t gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t default:\n\t\t\t\t\t\t\t\t gl.vertexAttrib1fv( programAttribute, value );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t disableUnusedAttributes();\n \n\t }\n \n\t function dispose() {\n \n\t\t reset();\n \n\t\t for ( const geometryId in bindingStates ) {\n \n\t\t\t const programMap = bindingStates[ geometryId ];\n \n\t\t\t for ( const programId in programMap ) {\n \n\t\t\t\t const stateMap = programMap[ programId ];\n \n\t\t\t\t for ( const wireframe in stateMap ) {\n \n\t\t\t\t\t deleteVertexArrayObject( stateMap[ wireframe ].object );\n \n\t\t\t\t\t delete stateMap[ wireframe ];\n \n\t\t\t\t }\n \n\t\t\t\t delete programMap[ programId ];\n \n\t\t\t }\n \n\t\t\t delete bindingStates[ geometryId ];\n \n\t\t }\n \n\t }\n \n\t function releaseStatesOfGeometry( geometry ) {\n \n\t\t if ( bindingStates[ geometry.id ] === undefined ) return;\n \n\t\t const programMap = bindingStates[ geometry.id ];\n \n\t\t for ( const programId in programMap ) {\n \n\t\t\t const stateMap = programMap[ programId ];\n \n\t\t\t for ( const wireframe in stateMap ) {\n \n\t\t\t\t deleteVertexArrayObject( stateMap[ wireframe ].object );\n \n\t\t\t\t delete stateMap[ wireframe ];\n \n\t\t\t }\n \n\t\t\t delete programMap[ programId ];\n \n\t\t }\n \n\t\t delete bindingStates[ geometry.id ];\n \n\t }\n \n\t function releaseStatesOfProgram( program ) {\n \n\t\t for ( const geometryId in bindingStates ) {\n \n\t\t\t const programMap = bindingStates[ geometryId ];\n \n\t\t\t if ( programMap[ program.id ] === undefined ) continue;\n \n\t\t\t const stateMap = programMap[ program.id ];\n \n\t\t\t for ( const wireframe in stateMap ) {\n \n\t\t\t\t deleteVertexArrayObject( stateMap[ wireframe ].object );\n \n\t\t\t\t delete stateMap[ wireframe ];\n \n\t\t\t }\n \n\t\t\t delete programMap[ program.id ];\n \n\t\t }\n \n\t }\n \n\t function reset() {\n \n\t\t resetDefaultState();\n \n\t\t if ( currentState === defaultState ) return;\n \n\t\t currentState = defaultState;\n\t\t bindVertexArrayObject( currentState.object );\n \n\t }\n \n\t // for backward-compatilibity\n \n\t function resetDefaultState() {\n \n\t\t defaultState.geometry = null;\n\t\t defaultState.program = null;\n\t\t defaultState.wireframe = false;\n \n\t }\n \n\t return {\n \n\t\t setup: setup,\n\t\t reset: reset,\n\t\t resetDefaultState: resetDefaultState,\n\t\t dispose: dispose,\n\t\t releaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t releaseStatesOfProgram: releaseStatesOfProgram,\n \n\t\t initAttributes: initAttributes,\n\t\t enableAttribute: enableAttribute,\n\t\t disableUnusedAttributes: disableUnusedAttributes\n \n\t };\n \n }\n \n function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n \n\t const isWebGL2 = capabilities.isWebGL2;\n \n\t let mode;\n \n\t function setMode( value ) {\n \n\t\t mode = value;\n \n\t }\n \n\t function render( start, count ) {\n \n\t\t gl.drawArrays( mode, start, count );\n \n\t\t info.update( count, mode, 1 );\n \n\t }\n \n\t function renderInstances( start, count, primcount ) {\n \n\t\t if ( primcount === 0 ) return;\n \n\t\t let extension, methodName;\n \n\t\t if ( isWebGL2 ) {\n \n\t\t\t extension = gl;\n\t\t\t methodName = 'drawArraysInstanced';\n \n\t\t } else {\n \n\t\t\t extension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t methodName = 'drawArraysInstancedANGLE';\n \n\t\t\t if ( extension === null ) {\n \n\t\t\t\t console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t return;\n \n\t\t\t }\n \n\t\t }\n \n\t\t extension[ methodName ]( mode, start, count, primcount );\n \n\t\t info.update( count, mode, primcount );\n \n\t }\n \n\t //\n \n\t this.setMode = setMode;\n\t this.render = render;\n\t this.renderInstances = renderInstances;\n \n }\n \n function WebGLCapabilities( gl, extensions, parameters ) {\n \n\t let maxAnisotropy;\n \n\t function getMaxAnisotropy() {\n \n\t\t if ( maxAnisotropy !== undefined ) return maxAnisotropy;\n \n\t\t if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n \n\t\t\t const extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n \n\t\t\t maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n \n\t\t } else {\n \n\t\t\t maxAnisotropy = 0;\n \n\t\t }\n \n\t\t return maxAnisotropy;\n \n\t }\n \n\t function getMaxPrecision( precision ) {\n \n\t\t if ( precision === 'highp' ) {\n \n\t\t\t if ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\t gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n \n\t\t\t\t return 'highp';\n \n\t\t\t }\n \n\t\t\t precision = 'mediump';\n \n\t\t }\n \n\t\t if ( precision === 'mediump' ) {\n \n\t\t\t if ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\t gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n \n\t\t\t\t return 'mediump';\n \n\t\t\t }\n \n\t\t }\n \n\t\t return 'lowp';\n \n\t }\n \n\t /* eslint-disable no-undef */\n\t const isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t ( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t /* eslint-enable no-undef */\n \n\t let precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t const maxPrecision = getMaxPrecision( precision );\n \n\t if ( maxPrecision !== precision ) {\n \n\t\t console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t precision = maxPrecision;\n \n\t }\n \n\t const drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n \n\t const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n \n\t const maxTextures = gl.getParameter( 34930 );\n\t const maxVertexTextures = gl.getParameter( 35660 );\n\t const maxTextureSize = gl.getParameter( 3379 );\n\t const maxCubemapSize = gl.getParameter( 34076 );\n \n\t const maxAttributes = gl.getParameter( 34921 );\n\t const maxVertexUniforms = gl.getParameter( 36347 );\n\t const maxVaryings = gl.getParameter( 36348 );\n\t const maxFragmentUniforms = gl.getParameter( 36349 );\n \n\t const vertexTextures = maxVertexTextures > 0;\n\t const floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\t const floatVertexTextures = vertexTextures && floatFragmentTextures;\n \n\t const maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n \n\t return {\n \n\t\t isWebGL2: isWebGL2,\n \n\t\t drawBuffers: drawBuffers,\n \n\t\t getMaxAnisotropy: getMaxAnisotropy,\n\t\t getMaxPrecision: getMaxPrecision,\n \n\t\t precision: precision,\n\t\t logarithmicDepthBuffer: logarithmicDepthBuffer,\n \n\t\t maxTextures: maxTextures,\n\t\t maxVertexTextures: maxVertexTextures,\n\t\t maxTextureSize: maxTextureSize,\n\t\t maxCubemapSize: maxCubemapSize,\n \n\t\t maxAttributes: maxAttributes,\n\t\t maxVertexUniforms: maxVertexUniforms,\n\t\t maxVaryings: maxVaryings,\n\t\t maxFragmentUniforms: maxFragmentUniforms,\n \n\t\t vertexTextures: vertexTextures,\n\t\t floatFragmentTextures: floatFragmentTextures,\n\t\t floatVertexTextures: floatVertexTextures,\n \n\t\t maxSamples: maxSamples\n \n\t };\n \n }\n \n function WebGLClipping( properties ) {\n \n\t const scope = this;\n \n\t let globalState = null,\n\t\t numGlobalPlanes = 0,\n\t\t localClippingEnabled = false,\n\t\t renderingShadows = false;\n \n\t const plane = new Plane(),\n\t\t viewNormalMatrix = new Matrix3(),\n \n\t\t uniform = { value: null, needsUpdate: false };\n \n\t this.uniform = uniform;\n\t this.numPlanes = 0;\n\t this.numIntersection = 0;\n \n\t this.init = function ( planes, enableLocalClipping, camera ) {\n \n\t\t const enabled =\n\t\t\t planes.length !== 0 ||\n\t\t\t enableLocalClipping ||\n\t\t\t // enable state of previous frame - the clipping code has to\n\t\t\t // run another frame in order to reset the state:\n\t\t\t numGlobalPlanes !== 0 ||\n\t\t\t localClippingEnabled;\n \n\t\t localClippingEnabled = enableLocalClipping;\n \n\t\t globalState = projectPlanes( planes, camera, 0 );\n\t\t numGlobalPlanes = planes.length;\n \n\t\t return enabled;\n \n\t };\n \n\t this.beginShadows = function () {\n \n\t\t renderingShadows = true;\n\t\t projectPlanes( null );\n \n\t };\n \n\t this.endShadows = function () {\n \n\t\t renderingShadows = false;\n\t\t resetGlobalState();\n \n\t };\n \n\t this.setState = function ( material, camera, useCache ) {\n \n\t\t const planes = material.clippingPlanes,\n\t\t\t clipIntersection = material.clipIntersection,\n\t\t\t clipShadows = material.clipShadows;\n \n\t\t const materialProperties = properties.get( material );\n \n\t\t if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n \n\t\t\t // there's no local clipping\n \n\t\t\t if ( renderingShadows ) {\n \n\t\t\t\t // there's no global clipping\n \n\t\t\t\t projectPlanes( null );\n \n\t\t\t } else {\n \n\t\t\t\t resetGlobalState();\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t const nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t lGlobal = nGlobal * 4;\n \n\t\t\t let dstArray = materialProperties.clippingState || null;\n \n\t\t\t uniform.value = dstArray; // ensure unique state\n \n\t\t\t dstArray = projectPlanes( planes, camera, lGlobal, useCache );\n \n\t\t\t for ( let i = 0; i !== lGlobal; ++ i ) {\n \n\t\t\t\t dstArray[ i ] = globalState[ i ];\n \n\t\t\t }\n \n\t\t\t materialProperties.clippingState = dstArray;\n\t\t\t this.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t this.numPlanes += nGlobal;\n \n\t\t }\n \n \n\t };\n \n\t function resetGlobalState() {\n \n\t\t if ( uniform.value !== globalState ) {\n \n\t\t\t uniform.value = globalState;\n\t\t\t uniform.needsUpdate = numGlobalPlanes > 0;\n \n\t\t }\n \n\t\t scope.numPlanes = numGlobalPlanes;\n\t\t scope.numIntersection = 0;\n \n\t }\n \n\t function projectPlanes( planes, camera, dstOffset, skipTransform ) {\n \n\t\t const nPlanes = planes !== null ? planes.length : 0;\n\t\t let dstArray = null;\n \n\t\t if ( nPlanes !== 0 ) {\n \n\t\t\t dstArray = uniform.value;\n \n\t\t\t if ( skipTransform !== true || dstArray === null ) {\n \n\t\t\t\t const flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t viewMatrix = camera.matrixWorldInverse;\n \n\t\t\t\t viewNormalMatrix.getNormalMatrix( viewMatrix );\n \n\t\t\t\t if ( dstArray === null || dstArray.length < flatSize ) {\n \n\t\t\t\t\t dstArray = new Float32Array( flatSize );\n \n\t\t\t\t }\n \n\t\t\t\t for ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n \n\t\t\t\t\t plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n \n\t\t\t\t\t plane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t dstArray[ i4 + 3 ] = plane.constant;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t uniform.value = dstArray;\n\t\t\t uniform.needsUpdate = true;\n \n\t\t }\n \n\t\t scope.numPlanes = nPlanes;\n\t\t scope.numIntersection = 0;\n \n\t\t return dstArray;\n \n\t }\n \n }\n \n function WebGLCubeMaps( renderer ) {\n \n\t let cubemaps = new WeakMap();\n \n\t function mapTextureMapping( texture, mapping ) {\n \n\t\t if ( mapping === EquirectangularReflectionMapping ) {\n \n\t\t\t texture.mapping = CubeReflectionMapping;\n \n\t\t } else if ( mapping === EquirectangularRefractionMapping ) {\n \n\t\t\t texture.mapping = CubeRefractionMapping;\n \n\t\t }\n \n\t\t return texture;\n \n\t }\n \n\t function get( texture ) {\n \n\t\t if ( texture && texture.isTexture ) {\n \n\t\t\t const mapping = texture.mapping;\n \n\t\t\t if ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n \n\t\t\t\t if ( cubemaps.has( texture ) ) {\n \n\t\t\t\t\t const cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\t return mapTextureMapping( cubemap, texture.mapping );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t const image = texture.image;\n \n\t\t\t\t\t if ( image && image.height > 0 ) {\n \n\t\t\t\t\t\t const currentRenderTarget = renderer.getRenderTarget();\n \n\t\t\t\t\t\t const renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\t renderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\t cubemaps.set( texture, renderTarget );\n \n\t\t\t\t\t\t renderer.setRenderTarget( currentRenderTarget );\n \n\t\t\t\t\t\t texture.addEventListener( 'dispose', onTextureDispose );\n \n\t\t\t\t\t\t return mapTextureMapping( renderTarget.texture, texture.mapping );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t // image not yet ready. try the conversion next frame\n \n\t\t\t\t\t\t return null;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t return texture;\n \n\t }\n \n\t function onTextureDispose( event ) {\n \n\t\t const texture = event.target;\n \n\t\t texture.removeEventListener( 'dispose', onTextureDispose );\n \n\t\t const cubemap = cubemaps.get( texture );\n \n\t\t if ( cubemap !== undefined ) {\n \n\t\t\t cubemaps.delete( texture );\n\t\t\t cubemap.dispose();\n \n\t\t }\n \n\t }\n \n\t function dispose() {\n \n\t\t cubemaps = new WeakMap();\n \n\t }\n \n\t return {\n\t\t get: get,\n\t\t dispose: dispose\n\t };\n \n }\n \n function WebGLExtensions( gl ) {\n \n\t const extensions = {};\n \n\t function getExtension( name ) {\n \n\t\t if ( extensions[ name ] !== undefined ) {\n \n\t\t\t return extensions[ name ];\n \n\t\t }\n \n\t\t let extension;\n \n\t\t switch ( name ) {\n \n\t\t\t case 'WEBGL_depth_texture':\n\t\t\t\t extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t break;\n \n\t\t\t case 'EXT_texture_filter_anisotropic':\n\t\t\t\t extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t break;\n \n\t\t\t case 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t break;\n \n\t\t\t case 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t break;\n \n\t\t\t default:\n\t\t\t\t extension = gl.getExtension( name );\n \n\t\t }\n \n\t\t extensions[ name ] = extension;\n \n\t\t return extension;\n \n\t }\n \n\t return {\n \n\t\t has: function ( name ) {\n \n\t\t\t return getExtension( name ) !== null;\n \n\t\t },\n \n\t\t init: function ( capabilities ) {\n \n\t\t\t if ( capabilities.isWebGL2 ) {\n \n\t\t\t\t getExtension( 'EXT_color_buffer_float' );\n \n\t\t\t } else {\n \n\t\t\t\t getExtension( 'WEBGL_depth_texture' );\n\t\t\t\t getExtension( 'OES_texture_float' );\n\t\t\t\t getExtension( 'OES_texture_half_float' );\n\t\t\t\t getExtension( 'OES_texture_half_float_linear' );\n\t\t\t\t getExtension( 'OES_standard_derivatives' );\n\t\t\t\t getExtension( 'OES_element_index_uint' );\n\t\t\t\t getExtension( 'OES_vertex_array_object' );\n\t\t\t\t getExtension( 'ANGLE_instanced_arrays' );\n \n\t\t\t }\n \n\t\t\t getExtension( 'OES_texture_float_linear' );\n\t\t\t getExtension( 'EXT_color_buffer_half_float' );\n \n\t\t },\n \n\t\t get: function ( name ) {\n \n\t\t\t const extension = getExtension( name );\n \n\t\t\t if ( extension === null ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n \n\t\t\t }\n \n\t\t\t return extension;\n \n\t\t }\n \n\t };\n \n }\n \n function WebGLGeometries( gl, attributes, info, bindingStates ) {\n \n\t const geometries = {};\n\t const wireframeAttributes = new WeakMap();\n \n\t function onGeometryDispose( event ) {\n \n\t\t const geometry = event.target;\n \n\t\t if ( geometry.index !== null ) {\n \n\t\t\t attributes.remove( geometry.index );\n \n\t\t }\n \n\t\t for ( const name in geometry.attributes ) {\n \n\t\t\t attributes.remove( geometry.attributes[ name ] );\n \n\t\t }\n \n\t\t geometry.removeEventListener( 'dispose', onGeometryDispose );\n \n\t\t delete geometries[ geometry.id ];\n \n\t\t const attribute = wireframeAttributes.get( geometry );\n \n\t\t if ( attribute ) {\n \n\t\t\t attributes.remove( attribute );\n\t\t\t wireframeAttributes.delete( geometry );\n \n\t\t }\n \n\t\t bindingStates.releaseStatesOfGeometry( geometry );\n \n\t\t if ( geometry.isInstancedBufferGeometry === true ) {\n \n\t\t\t delete geometry._maxInstanceCount;\n \n\t\t }\n \n\t\t //\n \n\t\t info.memory.geometries --;\n \n\t }\n \n\t function get( object, geometry ) {\n \n\t\t if ( geometries[ geometry.id ] === true ) return geometry;\n \n\t\t geometry.addEventListener( 'dispose', onGeometryDispose );\n \n\t\t geometries[ geometry.id ] = true;\n \n\t\t info.memory.geometries ++;\n \n\t\t return geometry;\n \n\t }\n \n\t function update( geometry ) {\n \n\t\t const geometryAttributes = geometry.attributes;\n \n\t\t // Updating index buffer in VAO now. See WebGLBindingStates.\n \n\t\t for ( const name in geometryAttributes ) {\n \n\t\t\t attributes.update( geometryAttributes[ name ], 34962 );\n \n\t\t }\n \n\t\t // morph targets\n \n\t\t const morphAttributes = geometry.morphAttributes;\n \n\t\t for ( const name in morphAttributes ) {\n \n\t\t\t const array = morphAttributes[ name ];\n \n\t\t\t for ( let i = 0, l = array.length; i < l; i ++ ) {\n \n\t\t\t\t attributes.update( array[ i ], 34962 );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t function updateWireframeAttribute( geometry ) {\n \n\t\t const indices = [];\n \n\t\t const geometryIndex = geometry.index;\n\t\t const geometryPosition = geometry.attributes.position;\n\t\t let version = 0;\n \n\t\t if ( geometryIndex !== null ) {\n \n\t\t\t const array = geometryIndex.array;\n\t\t\t version = geometryIndex.version;\n \n\t\t\t for ( let i = 0, l = array.length; i < l; i += 3 ) {\n \n\t\t\t\t const a = array[ i + 0 ];\n\t\t\t\t const b = array[ i + 1 ];\n\t\t\t\t const c = array[ i + 2 ];\n \n\t\t\t\t indices.push( a, b, b, c, c, a );\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t const array = geometryPosition.array;\n\t\t\t version = geometryPosition.version;\n \n\t\t\t for ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n \n\t\t\t\t const a = i + 0;\n\t\t\t\t const b = i + 1;\n\t\t\t\t const c = i + 2;\n \n\t\t\t\t indices.push( a, b, b, c, c, a );\n \n\t\t\t }\n \n\t\t }\n \n\t\t const attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\t attribute.version = version;\n \n\t\t // Updating index buffer in VAO now. See WebGLBindingStates\n \n\t\t //\n \n\t\t const previousAttribute = wireframeAttributes.get( geometry );\n \n\t\t if ( previousAttribute ) attributes.remove( previousAttribute );\n \n\t\t //\n \n\t\t wireframeAttributes.set( geometry, attribute );\n \n\t }\n \n\t function getWireframeAttribute( geometry ) {\n \n\t\t const currentAttribute = wireframeAttributes.get( geometry );\n \n\t\t if ( currentAttribute ) {\n \n\t\t\t const geometryIndex = geometry.index;\n \n\t\t\t if ( geometryIndex !== null ) {\n \n\t\t\t\t // if the attribute is obsolete, create a new one\n \n\t\t\t\t if ( currentAttribute.version < geometryIndex.version ) {\n \n\t\t\t\t\t updateWireframeAttribute( geometry );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t updateWireframeAttribute( geometry );\n \n\t\t }\n \n\t\t return wireframeAttributes.get( geometry );\n \n\t }\n \n\t return {\n \n\t\t get: get,\n\t\t update: update,\n \n\t\t getWireframeAttribute: getWireframeAttribute\n \n\t };\n \n }\n \n function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n \n\t const isWebGL2 = capabilities.isWebGL2;\n \n\t let mode;\n \n\t function setMode( value ) {\n \n\t\t mode = value;\n \n\t }\n \n\t let type, bytesPerElement;\n \n\t function setIndex( value ) {\n \n\t\t type = value.type;\n\t\t bytesPerElement = value.bytesPerElement;\n \n\t }\n \n\t function render( start, count ) {\n \n\t\t gl.drawElements( mode, count, type, start * bytesPerElement );\n \n\t\t info.update( count, mode, 1 );\n \n\t }\n \n\t function renderInstances( start, count, primcount ) {\n \n\t\t if ( primcount === 0 ) return;\n \n\t\t let extension, methodName;\n \n\t\t if ( isWebGL2 ) {\n \n\t\t\t extension = gl;\n\t\t\t methodName = 'drawElementsInstanced';\n \n\t\t } else {\n \n\t\t\t extension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t methodName = 'drawElementsInstancedANGLE';\n \n\t\t\t if ( extension === null ) {\n \n\t\t\t\t console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t return;\n \n\t\t\t }\n \n\t\t }\n \n\t\t extension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n \n\t\t info.update( count, mode, primcount );\n \n\t }\n \n\t //\n \n\t this.setMode = setMode;\n\t this.setIndex = setIndex;\n\t this.render = render;\n\t this.renderInstances = renderInstances;\n \n }\n \n function WebGLInfo( gl ) {\n \n\t const memory = {\n\t\t geometries: 0,\n\t\t textures: 0\n\t };\n \n\t const render = {\n\t\t frame: 0,\n\t\t calls: 0,\n\t\t triangles: 0,\n\t\t points: 0,\n\t\t lines: 0\n\t };\n \n\t function update( count, mode, instanceCount ) {\n \n\t\t render.calls ++;\n \n\t\t switch ( mode ) {\n \n\t\t\t case 4:\n\t\t\t\t render.triangles += instanceCount * ( count / 3 );\n\t\t\t\t break;\n \n\t\t\t case 1:\n\t\t\t\t render.lines += instanceCount * ( count / 2 );\n\t\t\t\t break;\n \n\t\t\t case 3:\n\t\t\t\t render.lines += instanceCount * ( count - 1 );\n\t\t\t\t break;\n \n\t\t\t case 2:\n\t\t\t\t render.lines += instanceCount * count;\n\t\t\t\t break;\n \n\t\t\t case 0:\n\t\t\t\t render.points += instanceCount * count;\n\t\t\t\t break;\n \n\t\t\t default:\n\t\t\t\t console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t break;\n \n\t\t }\n \n\t }\n \n\t function reset() {\n \n\t\t render.frame ++;\n\t\t render.calls = 0;\n\t\t render.triangles = 0;\n\t\t render.points = 0;\n\t\t render.lines = 0;\n \n\t }\n \n\t return {\n\t\t memory: memory,\n\t\t render: render,\n\t\t programs: null,\n\t\t autoReset: true,\n\t\t reset: reset,\n\t\t update: update\n\t };\n \n }\n \n function numericalSort( a, b ) {\n \n\t return a[ 0 ] - b[ 0 ];\n \n }\n \n function absNumericalSort( a, b ) {\n \n\t return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n \n }\n \n function WebGLMorphtargets( gl ) {\n \n\t const influencesList = {};\n\t const morphInfluences = new Float32Array( 8 );\n \n\t const workInfluences = [];\n \n\t for ( let i = 0; i < 8; i ++ ) {\n \n\t\t workInfluences[ i ] = [ i, 0 ];\n \n\t }\n \n\t function update( object, geometry, material, program ) {\n \n\t\t const objectInfluences = object.morphTargetInfluences;\n \n\t\t // When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n \n\t\t const length = objectInfluences === undefined ? 0 : objectInfluences.length;\n \n\t\t let influences = influencesList[ geometry.id ];\n \n\t\t if ( influences === undefined ) {\n \n\t\t\t // initialise list\n \n\t\t\t influences = [];\n \n\t\t\t for ( let i = 0; i < length; i ++ ) {\n \n\t\t\t\t influences[ i ] = [ i, 0 ];\n \n\t\t\t }\n \n\t\t\t influencesList[ geometry.id ] = influences;\n \n\t\t }\n \n\t\t // Collect influences\n \n\t\t for ( let i = 0; i < length; i ++ ) {\n \n\t\t\t const influence = influences[ i ];\n \n\t\t\t influence[ 0 ] = i;\n\t\t\t influence[ 1 ] = objectInfluences[ i ];\n \n\t\t }\n \n\t\t influences.sort( absNumericalSort );\n \n\t\t for ( let i = 0; i < 8; i ++ ) {\n \n\t\t\t if ( i < length && influences[ i ][ 1 ] ) {\n \n\t\t\t\t workInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t workInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n \n\t\t\t } else {\n \n\t\t\t\t workInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t workInfluences[ i ][ 1 ] = 0;\n \n\t\t\t }\n \n\t\t }\n \n\t\t workInfluences.sort( numericalSort );\n \n\t\t const morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t const morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n \n\t\t let morphInfluencesSum = 0;\n \n\t\t for ( let i = 0; i < 8; i ++ ) {\n \n\t\t\t const influence = workInfluences[ i ];\n\t\t\t const index = influence[ 0 ];\n\t\t\t const value = influence[ 1 ];\n \n\t\t\t if ( index !== Number.MAX_SAFE_INTEGER && value ) {\n \n\t\t\t\t if ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n \n\t\t\t\t\t geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n \n\t\t\t\t }\n \n\t\t\t\t if ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n \n\t\t\t\t\t geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n \n\t\t\t\t }\n \n\t\t\t\t morphInfluences[ i ] = value;\n\t\t\t\t morphInfluencesSum += value;\n \n\t\t\t } else {\n \n\t\t\t\t if ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n \n\t\t\t\t\t geometry.deleteAttribute( 'morphTarget' + i );\n \n\t\t\t\t }\n \n\t\t\t\t if ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n \n\t\t\t\t\t geometry.deleteAttribute( 'morphNormal' + i );\n \n\t\t\t\t }\n \n\t\t\t\t morphInfluences[ i ] = 0;\n \n\t\t\t }\n \n\t\t }\n \n\t\t // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t // This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n \n\t\t program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n \n\t }\n \n\t return {\n \n\t\t update: update\n \n\t };\n \n }\n \n function WebGLObjects( gl, geometries, attributes, info ) {\n \n\t let updateMap = new WeakMap();\n \n\t function update( object ) {\n \n\t\t const frame = info.render.frame;\n \n\t\t const geometry = object.geometry;\n\t\t const buffergeometry = geometries.get( object, geometry );\n \n\t\t // Update once per frame\n \n\t\t if ( updateMap.get( buffergeometry ) !== frame ) {\n \n\t\t\t geometries.update( buffergeometry );\n \n\t\t\t updateMap.set( buffergeometry, frame );\n \n\t\t }\n \n\t\t if ( object.isInstancedMesh ) {\n \n\t\t\t if ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n \n\t\t\t\t object.addEventListener( 'dispose', onInstancedMeshDispose );\n \n\t\t\t }\n \n\t\t\t attributes.update( object.instanceMatrix, 34962 );\n \n\t\t\t if ( object.instanceColor !== null ) {\n \n\t\t\t\t attributes.update( object.instanceColor, 34962 );\n \n\t\t\t }\n \n\t\t }\n \n\t\t return buffergeometry;\n \n\t }\n \n\t function dispose() {\n \n\t\t updateMap = new WeakMap();\n \n\t }\n \n\t function onInstancedMeshDispose( event ) {\n \n\t\t const instancedMesh = event.target;\n \n\t\t instancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n \n\t\t attributes.remove( instancedMesh.instanceMatrix );\n \n\t\t if ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n \n\t }\n \n\t return {\n \n\t\t update: update,\n\t\t dispose: dispose\n \n\t };\n \n }\n \n class DataTexture2DArray extends Texture {\n \n\t constructor( data = null, width = 1, height = 1, depth = 1 ) {\n \n\t\t super( null );\n \n\t\t this.image = { data, width, height, depth };\n \n\t\t this.magFilter = NearestFilter;\n\t\t this.minFilter = NearestFilter;\n \n\t\t this.wrapR = ClampToEdgeWrapping;\n \n\t\t this.generateMipmaps = false;\n\t\t this.flipY = false;\n\t\t this.unpackAlignment = 1;\n \n\t\t this.needsUpdate = true;\n \n\t }\n \n }\n \n DataTexture2DArray.prototype.isDataTexture2DArray = true;\n \n class DataTexture3D extends Texture {\n \n\t constructor( data = null, width = 1, height = 1, depth = 1 ) {\n \n\t\t // We're going to add .setXXX() methods for setting properties later.\n\t\t // Users can still set in DataTexture3D directly.\n\t\t //\n\t\t //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t // \ttexture.anisotropy = 16;\n\t\t //\n\t\t // See #14839\n \n\t\t super( null );\n \n\t\t this.image = { data, width, height, depth };\n \n\t\t this.magFilter = NearestFilter;\n\t\t this.minFilter = NearestFilter;\n \n\t\t this.wrapR = ClampToEdgeWrapping;\n \n\t\t this.generateMipmaps = false;\n\t\t this.flipY = false;\n\t\t this.unpackAlignment = 1;\n \n\t\t this.needsUpdate = true;\n \n\t }\n \n }\n \n DataTexture3D.prototype.isDataTexture3D = true;\n \n /**\n  * Uniforms of a program.\n  * Those form a tree structure with a special top-level container for the root,\n  * which you get by calling 'new WebGLUniforms( gl, program )'.\n  *\n  *\n  * Properties of inner nodes including the top-level container:\n  *\n  * .seq - array of nested uniforms\n  * .map - nested uniforms by name\n  *\n  *\n  * Methods of all nodes except the top-level container:\n  *\n  * .setValue( gl, value, [textures] )\n  *\n  * \t\tuploads a uniform value(s)\n  *  \tthe 'textures' parameter is needed for sampler uniforms\n  *\n  *\n  * Static methods of the top-level container (textures factorizations):\n  *\n  * .upload( gl, seq, values, textures )\n  *\n  * \t\tsets uniforms in 'seq' to 'values[id].value'\n  *\n  * .seqWithValue( seq, values ) : filteredSeq\n  *\n  * \t\tfilters 'seq' entries with corresponding entry in values\n  *\n  *\n  * Methods of the top-level container (textures factorizations):\n  *\n  * .setValue( gl, name, value, textures )\n  *\n  * \t\tsets uniform with  name 'name' to 'value'\n  *\n  * .setOptional( gl, obj, prop )\n  *\n  * \t\tlike .set for an optional property of the object\n  *\n  */\n \n const emptyTexture = new Texture();\n const emptyTexture2dArray = new DataTexture2DArray();\n const emptyTexture3d = new DataTexture3D();\n const emptyCubeTexture = new CubeTexture();\n \n // --- Utilities ---\n \n // Array Caches (provide typed arrays for temporary by size)\n \n const arrayCacheF32 = [];\n const arrayCacheI32 = [];\n \n // Float32Array caches used for uploading Matrix uniforms\n \n const mat4array = new Float32Array( 16 );\n const mat3array = new Float32Array( 9 );\n const mat2array = new Float32Array( 4 );\n \n // Flattening for arrays of vectors and matrices\n \n function flatten( array, nBlocks, blockSize ) {\n \n\t const firstElem = array[ 0 ];\n \n\t if ( firstElem <= 0 || firstElem > 0 ) return array;\n\t // unoptimized: ! isNaN( firstElem )\n\t // see http://jacksondunstan.com/articles/983\n \n\t const n = nBlocks * blockSize;\n\t let r = arrayCacheF32[ n ];\n \n\t if ( r === undefined ) {\n \n\t\t r = new Float32Array( n );\n\t\t arrayCacheF32[ n ] = r;\n \n\t }\n \n\t if ( nBlocks !== 0 ) {\n \n\t\t firstElem.toArray( r, 0 );\n \n\t\t for ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n \n\t\t\t offset += blockSize;\n\t\t\t array[ i ].toArray( r, offset );\n \n\t\t }\n \n\t }\n \n\t return r;\n \n }\n \n function arraysEqual( a, b ) {\n \n\t if ( a.length !== b.length ) return false;\n \n\t for ( let i = 0, l = a.length; i < l; i ++ ) {\n \n\t\t if ( a[ i ] !== b[ i ] ) return false;\n \n\t }\n \n\t return true;\n \n }\n \n function copyArray( a, b ) {\n \n\t for ( let i = 0, l = b.length; i < l; i ++ ) {\n \n\t\t a[ i ] = b[ i ];\n \n\t }\n \n }\n \n // Texture unit allocation\n \n function allocTexUnits( textures, n ) {\n \n\t let r = arrayCacheI32[ n ];\n \n\t if ( r === undefined ) {\n \n\t\t r = new Int32Array( n );\n\t\t arrayCacheI32[ n ] = r;\n \n\t }\n \n\t for ( let i = 0; i !== n; ++ i ) {\n \n\t\t r[ i ] = textures.allocateTextureUnit();\n \n\t }\n \n\t return r;\n \n }\n \n // --- Setters ---\n \n // Note: Defining these methods externally, because they come in a bunch\n // and this way their names minify.\n \n // Single scalar\n \n function setValueV1f( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( cache[ 0 ] === v ) return;\n \n\t gl.uniform1f( this.addr, v );\n \n\t cache[ 0 ] = v;\n \n }\n \n // Single float vector (from flat array or THREE.VectorN)\n \n function setValueV2f( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( v.x !== undefined ) {\n \n\t\t if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n \n\t\t\t gl.uniform2f( this.addr, v.x, v.y );\n \n\t\t\t cache[ 0 ] = v.x;\n\t\t\t cache[ 1 ] = v.y;\n \n\t\t }\n \n\t } else {\n \n\t\t if ( arraysEqual( cache, v ) ) return;\n \n\t\t gl.uniform2fv( this.addr, v );\n \n\t\t copyArray( cache, v );\n \n\t }\n \n }\n \n function setValueV3f( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( v.x !== undefined ) {\n \n\t\t if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n \n\t\t\t gl.uniform3f( this.addr, v.x, v.y, v.z );\n \n\t\t\t cache[ 0 ] = v.x;\n\t\t\t cache[ 1 ] = v.y;\n\t\t\t cache[ 2 ] = v.z;\n \n\t\t }\n \n\t } else if ( v.r !== undefined ) {\n \n\t\t if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n \n\t\t\t gl.uniform3f( this.addr, v.r, v.g, v.b );\n \n\t\t\t cache[ 0 ] = v.r;\n\t\t\t cache[ 1 ] = v.g;\n\t\t\t cache[ 2 ] = v.b;\n \n\t\t }\n \n\t } else {\n \n\t\t if ( arraysEqual( cache, v ) ) return;\n \n\t\t gl.uniform3fv( this.addr, v );\n \n\t\t copyArray( cache, v );\n \n\t }\n \n }\n \n function setValueV4f( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( v.x !== undefined ) {\n \n\t\t if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n \n\t\t\t gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n \n\t\t\t cache[ 0 ] = v.x;\n\t\t\t cache[ 1 ] = v.y;\n\t\t\t cache[ 2 ] = v.z;\n\t\t\t cache[ 3 ] = v.w;\n \n\t\t }\n \n\t } else {\n \n\t\t if ( arraysEqual( cache, v ) ) return;\n \n\t\t gl.uniform4fv( this.addr, v );\n \n\t\t copyArray( cache, v );\n \n\t }\n \n }\n \n // Single matrix (from flat array or THREE.MatrixN)\n \n function setValueM2( gl, v ) {\n \n\t const cache = this.cache;\n\t const elements = v.elements;\n \n\t if ( elements === undefined ) {\n \n\t\t if ( arraysEqual( cache, v ) ) return;\n \n\t\t gl.uniformMatrix2fv( this.addr, false, v );\n \n\t\t copyArray( cache, v );\n \n\t } else {\n \n\t\t if ( arraysEqual( cache, elements ) ) return;\n \n\t\t mat2array.set( elements );\n \n\t\t gl.uniformMatrix2fv( this.addr, false, mat2array );\n \n\t\t copyArray( cache, elements );\n \n\t }\n \n }\n \n function setValueM3( gl, v ) {\n \n\t const cache = this.cache;\n\t const elements = v.elements;\n \n\t if ( elements === undefined ) {\n \n\t\t if ( arraysEqual( cache, v ) ) return;\n \n\t\t gl.uniformMatrix3fv( this.addr, false, v );\n \n\t\t copyArray( cache, v );\n \n\t } else {\n \n\t\t if ( arraysEqual( cache, elements ) ) return;\n \n\t\t mat3array.set( elements );\n \n\t\t gl.uniformMatrix3fv( this.addr, false, mat3array );\n \n\t\t copyArray( cache, elements );\n \n\t }\n \n }\n \n function setValueM4( gl, v ) {\n \n\t const cache = this.cache;\n\t const elements = v.elements;\n \n\t if ( elements === undefined ) {\n \n\t\t if ( arraysEqual( cache, v ) ) return;\n \n\t\t gl.uniformMatrix4fv( this.addr, false, v );\n \n\t\t copyArray( cache, v );\n \n\t } else {\n \n\t\t if ( arraysEqual( cache, elements ) ) return;\n \n\t\t mat4array.set( elements );\n \n\t\t gl.uniformMatrix4fv( this.addr, false, mat4array );\n \n\t\t copyArray( cache, elements );\n \n\t }\n \n }\n \n // Single integer / boolean\n \n function setValueV1i( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( cache[ 0 ] === v ) return;\n \n\t gl.uniform1i( this.addr, v );\n \n\t cache[ 0 ] = v;\n \n }\n \n // Single integer / boolean vector (from flat array)\n \n function setValueV2i( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( arraysEqual( cache, v ) ) return;\n \n\t gl.uniform2iv( this.addr, v );\n \n\t copyArray( cache, v );\n \n }\n \n function setValueV3i( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( arraysEqual( cache, v ) ) return;\n \n\t gl.uniform3iv( this.addr, v );\n \n\t copyArray( cache, v );\n \n }\n \n function setValueV4i( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( arraysEqual( cache, v ) ) return;\n \n\t gl.uniform4iv( this.addr, v );\n \n\t copyArray( cache, v );\n \n }\n \n // Single unsigned integer\n \n function setValueV1ui( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( cache[ 0 ] === v ) return;\n \n\t gl.uniform1ui( this.addr, v );\n \n\t cache[ 0 ] = v;\n \n }\n \n // Single unsigned integer vector (from flat array)\n \n function setValueV2ui( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( arraysEqual( cache, v ) ) return;\n \n\t gl.uniform2uiv( this.addr, v );\n \n\t copyArray( cache, v );\n \n }\n \n function setValueV3ui( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( arraysEqual( cache, v ) ) return;\n \n\t gl.uniform3uiv( this.addr, v );\n \n\t copyArray( cache, v );\n \n }\n \n function setValueV4ui( gl, v ) {\n \n\t const cache = this.cache;\n \n\t if ( arraysEqual( cache, v ) ) return;\n \n\t gl.uniform4uiv( this.addr, v );\n \n\t copyArray( cache, v );\n \n }\n \n \n // Single texture (2D / Cube)\n \n function setValueT1( gl, v, textures ) {\n \n\t const cache = this.cache;\n\t const unit = textures.allocateTextureUnit();\n \n\t if ( cache[ 0 ] !== unit ) {\n \n\t\t gl.uniform1i( this.addr, unit );\n\t\t cache[ 0 ] = unit;\n \n\t }\n \n\t textures.safeSetTexture2D( v || emptyTexture, unit );\n \n }\n \n function setValueT3D1( gl, v, textures ) {\n \n\t const cache = this.cache;\n\t const unit = textures.allocateTextureUnit();\n \n\t if ( cache[ 0 ] !== unit ) {\n \n\t\t gl.uniform1i( this.addr, unit );\n\t\t cache[ 0 ] = unit;\n \n\t }\n \n\t textures.setTexture3D( v || emptyTexture3d, unit );\n \n }\n \n function setValueT6( gl, v, textures ) {\n \n\t const cache = this.cache;\n\t const unit = textures.allocateTextureUnit();\n \n\t if ( cache[ 0 ] !== unit ) {\n \n\t\t gl.uniform1i( this.addr, unit );\n\t\t cache[ 0 ] = unit;\n \n\t }\n \n\t textures.safeSetTextureCube( v || emptyCubeTexture, unit );\n \n }\n \n function setValueT2DArray1( gl, v, textures ) {\n \n\t const cache = this.cache;\n\t const unit = textures.allocateTextureUnit();\n \n\t if ( cache[ 0 ] !== unit ) {\n \n\t\t gl.uniform1i( this.addr, unit );\n\t\t cache[ 0 ] = unit;\n \n\t }\n \n\t textures.setTexture2DArray( v || emptyTexture2dArray, unit );\n \n }\n \n // Helper to pick the right setter for the singular case\n \n function getSingularSetter( type ) {\n \n\t switch ( type ) {\n \n\t\t case 0x1406: return setValueV1f; // FLOAT\n\t\t case 0x8b50: return setValueV2f; // _VEC2\n\t\t case 0x8b51: return setValueV3f; // _VEC3\n\t\t case 0x8b52: return setValueV4f; // _VEC4\n \n\t\t case 0x8b5a: return setValueM2; // _MAT2\n\t\t case 0x8b5b: return setValueM3; // _MAT3\n\t\t case 0x8b5c: return setValueM4; // _MAT4\n \n\t\t case 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\t case 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\t case 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\t case 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n \n\t\t case 0x1405: return setValueV1ui; // UINT\n\t\t case 0x8dc6: return setValueV2ui; // _VEC2\n\t\t case 0x8dc7: return setValueV3ui; // _VEC3\n\t\t case 0x8dc8: return setValueV4ui; // _VEC4\n \n\t\t case 0x8b5e: // SAMPLER_2D\n\t\t case 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t case 0x8dca: // INT_SAMPLER_2D\n\t\t case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t case 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t return setValueT1;\n \n\t\t case 0x8b5f: // SAMPLER_3D\n\t\t case 0x8dcb: // INT_SAMPLER_3D\n\t\t case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\t return setValueT3D1;\n \n\t\t case 0x8b60: // SAMPLER_CUBE\n\t\t case 0x8dcc: // INT_SAMPLER_CUBE\n\t\t case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t case 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t return setValueT6;\n \n\t\t case 0x8dc1: // SAMPLER_2D_ARRAY\n\t\t case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\t case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\t case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\t return setValueT2DArray1;\n \n\t }\n \n }\n \n \n // Array of scalars\n \n function setValueV1fArray( gl, v ) {\n \n\t gl.uniform1fv( this.addr, v );\n \n }\n \n // Array of vectors (from flat array or array of THREE.VectorN)\n \n function setValueV2fArray( gl, v ) {\n \n\t const data = flatten( v, this.size, 2 );\n \n\t gl.uniform2fv( this.addr, data );\n \n }\n \n function setValueV3fArray( gl, v ) {\n \n\t const data = flatten( v, this.size, 3 );\n \n\t gl.uniform3fv( this.addr, data );\n \n }\n \n function setValueV4fArray( gl, v ) {\n \n\t const data = flatten( v, this.size, 4 );\n \n\t gl.uniform4fv( this.addr, data );\n \n }\n \n // Array of matrices (from flat array or array of THREE.MatrixN)\n \n function setValueM2Array( gl, v ) {\n \n\t const data = flatten( v, this.size, 4 );\n \n\t gl.uniformMatrix2fv( this.addr, false, data );\n \n }\n \n function setValueM3Array( gl, v ) {\n \n\t const data = flatten( v, this.size, 9 );\n \n\t gl.uniformMatrix3fv( this.addr, false, data );\n \n }\n \n function setValueM4Array( gl, v ) {\n \n\t const data = flatten( v, this.size, 16 );\n \n\t gl.uniformMatrix4fv( this.addr, false, data );\n \n }\n \n // Array of integer / boolean\n \n function setValueV1iArray( gl, v ) {\n \n\t gl.uniform1iv( this.addr, v );\n \n }\n \n // Array of integer / boolean vectors (from flat array)\n \n function setValueV2iArray( gl, v ) {\n \n\t gl.uniform2iv( this.addr, v );\n \n }\n \n function setValueV3iArray( gl, v ) {\n \n\t gl.uniform3iv( this.addr, v );\n \n }\n \n function setValueV4iArray( gl, v ) {\n \n\t gl.uniform4iv( this.addr, v );\n \n }\n \n // Array of unsigned integer\n \n function setValueV1uiArray( gl, v ) {\n \n\t gl.uniform1uiv( this.addr, v );\n \n }\n \n // Array of unsigned integer vectors (from flat array)\n \n function setValueV2uiArray( gl, v ) {\n \n\t gl.uniform2uiv( this.addr, v );\n \n }\n \n function setValueV3uiArray( gl, v ) {\n \n\t gl.uniform3uiv( this.addr, v );\n \n }\n \n function setValueV4uiArray( gl, v ) {\n \n\t gl.uniform4uiv( this.addr, v );\n \n }\n \n \n // Array of textures (2D / Cube)\n \n function setValueT1Array( gl, v, textures ) {\n \n\t const n = v.length;\n \n\t const units = allocTexUnits( textures, n );\n \n\t gl.uniform1iv( this.addr, units );\n \n\t for ( let i = 0; i !== n; ++ i ) {\n \n\t\t textures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n \n\t }\n \n }\n \n function setValueT6Array( gl, v, textures ) {\n \n\t const n = v.length;\n \n\t const units = allocTexUnits( textures, n );\n \n\t gl.uniform1iv( this.addr, units );\n \n\t for ( let i = 0; i !== n; ++ i ) {\n \n\t\t textures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n \n\t }\n \n }\n \n // Helper to pick the right setter for a pure (bottom-level) array\n \n function getPureArraySetter( type ) {\n \n\t switch ( type ) {\n \n\t\t case 0x1406: return setValueV1fArray; // FLOAT\n\t\t case 0x8b50: return setValueV2fArray; // _VEC2\n\t\t case 0x8b51: return setValueV3fArray; // _VEC3\n\t\t case 0x8b52: return setValueV4fArray; // _VEC4\n \n\t\t case 0x8b5a: return setValueM2Array; // _MAT2\n\t\t case 0x8b5b: return setValueM3Array; // _MAT3\n\t\t case 0x8b5c: return setValueM4Array; // _MAT4\n \n\t\t case 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\t case 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\t case 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\t case 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n \n\t\t case 0x1405: return setValueV1uiArray; // UINT\n\t\t case 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\t case 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\t case 0x8dc8: return setValueV4uiArray; // _VEC4\n \n\t\t case 0x8b5e: // SAMPLER_2D\n\t\t case 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\t case 0x8dca: // INT_SAMPLER_2D\n\t\t case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\t case 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\t return setValueT1Array;\n \n\t\t case 0x8b60: // SAMPLER_CUBE\n\t\t case 0x8dcc: // INT_SAMPLER_CUBE\n\t\t case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\t case 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\t return setValueT6Array;\n \n\t }\n \n }\n \n // --- Uniform Classes ---\n \n function SingleUniform( id, activeInfo, addr ) {\n \n\t this.id = id;\n\t this.addr = addr;\n\t this.cache = [];\n\t this.setValue = getSingularSetter( activeInfo.type );\n \n\t // this.path = activeInfo.name; // DEBUG\n \n }\n \n function PureArrayUniform( id, activeInfo, addr ) {\n \n\t this.id = id;\n\t this.addr = addr;\n\t this.cache = [];\n\t this.size = activeInfo.size;\n\t this.setValue = getPureArraySetter( activeInfo.type );\n \n\t // this.path = activeInfo.name; // DEBUG\n \n }\n \n PureArrayUniform.prototype.updateCache = function ( data ) {\n \n\t const cache = this.cache;\n \n\t if ( data instanceof Float32Array && cache.length !== data.length ) {\n \n\t\t this.cache = new Float32Array( data.length );\n \n\t }\n \n\t copyArray( cache, data );\n \n };\n \n function StructuredUniform( id ) {\n \n\t this.id = id;\n \n\t this.seq = [];\n\t this.map = {};\n \n }\n \n StructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n \n\t const seq = this.seq;\n \n\t for ( let i = 0, n = seq.length; i !== n; ++ i ) {\n \n\t\t const u = seq[ i ];\n\t\t u.setValue( gl, value[ u.id ], textures );\n \n\t }\n \n };\n \n // --- Top-level ---\n \n // Parser - builds up the property tree from the path strings\n \n const RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n \n // extracts\n // \t- the identifier (member name or array index)\n //  - followed by an optional right bracket (found when array index)\n //  - followed by an optional left bracket or dot (type of subscript)\n //\n // Note: These portions can be read in a non-overlapping fashion and\n // allow straightforward parsing of the hierarchy that WebGL encodes\n // in the uniform names.\n \n function addUniform( container, uniformObject ) {\n \n\t container.seq.push( uniformObject );\n\t container.map[ uniformObject.id ] = uniformObject;\n \n }\n \n function parseUniform( activeInfo, addr, container ) {\n \n\t const path = activeInfo.name,\n\t\t pathLength = path.length;\n \n\t // reset RegExp object, because of the early exit of a previous run\n\t RePathPart.lastIndex = 0;\n \n\t while ( true ) {\n \n\t\t const match = RePathPart.exec( path ),\n\t\t\t matchEnd = RePathPart.lastIndex;\n \n\t\t let id = match[ 1 ];\n\t\t const idIsIndex = match[ 2 ] === ']',\n\t\t\t subscript = match[ 3 ];\n \n\t\t if ( idIsIndex ) id = id | 0; // convert to integer\n \n\t\t if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n \n\t\t\t // bare name or \"pure\" bottom-level array \"[0]\" suffix\n \n\t\t\t addUniform( container, subscript === undefined ?\n\t\t\t\t new SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t new PureArrayUniform( id, activeInfo, addr ) );\n \n\t\t\t break;\n \n\t\t } else {\n \n\t\t\t // step into inner node / create it in case it doesn't exist\n \n\t\t\t const map = container.map;\n\t\t\t let next = map[ id ];\n \n\t\t\t if ( next === undefined ) {\n \n\t\t\t\t next = new StructuredUniform( id );\n\t\t\t\t addUniform( container, next );\n \n\t\t\t }\n \n\t\t\t container = next;\n \n\t\t }\n \n\t }\n \n }\n \n // Root Container\n \n function WebGLUniforms( gl, program ) {\n \n\t this.seq = [];\n\t this.map = {};\n \n\t const n = gl.getProgramParameter( program, 35718 );\n \n\t for ( let i = 0; i < n; ++ i ) {\n \n\t\t const info = gl.getActiveUniform( program, i ),\n\t\t\t addr = gl.getUniformLocation( program, info.name );\n \n\t\t parseUniform( info, addr, this );\n \n\t }\n \n }\n \n WebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n \n\t const u = this.map[ name ];\n \n\t if ( u !== undefined ) u.setValue( gl, value, textures );\n \n };\n \n WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n \n\t const v = object[ name ];\n \n\t if ( v !== undefined ) this.setValue( gl, name, v );\n \n };\n \n \n // Static interface\n \n WebGLUniforms.upload = function ( gl, seq, values, textures ) {\n \n\t for ( let i = 0, n = seq.length; i !== n; ++ i ) {\n \n\t\t const u = seq[ i ],\n\t\t\t v = values[ u.id ];\n \n\t\t if ( v.needsUpdate !== false ) {\n \n\t\t\t // note: always updating when .needsUpdate is undefined\n\t\t\t u.setValue( gl, v.value, textures );\n \n\t\t }\n \n\t }\n \n };\n \n WebGLUniforms.seqWithValue = function ( seq, values ) {\n \n\t const r = [];\n \n\t for ( let i = 0, n = seq.length; i !== n; ++ i ) {\n \n\t\t const u = seq[ i ];\n\t\t if ( u.id in values ) r.push( u );\n \n\t }\n \n\t return r;\n \n };\n \n function WebGLShader( gl, type, string ) {\n \n\t const shader = gl.createShader( type );\n \n\t gl.shaderSource( shader, string );\n\t gl.compileShader( shader );\n \n\t return shader;\n \n }\n \n let programIdCount = 0;\n \n function addLineNumbers( string ) {\n \n\t const lines = string.split( '\\n' );\n \n\t for ( let i = 0; i < lines.length; i ++ ) {\n \n\t\t lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n \n\t }\n \n\t return lines.join( '\\n' );\n \n }\n \n function getEncodingComponents( encoding ) {\n \n\t switch ( encoding ) {\n \n\t\t case LinearEncoding:\n\t\t\t return [ 'Linear', '( value )' ];\n\t\t case sRGBEncoding:\n\t\t\t return [ 'sRGB', '( value )' ];\n\t\t case RGBEEncoding:\n\t\t\t return [ 'RGBE', '( value )' ];\n\t\t case RGBM7Encoding:\n\t\t\t return [ 'RGBM', '( value, 7.0 )' ];\n\t\t case RGBM16Encoding:\n\t\t\t return [ 'RGBM', '( value, 16.0 )' ];\n\t\t case RGBDEncoding:\n\t\t\t return [ 'RGBD', '( value, 256.0 )' ];\n\t\t case GammaEncoding:\n\t\t\t return [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\t case LogLuvEncoding:\n\t\t\t return [ 'LogLuv', '( value )' ];\n\t\t default:\n\t\t\t console.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\t return [ 'Linear', '( value )' ];\n \n\t }\n \n }\n \n function getShaderErrors( gl, shader, type ) {\n \n\t const status = gl.getShaderParameter( shader, 35713 );\n\t const log = gl.getShaderInfoLog( shader ).trim();\n \n\t if ( status && log === '' ) return '';\n \n\t // --enable-privileged-webgl-extension\n\t // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n \n\t const source = gl.getShaderSource( shader );\n \n\t return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n \n }\n \n function getTexelDecodingFunction( functionName, encoding ) {\n \n\t const components = getEncodingComponents( encoding );\n\t return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n \n }\n \n function getTexelEncodingFunction( functionName, encoding ) {\n \n\t const components = getEncodingComponents( encoding );\n\t return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n \n }\n \n function getToneMappingFunction( functionName, toneMapping ) {\n \n\t let toneMappingName;\n \n\t switch ( toneMapping ) {\n \n\t\t case LinearToneMapping:\n\t\t\t toneMappingName = 'Linear';\n\t\t\t break;\n \n\t\t case ReinhardToneMapping:\n\t\t\t toneMappingName = 'Reinhard';\n\t\t\t break;\n \n\t\t case CineonToneMapping:\n\t\t\t toneMappingName = 'OptimizedCineon';\n\t\t\t break;\n \n\t\t case ACESFilmicToneMapping:\n\t\t\t toneMappingName = 'ACESFilmic';\n\t\t\t break;\n \n\t\t case CustomToneMapping:\n\t\t\t toneMappingName = 'Custom';\n\t\t\t break;\n \n\t\t default:\n\t\t\t console.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\t toneMappingName = 'Linear';\n \n\t }\n \n\t return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n \n }\n \n function generateExtensions( parameters ) {\n \n\t const chunks = [\n\t\t ( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t ( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t ( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t ( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission > 0.0 ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t ];\n \n\t return chunks.filter( filterEmptyLine ).join( '\\n' );\n \n }\n \n function generateDefines( defines ) {\n \n\t const chunks = [];\n \n\t for ( const name in defines ) {\n \n\t\t const value = defines[ name ];\n \n\t\t if ( value === false ) continue;\n \n\t\t chunks.push( '#define ' + name + ' ' + value );\n \n\t }\n \n\t return chunks.join( '\\n' );\n \n }\n \n function fetchAttributeLocations( gl, program ) {\n \n\t const attributes = {};\n \n\t const n = gl.getProgramParameter( program, 35721 );\n \n\t for ( let i = 0; i < n; i ++ ) {\n \n\t\t const info = gl.getActiveAttrib( program, i );\n\t\t const name = info.name;\n \n\t\t // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n \n\t\t attributes[ name ] = gl.getAttribLocation( program, name );\n \n\t }\n \n\t return attributes;\n \n }\n \n function filterEmptyLine( string ) {\n \n\t return string !== '';\n \n }\n \n function replaceLightNums( string, parameters ) {\n \n\t return string\n\t\t .replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t .replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t .replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t .replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t .replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t .replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t .replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t .replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n \n }\n \n function replaceClippingPlaneNums( string, parameters ) {\n \n\t return string\n\t\t .replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t .replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n \n }\n \n // Resolve Includes\n \n const includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n \n function resolveIncludes( string ) {\n \n\t return string.replace( includePattern, includeReplacer );\n \n }\n \n function includeReplacer( match, include ) {\n \n\t const string = ShaderChunk[ include ];\n \n\t if ( string === undefined ) {\n \n\t\t throw new Error( 'Can not resolve #include <' + include + '>' );\n \n\t }\n \n\t return resolveIncludes( string );\n \n }\n \n // Unroll Loops\n \n const deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n const unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n \n function unrollLoops( string ) {\n \n\t return string\n\t\t .replace( unrollLoopPattern, loopReplacer )\n\t\t .replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n \n }\n \n function deprecatedLoopReplacer( match, start, end, snippet ) {\n \n\t console.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\t return loopReplacer( match, start, end, snippet );\n \n }\n \n function loopReplacer( match, start, end, snippet ) {\n \n\t let string = '';\n \n\t for ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n \n\t\t string += snippet\n\t\t\t .replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t .replace( /UNROLLED_LOOP_INDEX/g, i );\n \n\t }\n \n\t return string;\n \n }\n \n //\n \n function generatePrecision( parameters ) {\n \n\t let precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n \n\t if ( parameters.precision === 'highp' ) {\n \n\t\t precisionstring += '\\n#define HIGH_PRECISION';\n \n\t } else if ( parameters.precision === 'mediump' ) {\n \n\t\t precisionstring += '\\n#define MEDIUM_PRECISION';\n \n\t } else if ( parameters.precision === 'lowp' ) {\n \n\t\t precisionstring += '\\n#define LOW_PRECISION';\n \n\t }\n \n\t return precisionstring;\n \n }\n \n function generateShadowMapTypeDefine( parameters ) {\n \n\t let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n \n\t if ( parameters.shadowMapType === PCFShadowMap ) {\n \n\t\t shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n \n\t } else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n \n\t\t shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n \n\t } else if ( parameters.shadowMapType === VSMShadowMap ) {\n \n\t\t shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n \n\t }\n \n\t return shadowMapTypeDefine;\n \n }\n \n function generateEnvMapTypeDefine( parameters ) {\n \n\t let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n \n\t if ( parameters.envMap ) {\n \n\t\t switch ( parameters.envMapMode ) {\n \n\t\t\t case CubeReflectionMapping:\n\t\t\t case CubeRefractionMapping:\n\t\t\t\t envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t break;\n \n\t\t\t case CubeUVReflectionMapping:\n\t\t\t case CubeUVRefractionMapping:\n\t\t\t\t envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t break;\n \n\t\t }\n \n\t }\n \n\t return envMapTypeDefine;\n \n }\n \n function generateEnvMapModeDefine( parameters ) {\n \n\t let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n \n\t if ( parameters.envMap ) {\n \n\t\t switch ( parameters.envMapMode ) {\n \n\t\t\t case CubeRefractionMapping:\n\t\t\t case CubeUVRefractionMapping:\n \n\t\t\t\t envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t break;\n \n\t\t }\n \n\t }\n \n\t return envMapModeDefine;\n \n }\n \n function generateEnvMapBlendingDefine( parameters ) {\n \n\t let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n \n\t if ( parameters.envMap ) {\n \n\t\t switch ( parameters.combine ) {\n \n\t\t\t case MultiplyOperation:\n\t\t\t\t envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t break;\n \n\t\t\t case MixOperation:\n\t\t\t\t envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t break;\n \n\t\t\t case AddOperation:\n\t\t\t\t envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t break;\n \n\t\t }\n \n\t }\n \n\t return envMapBlendingDefine;\n \n }\n \n function WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n \n\t const gl = renderer.getContext();\n \n\t const defines = parameters.defines;\n \n\t let vertexShader = parameters.vertexShader;\n\t let fragmentShader = parameters.fragmentShader;\n \n\t const shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\t const envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\t const envMapModeDefine = generateEnvMapModeDefine( parameters );\n\t const envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n \n \n\t const gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n \n\t const customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n \n\t const customDefines = generateDefines( defines );\n \n\t const program = gl.createProgram();\n \n\t let prefixVertex, prefixFragment;\n\t let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n \n\t if ( parameters.isRawShaderMaterial ) {\n \n\t\t prefixVertex = [\n \n\t\t\t customDefines\n \n\t\t ].filter( filterEmptyLine ).join( '\\n' );\n \n\t\t if ( prefixVertex.length > 0 ) {\n \n\t\t\t prefixVertex += '\\n';\n \n\t\t }\n \n\t\t prefixFragment = [\n \n\t\t\t customExtensions,\n\t\t\t customDefines\n \n\t\t ].filter( filterEmptyLine ).join( '\\n' );\n \n\t\t if ( prefixFragment.length > 0 ) {\n \n\t\t\t prefixFragment += '\\n';\n \n\t\t }\n \n\t } else {\n \n\t\t prefixVertex = [\n \n\t\t\t generatePrecision( parameters ),\n \n\t\t\t '#define SHADER_NAME ' + parameters.shaderName,\n \n\t\t\t customDefines,\n \n\t\t\t parameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\t parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n \n\t\t\t parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n \n\t\t\t '#define GAMMA_FACTOR ' + gammaFactorDefine,\n \n\t\t\t '#define MAX_BONES ' + parameters.maxBones,\n\t\t\t ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t ( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n \n\t\t\t parameters.map ? '#define USE_MAP' : '',\n\t\t\t parameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t parameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t parameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t parameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t ( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n \n\t\t\t parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\t parameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\t parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\t parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n \n\t\t\t parameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t parameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\t parameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n \n\t\t\t parameters.flatShading ? '#define FLAT_SHADED' : '',\n \n\t\t\t parameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n \n\t\t\t parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t parameters.flipSided ? '#define FLIP_SIDED' : '',\n \n\t\t\t parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n \n\t\t\t parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n \n\t\t\t parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t ( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n \n\t\t\t 'uniform mat4 modelMatrix;',\n\t\t\t 'uniform mat4 modelViewMatrix;',\n\t\t\t 'uniform mat4 projectionMatrix;',\n\t\t\t 'uniform mat4 viewMatrix;',\n\t\t\t 'uniform mat3 normalMatrix;',\n\t\t\t 'uniform vec3 cameraPosition;',\n\t\t\t 'uniform bool isOrthographic;',\n \n\t\t\t '#ifdef USE_INSTANCING',\n \n\t\t\t '\tattribute mat4 instanceMatrix;',\n \n\t\t\t '#endif',\n \n\t\t\t '#ifdef USE_INSTANCING_COLOR',\n \n\t\t\t '\tattribute vec3 instanceColor;',\n \n\t\t\t '#endif',\n \n\t\t\t 'attribute vec3 position;',\n\t\t\t 'attribute vec3 normal;',\n\t\t\t 'attribute vec2 uv;',\n \n\t\t\t '#ifdef USE_TANGENT',\n \n\t\t\t '\tattribute vec4 tangent;',\n \n\t\t\t '#endif',\n \n\t\t\t '#if defined( USE_COLOR_ALPHA )',\n \n\t\t\t '\tattribute vec4 color;',\n \n\t\t\t '#elif defined( USE_COLOR )',\n \n\t\t\t '\tattribute vec3 color;',\n \n\t\t\t '#endif',\n \n\t\t\t '#ifdef USE_MORPHTARGETS',\n \n\t\t\t '\tattribute vec3 morphTarget0;',\n\t\t\t '\tattribute vec3 morphTarget1;',\n\t\t\t '\tattribute vec3 morphTarget2;',\n\t\t\t '\tattribute vec3 morphTarget3;',\n \n\t\t\t '\t#ifdef USE_MORPHNORMALS',\n \n\t\t\t '\t\tattribute vec3 morphNormal0;',\n\t\t\t '\t\tattribute vec3 morphNormal1;',\n\t\t\t '\t\tattribute vec3 morphNormal2;',\n\t\t\t '\t\tattribute vec3 morphNormal3;',\n \n\t\t\t '\t#else',\n \n\t\t\t '\t\tattribute vec3 morphTarget4;',\n\t\t\t '\t\tattribute vec3 morphTarget5;',\n\t\t\t '\t\tattribute vec3 morphTarget6;',\n\t\t\t '\t\tattribute vec3 morphTarget7;',\n \n\t\t\t '\t#endif',\n \n\t\t\t '#endif',\n \n\t\t\t '#ifdef USE_SKINNING',\n \n\t\t\t '\tattribute vec4 skinIndex;',\n\t\t\t '\tattribute vec4 skinWeight;',\n \n\t\t\t '#endif',\n \n\t\t\t '\\n'\n \n\t\t ].filter( filterEmptyLine ).join( '\\n' );\n \n\t\t prefixFragment = [\n \n\t\t\t customExtensions,\n \n\t\t\t generatePrecision( parameters ),\n \n\t\t\t '#define SHADER_NAME ' + parameters.shaderName,\n \n\t\t\t customDefines,\n \n\t\t\t parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n \n\t\t\t '#define GAMMA_FACTOR ' + gammaFactorDefine,\n \n\t\t\t ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t ( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n \n\t\t\t parameters.map ? '#define USE_MAP' : '',\n\t\t\t parameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\t parameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t parameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t parameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t parameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t parameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t parameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t parameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t parameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t ( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\t parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\t parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\t parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t parameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n \n\t\t\t parameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\t parameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\t parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\t parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n \n\t\t\t parameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\t parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\t parameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n \n\t\t\t parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n \n\t\t\t parameters.flatShading ? '#define FLAT_SHADED' : '',\n \n\t\t\t parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t parameters.flipSided ? '#define FLIP_SIDED' : '',\n \n\t\t\t parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n \n\t\t\t parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n \n\t\t\t parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n \n\t\t\t parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t ( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n \n\t\t\t ( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n \n\t\t\t 'uniform mat4 viewMatrix;',\n\t\t\t 'uniform vec3 cameraPosition;',\n\t\t\t 'uniform bool isOrthographic;',\n \n\t\t\t ( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t ( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t ( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n \n\t\t\t parameters.dithering ? '#define DITHERING' : '',\n \n\t\t\t ShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t parameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t parameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\t parameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t parameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t parameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\t getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n \n\t\t\t parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n \n\t\t\t '\\n'\n \n\t\t ].filter( filterEmptyLine ).join( '\\n' );\n \n\t }\n \n\t vertexShader = resolveIncludes( vertexShader );\n\t vertexShader = replaceLightNums( vertexShader, parameters );\n\t vertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n \n\t fragmentShader = resolveIncludes( fragmentShader );\n\t fragmentShader = replaceLightNums( fragmentShader, parameters );\n\t fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n \n\t vertexShader = unrollLoops( vertexShader );\n\t fragmentShader = unrollLoops( fragmentShader );\n \n\t if ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n \n\t\t // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n \n\t\t versionString = '#version 300 es\\n';\n \n\t\t prefixVertex = [\n\t\t\t '#define attribute in',\n\t\t\t '#define varying out',\n\t\t\t '#define texture2D texture'\n\t\t ].join( '\\n' ) + '\\n' + prefixVertex;\n \n\t\t prefixFragment = [\n\t\t\t '#define varying in',\n\t\t\t ( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t ( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t '#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t '#define texture2D texture',\n\t\t\t '#define textureCube texture',\n\t\t\t '#define texture2DProj textureProj',\n\t\t\t '#define texture2DLodEXT textureLod',\n\t\t\t '#define texture2DProjLodEXT textureProjLod',\n\t\t\t '#define textureCubeLodEXT textureLod',\n\t\t\t '#define texture2DGradEXT textureGrad',\n\t\t\t '#define texture2DProjGradEXT textureProjGrad',\n\t\t\t '#define textureCubeGradEXT textureGrad'\n\t\t ].join( '\\n' ) + '\\n' + prefixFragment;\n \n\t }\n \n\t const vertexGlsl = versionString + prefixVertex + vertexShader;\n\t const fragmentGlsl = versionString + prefixFragment + fragmentShader;\n \n\t // console.log( '*VERTEX*', vertexGlsl );\n\t // console.log( '*FRAGMENT*', fragmentGlsl );\n \n\t const glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\t const glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n \n\t gl.attachShader( program, glVertexShader );\n\t gl.attachShader( program, glFragmentShader );\n \n\t // Force a particular attribute to index 0.\n \n\t if ( parameters.index0AttributeName !== undefined ) {\n \n\t\t gl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n \n\t } else if ( parameters.morphTargets === true ) {\n \n\t\t // programs with morphTargets displace position out of attribute 0\n\t\t gl.bindAttribLocation( program, 0, 'position' );\n \n\t }\n \n\t gl.linkProgram( program );\n \n\t // check for link errors\n\t if ( renderer.debug.checkShaderErrors ) {\n \n\t\t const programLog = gl.getProgramInfoLog( program ).trim();\n\t\t const vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t const fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n \n\t\t let runnable = true;\n\t\t let haveDiagnostics = true;\n \n\t\t if ( gl.getProgramParameter( program, 35714 ) === false ) {\n \n\t\t\t runnable = false;\n \n\t\t\t const vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t const fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n \n\t\t\t console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n \n\t\t } else if ( programLog !== '' ) {\n \n\t\t\t console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n \n\t\t } else if ( vertexLog === '' || fragmentLog === '' ) {\n \n\t\t\t haveDiagnostics = false;\n \n\t\t }\n \n\t\t if ( haveDiagnostics ) {\n \n\t\t\t this.diagnostics = {\n \n\t\t\t\t runnable: runnable,\n \n\t\t\t\t programLog: programLog,\n \n\t\t\t\t vertexShader: {\n \n\t\t\t\t\t log: vertexLog,\n\t\t\t\t\t prefix: prefixVertex\n \n\t\t\t\t },\n \n\t\t\t\t fragmentShader: {\n \n\t\t\t\t\t log: fragmentLog,\n\t\t\t\t\t prefix: prefixFragment\n \n\t\t\t\t }\n \n\t\t\t };\n \n\t\t }\n \n\t }\n \n\t // Clean up\n \n\t // Crashes in iOS9 and iOS10. #18402\n\t // gl.detachShader( program, glVertexShader );\n\t // gl.detachShader( program, glFragmentShader );\n \n\t gl.deleteShader( glVertexShader );\n\t gl.deleteShader( glFragmentShader );\n \n\t // set up caching for uniform locations\n \n\t let cachedUniforms;\n \n\t this.getUniforms = function () {\n \n\t\t if ( cachedUniforms === undefined ) {\n \n\t\t\t cachedUniforms = new WebGLUniforms( gl, program );\n \n\t\t }\n \n\t\t return cachedUniforms;\n \n\t };\n \n\t // set up caching for attribute locations\n \n\t let cachedAttributes;\n \n\t this.getAttributes = function () {\n \n\t\t if ( cachedAttributes === undefined ) {\n \n\t\t\t cachedAttributes = fetchAttributeLocations( gl, program );\n \n\t\t }\n \n\t\t return cachedAttributes;\n \n\t };\n \n\t // free resource\n \n\t this.destroy = function () {\n \n\t\t bindingStates.releaseStatesOfProgram( this );\n \n\t\t gl.deleteProgram( program );\n\t\t this.program = undefined;\n \n\t };\n \n\t //\n \n\t this.name = parameters.shaderName;\n\t this.id = programIdCount ++;\n\t this.cacheKey = cacheKey;\n\t this.usedTimes = 1;\n\t this.program = program;\n\t this.vertexShader = glVertexShader;\n\t this.fragmentShader = glFragmentShader;\n \n\t return this;\n \n }\n \n function WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n \n\t const programs = [];\n \n\t const isWebGL2 = capabilities.isWebGL2;\n\t const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t const floatVertexTextures = capabilities.floatVertexTextures;\n\t const maxVertexUniforms = capabilities.maxVertexUniforms;\n\t const vertexTextures = capabilities.vertexTextures;\n \n\t let precision = capabilities.precision;\n \n\t const shaderIDs = {\n\t\t MeshDepthMaterial: 'depth',\n\t\t MeshDistanceMaterial: 'distanceRGBA',\n\t\t MeshNormalMaterial: 'normal',\n\t\t MeshBasicMaterial: 'basic',\n\t\t MeshLambertMaterial: 'lambert',\n\t\t MeshPhongMaterial: 'phong',\n\t\t MeshToonMaterial: 'toon',\n\t\t MeshStandardMaterial: 'physical',\n\t\t MeshPhysicalMaterial: 'physical',\n\t\t MeshMatcapMaterial: 'matcap',\n\t\t LineBasicMaterial: 'basic',\n\t\t LineDashedMaterial: 'dashed',\n\t\t PointsMaterial: 'points',\n\t\t ShadowMaterial: 'shadow',\n\t\t SpriteMaterial: 'sprite'\n\t };\n \n\t const parameterNames = [\n\t\t 'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t 'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t 'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha',\n\t\t 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t 'sheen', 'transmission', 'transmissionMap', 'thicknessMap'\n\t ];\n \n\t function getMaxBones( object ) {\n \n\t\t const skeleton = object.skeleton;\n\t\t const bones = skeleton.bones;\n \n\t\t if ( floatVertexTextures ) {\n \n\t\t\t return 1024;\n \n\t\t } else {\n \n\t\t\t // default for when object is not specified\n\t\t\t // ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t //\n\t\t\t //  - leave some extra space for other uniforms\n\t\t\t //  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t //    (up to 54 should be safe)\n \n\t\t\t const nVertexUniforms = maxVertexUniforms;\n\t\t\t const nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n \n\t\t\t const maxBones = Math.min( nVertexMatrices, bones.length );\n \n\t\t\t if ( maxBones < bones.length ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t return 0;\n \n\t\t\t }\n \n\t\t\t return maxBones;\n \n\t\t }\n \n\t }\n \n\t function getTextureEncodingFromMap( map ) {\n \n\t\t let encoding;\n \n\t\t if ( map && map.isTexture ) {\n \n\t\t\t encoding = map.encoding;\n \n\t\t } else if ( map && map.isWebGLRenderTarget ) {\n \n\t\t\t console.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t encoding = map.texture.encoding;\n \n\t\t } else {\n \n\t\t\t encoding = LinearEncoding;\n \n\t\t }\n \n\t\t return encoding;\n \n\t }\n \n\t function getParameters( material, lights, shadows, scene, object ) {\n \n\t\t const fog = scene.fog;\n\t\t const environment = material.isMeshStandardMaterial ? scene.environment : null;\n \n\t\t const envMap = cubemaps.get( material.envMap || environment );\n \n\t\t const shaderID = shaderIDs[ material.type ];\n \n\t\t // heuristics to create shader parameters according to lights in the scene\n\t\t // (not to blow over maxLights budget)\n \n\t\t const maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n \n\t\t if ( material.precision !== null ) {\n \n\t\t\t precision = capabilities.getMaxPrecision( material.precision );\n \n\t\t\t if ( precision !== material.precision ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n \n\t\t\t }\n \n\t\t }\n \n\t\t let vertexShader, fragmentShader;\n \n\t\t if ( shaderID ) {\n \n\t\t\t const shader = ShaderLib[ shaderID ];\n \n\t\t\t vertexShader = shader.vertexShader;\n\t\t\t fragmentShader = shader.fragmentShader;\n \n\t\t } else {\n \n\t\t\t vertexShader = material.vertexShader;\n\t\t\t fragmentShader = material.fragmentShader;\n \n\t\t }\n \n\t\t const currentRenderTarget = renderer.getRenderTarget();\n \n\t\t const parameters = {\n \n\t\t\t isWebGL2: isWebGL2,\n \n\t\t\t shaderID: shaderID,\n\t\t\t shaderName: material.type,\n \n\t\t\t vertexShader: vertexShader,\n\t\t\t fragmentShader: fragmentShader,\n\t\t\t defines: material.defines,\n \n\t\t\t isRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t glslVersion: material.glslVersion,\n \n\t\t\t precision: precision,\n \n\t\t\t instancing: object.isInstancedMesh === true,\n\t\t\t instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n \n\t\t\t supportsVertexTextures: vertexTextures,\n\t\t\t outputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\t map: !! material.map,\n\t\t\t mapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\t matcap: !! material.matcap,\n\t\t\t matcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\t envMap: !! envMap,\n\t\t\t envMapMode: envMap && envMap.mapping,\n\t\t\t envMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\t envMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t lightMap: !! material.lightMap,\n\t\t\t lightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\t aoMap: !! material.aoMap,\n\t\t\t emissiveMap: !! material.emissiveMap,\n\t\t\t emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\t bumpMap: !! material.bumpMap,\n\t\t\t normalMap: !! material.normalMap,\n\t\t\t objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t clearcoatMap: !! material.clearcoatMap,\n\t\t\t clearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\t clearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\t displacementMap: !! material.displacementMap,\n\t\t\t roughnessMap: !! material.roughnessMap,\n\t\t\t metalnessMap: !! material.metalnessMap,\n\t\t\t specularMap: !! material.specularMap,\n\t\t\t alphaMap: !! material.alphaMap,\n \n\t\t\t gradientMap: !! material.gradientMap,\n \n\t\t\t sheen: !! material.sheen,\n \n\t\t\t transmission: !! material.transmission,\n\t\t\t transmissionMap: !! material.transmissionMap,\n\t\t\t thicknessMap: !! material.thicknessMap,\n \n\t\t\t combine: material.combine,\n \n\t\t\t vertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\t vertexColors: material.vertexColors,\n\t\t\t vertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\t vertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmission || !! material.transmissionMap || !! material.thicknessMap,\n\t\t\t uvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmission || !! material.transmissionMap || !! material.thicknessMap ) && !! material.displacementMap,\n \n\t\t\t fog: !! fog,\n\t\t\t useFog: material.fog,\n\t\t\t fogExp2: ( fog && fog.isFogExp2 ),\n \n\t\t\t flatShading: !! material.flatShading,\n \n\t\t\t sizeAttenuation: material.sizeAttenuation,\n\t\t\t logarithmicDepthBuffer: logarithmicDepthBuffer,\n \n\t\t\t skinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\t maxBones: maxBones,\n\t\t\t useVertexTexture: floatVertexTextures,\n \n\t\t\t morphTargets: material.morphTargets,\n\t\t\t morphNormals: material.morphNormals,\n \n\t\t\t numDirLights: lights.directional.length,\n\t\t\t numPointLights: lights.point.length,\n\t\t\t numSpotLights: lights.spot.length,\n\t\t\t numRectAreaLights: lights.rectArea.length,\n\t\t\t numHemiLights: lights.hemi.length,\n \n\t\t\t numDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t numPointLightShadows: lights.pointShadowMap.length,\n\t\t\t numSpotLightShadows: lights.spotShadowMap.length,\n \n\t\t\t numClippingPlanes: clipping.numPlanes,\n\t\t\t numClipIntersection: clipping.numIntersection,\n \n\t\t\t dithering: material.dithering,\n \n\t\t\t shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t shadowMapType: renderer.shadowMap.type,\n \n\t\t\t toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t physicallyCorrectLights: renderer.physicallyCorrectLights,\n \n\t\t\t premultipliedAlpha: material.premultipliedAlpha,\n \n\t\t\t alphaTest: material.alphaTest,\n\t\t\t doubleSided: material.side === DoubleSide,\n\t\t\t flipSided: material.side === BackSide,\n \n\t\t\t depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n \n\t\t\t index0AttributeName: material.index0AttributeName,\n \n\t\t\t extensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t extensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n \n\t\t\t rendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\t rendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\t rendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n \n\t\t\t customProgramCacheKey: material.customProgramCacheKey()\n \n\t\t };\n \n\t\t return parameters;\n \n\t }\n \n\t function getProgramCacheKey( parameters ) {\n \n\t\t const array = [];\n \n\t\t if ( parameters.shaderID ) {\n \n\t\t\t array.push( parameters.shaderID );\n \n\t\t } else {\n \n\t\t\t array.push( parameters.fragmentShader );\n\t\t\t array.push( parameters.vertexShader );\n \n\t\t }\n \n\t\t if ( parameters.defines !== undefined ) {\n \n\t\t\t for ( const name in parameters.defines ) {\n \n\t\t\t\t array.push( name );\n\t\t\t\t array.push( parameters.defines[ name ] );\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( parameters.isRawShaderMaterial === false ) {\n \n\t\t\t for ( let i = 0; i < parameterNames.length; i ++ ) {\n \n\t\t\t\t array.push( parameters[ parameterNames[ i ] ] );\n \n\t\t\t }\n \n\t\t\t array.push( renderer.outputEncoding );\n\t\t\t array.push( renderer.gammaFactor );\n \n\t\t }\n \n\t\t array.push( parameters.customProgramCacheKey );\n \n\t\t return array.join();\n \n\t }\n \n\t function getUniforms( material ) {\n \n\t\t const shaderID = shaderIDs[ material.type ];\n\t\t let uniforms;\n \n\t\t if ( shaderID ) {\n \n\t\t\t const shader = ShaderLib[ shaderID ];\n\t\t\t uniforms = UniformsUtils.clone( shader.uniforms );\n \n\t\t } else {\n \n\t\t\t uniforms = material.uniforms;\n \n\t\t }\n \n\t\t return uniforms;\n \n\t }\n \n\t function acquireProgram( parameters, cacheKey ) {\n \n\t\t let program;\n \n\t\t // Check if code has been already compiled\n\t\t for ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n \n\t\t\t const preexistingProgram = programs[ p ];\n \n\t\t\t if ( preexistingProgram.cacheKey === cacheKey ) {\n \n\t\t\t\t program = preexistingProgram;\n\t\t\t\t ++ program.usedTimes;\n \n\t\t\t\t break;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( program === undefined ) {\n \n\t\t\t program = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\t programs.push( program );\n \n\t\t }\n \n\t\t return program;\n \n\t }\n \n\t function releaseProgram( program ) {\n \n\t\t if ( -- program.usedTimes === 0 ) {\n \n\t\t\t // Remove from unordered set\n\t\t\t const i = programs.indexOf( program );\n\t\t\t programs[ i ] = programs[ programs.length - 1 ];\n\t\t\t programs.pop();\n \n\t\t\t // Free WebGL resources\n\t\t\t program.destroy();\n \n\t\t }\n \n\t }\n \n\t return {\n\t\t getParameters: getParameters,\n\t\t getProgramCacheKey: getProgramCacheKey,\n\t\t getUniforms: getUniforms,\n\t\t acquireProgram: acquireProgram,\n\t\t releaseProgram: releaseProgram,\n\t\t // Exposed for resource monitoring & error feedback via renderer.info:\n\t\t programs: programs\n\t };\n \n }\n \n function WebGLProperties() {\n \n\t let properties = new WeakMap();\n \n\t function get( object ) {\n \n\t\t let map = properties.get( object );\n \n\t\t if ( map === undefined ) {\n \n\t\t\t map = {};\n\t\t\t properties.set( object, map );\n \n\t\t }\n \n\t\t return map;\n \n\t }\n \n\t function remove( object ) {\n \n\t\t properties.delete( object );\n \n\t }\n \n\t function update( object, key, value ) {\n \n\t\t properties.get( object )[ key ] = value;\n \n\t }\n \n\t function dispose() {\n \n\t\t properties = new WeakMap();\n \n\t }\n \n\t return {\n\t\t get: get,\n\t\t remove: remove,\n\t\t update: update,\n\t\t dispose: dispose\n\t };\n \n }\n \n function painterSortStable( a, b ) {\n \n\t if ( a.groupOrder !== b.groupOrder ) {\n \n\t\t return a.groupOrder - b.groupOrder;\n \n\t } else if ( a.renderOrder !== b.renderOrder ) {\n \n\t\t return a.renderOrder - b.renderOrder;\n \n\t } else if ( a.program !== b.program ) {\n \n\t\t return a.program.id - b.program.id;\n \n\t } else if ( a.material.id !== b.material.id ) {\n \n\t\t return a.material.id - b.material.id;\n \n\t } else if ( a.z !== b.z ) {\n \n\t\t return a.z - b.z;\n \n\t } else {\n \n\t\t return a.id - b.id;\n \n\t }\n \n }\n \n function reversePainterSortStable( a, b ) {\n \n\t if ( a.groupOrder !== b.groupOrder ) {\n \n\t\t return a.groupOrder - b.groupOrder;\n \n\t } else if ( a.renderOrder !== b.renderOrder ) {\n \n\t\t return a.renderOrder - b.renderOrder;\n \n\t } else if ( a.z !== b.z ) {\n \n\t\t return b.z - a.z;\n \n\t } else {\n \n\t\t return a.id - b.id;\n \n\t }\n \n }\n \n \n function WebGLRenderList( properties ) {\n \n\t const renderItems = [];\n\t let renderItemsIndex = 0;\n \n\t const opaque = [];\n\t const transmissive = [];\n\t const transparent = [];\n \n\t const defaultProgram = { id: - 1 };\n \n\t function init() {\n \n\t\t renderItemsIndex = 0;\n \n\t\t opaque.length = 0;\n\t\t transmissive.length = 0;\n\t\t transparent.length = 0;\n \n\t }\n \n\t function getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n \n\t\t let renderItem = renderItems[ renderItemsIndex ];\n\t\t const materialProperties = properties.get( material );\n \n\t\t if ( renderItem === undefined ) {\n \n\t\t\t renderItem = {\n\t\t\t\t id: object.id,\n\t\t\t\t object: object,\n\t\t\t\t geometry: geometry,\n\t\t\t\t material: material,\n\t\t\t\t program: materialProperties.program || defaultProgram,\n\t\t\t\t groupOrder: groupOrder,\n\t\t\t\t renderOrder: object.renderOrder,\n\t\t\t\t z: z,\n\t\t\t\t group: group\n\t\t\t };\n \n\t\t\t renderItems[ renderItemsIndex ] = renderItem;\n \n\t\t } else {\n \n\t\t\t renderItem.id = object.id;\n\t\t\t renderItem.object = object;\n\t\t\t renderItem.geometry = geometry;\n\t\t\t renderItem.material = material;\n\t\t\t renderItem.program = materialProperties.program || defaultProgram;\n\t\t\t renderItem.groupOrder = groupOrder;\n\t\t\t renderItem.renderOrder = object.renderOrder;\n\t\t\t renderItem.z = z;\n\t\t\t renderItem.group = group;\n \n\t\t }\n \n\t\t renderItemsIndex ++;\n \n\t\t return renderItem;\n \n\t }\n \n\t function push( object, geometry, material, groupOrder, z, group ) {\n \n\t\t const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n \n\t\t if ( material.transmission > 0.0 ) {\n \n\t\t\t transmissive.push( renderItem );\n \n\t\t } else if ( material.transparent === true ) {\n \n\t\t\t transparent.push( renderItem );\n \n\t\t } else {\n \n\t\t\t opaque.push( renderItem );\n \n\t\t }\n \n\t }\n \n\t function unshift( object, geometry, material, groupOrder, z, group ) {\n \n\t\t const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n \n\t\t if ( material.transmission > 0.0 ) {\n \n\t\t\t transmissive.unshift( renderItem );\n \n\t\t } else if ( material.transparent === true ) {\n \n\t\t\t transparent.unshift( renderItem );\n \n\t\t } else {\n \n\t\t\t opaque.unshift( renderItem );\n \n\t\t }\n \n\t }\n \n\t function sort( customOpaqueSort, customTransparentSort ) {\n \n\t\t if ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\t if ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\t if ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n \n\t }\n \n\t function finish() {\n \n\t\t // Clear references from inactive renderItems in the list\n \n\t\t for ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n \n\t\t\t const renderItem = renderItems[ i ];\n \n\t\t\t if ( renderItem.id === null ) break;\n \n\t\t\t renderItem.id = null;\n\t\t\t renderItem.object = null;\n\t\t\t renderItem.geometry = null;\n\t\t\t renderItem.material = null;\n\t\t\t renderItem.program = null;\n\t\t\t renderItem.group = null;\n \n\t\t }\n \n\t }\n \n\t return {\n \n\t\t opaque: opaque,\n\t\t transmissive: transmissive,\n\t\t transparent: transparent,\n \n\t\t init: init,\n\t\t push: push,\n\t\t unshift: unshift,\n\t\t finish: finish,\n \n\t\t sort: sort\n\t };\n \n }\n \n function WebGLRenderLists( properties ) {\n \n\t let lists = new WeakMap();\n \n\t function get( scene, renderCallDepth ) {\n \n\t\t let list;\n \n\t\t if ( lists.has( scene ) === false ) {\n \n\t\t\t list = new WebGLRenderList( properties );\n\t\t\t lists.set( scene, [ list ] );\n \n\t\t } else {\n \n\t\t\t if ( renderCallDepth >= lists.get( scene ).length ) {\n \n\t\t\t\t list = new WebGLRenderList( properties );\n\t\t\t\t lists.get( scene ).push( list );\n \n\t\t\t } else {\n \n\t\t\t\t list = lists.get( scene )[ renderCallDepth ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t return list;\n \n\t }\n \n\t function dispose() {\n \n\t\t lists = new WeakMap();\n \n\t }\n \n\t return {\n\t\t get: get,\n\t\t dispose: dispose\n\t };\n \n }\n \n function UniformsCache() {\n \n\t const lights = {};\n \n\t return {\n \n\t\t get: function ( light ) {\n \n\t\t\t if ( lights[ light.id ] !== undefined ) {\n \n\t\t\t\t return lights[ light.id ];\n \n\t\t\t }\n \n\t\t\t let uniforms;\n \n\t\t\t switch ( light.type ) {\n \n\t\t\t\t case 'DirectionalLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t direction: new Vector3(),\n\t\t\t\t\t\t color: new Color()\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t\t case 'SpotLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t position: new Vector3(),\n\t\t\t\t\t\t direction: new Vector3(),\n\t\t\t\t\t\t color: new Color(),\n\t\t\t\t\t\t distance: 0,\n\t\t\t\t\t\t coneCos: 0,\n\t\t\t\t\t\t penumbraCos: 0,\n\t\t\t\t\t\t decay: 0\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t\t case 'PointLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t position: new Vector3(),\n\t\t\t\t\t\t color: new Color(),\n\t\t\t\t\t\t distance: 0,\n\t\t\t\t\t\t decay: 0\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t\t case 'HemisphereLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t direction: new Vector3(),\n\t\t\t\t\t\t skyColor: new Color(),\n\t\t\t\t\t\t groundColor: new Color()\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t\t case 'RectAreaLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t color: new Color(),\n\t\t\t\t\t\t position: new Vector3(),\n\t\t\t\t\t\t halfWidth: new Vector3(),\n\t\t\t\t\t\t halfHeight: new Vector3()\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t }\n \n\t\t\t lights[ light.id ] = uniforms;\n \n\t\t\t return uniforms;\n \n\t\t }\n \n\t };\n \n }\n \n function ShadowUniformsCache() {\n \n\t const lights = {};\n \n\t return {\n \n\t\t get: function ( light ) {\n \n\t\t\t if ( lights[ light.id ] !== undefined ) {\n \n\t\t\t\t return lights[ light.id ];\n \n\t\t\t }\n \n\t\t\t let uniforms;\n \n\t\t\t switch ( light.type ) {\n \n\t\t\t\t case 'DirectionalLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t shadowBias: 0,\n\t\t\t\t\t\t shadowNormalBias: 0,\n\t\t\t\t\t\t shadowRadius: 1,\n\t\t\t\t\t\t shadowMapSize: new Vector2()\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t\t case 'SpotLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t shadowBias: 0,\n\t\t\t\t\t\t shadowNormalBias: 0,\n\t\t\t\t\t\t shadowRadius: 1,\n\t\t\t\t\t\t shadowMapSize: new Vector2()\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t\t case 'PointLight':\n\t\t\t\t\t uniforms = {\n\t\t\t\t\t\t shadowBias: 0,\n\t\t\t\t\t\t shadowNormalBias: 0,\n\t\t\t\t\t\t shadowRadius: 1,\n\t\t\t\t\t\t shadowMapSize: new Vector2(),\n\t\t\t\t\t\t shadowCameraNear: 1,\n\t\t\t\t\t\t shadowCameraFar: 1000\n\t\t\t\t\t };\n\t\t\t\t\t break;\n \n\t\t\t\t // TODO (abelnation): set RectAreaLight shadow uniforms\n \n\t\t\t }\n \n\t\t\t lights[ light.id ] = uniforms;\n \n\t\t\t return uniforms;\n \n\t\t }\n \n\t };\n \n }\n \n \n \n let nextVersion = 0;\n \n function shadowCastingLightsFirst( lightA, lightB ) {\n \n\t return ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n \n }\n \n function WebGLLights( extensions, capabilities ) {\n \n\t const cache = new UniformsCache();\n \n\t const shadowCache = ShadowUniformsCache();\n \n\t const state = {\n \n\t\t version: 0,\n \n\t\t hash: {\n\t\t\t directionalLength: - 1,\n\t\t\t pointLength: - 1,\n\t\t\t spotLength: - 1,\n\t\t\t rectAreaLength: - 1,\n\t\t\t hemiLength: - 1,\n \n\t\t\t numDirectionalShadows: - 1,\n\t\t\t numPointShadows: - 1,\n\t\t\t numSpotShadows: - 1\n\t\t },\n \n\t\t ambient: [ 0, 0, 0 ],\n\t\t probe: [],\n\t\t directional: [],\n\t\t directionalShadow: [],\n\t\t directionalShadowMap: [],\n\t\t directionalShadowMatrix: [],\n\t\t spot: [],\n\t\t spotShadow: [],\n\t\t spotShadowMap: [],\n\t\t spotShadowMatrix: [],\n\t\t rectArea: [],\n\t\t rectAreaLTC1: null,\n\t\t rectAreaLTC2: null,\n\t\t point: [],\n\t\t pointShadow: [],\n\t\t pointShadowMap: [],\n\t\t pointShadowMatrix: [],\n\t\t hemi: []\n \n\t };\n \n\t for ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n \n\t const vector3 = new Vector3();\n\t const matrix4 = new Matrix4();\n\t const matrix42 = new Matrix4();\n \n\t function setup( lights ) {\n \n\t\t let r = 0, g = 0, b = 0;\n \n\t\t for ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n \n\t\t let directionalLength = 0;\n\t\t let pointLength = 0;\n\t\t let spotLength = 0;\n\t\t let rectAreaLength = 0;\n\t\t let hemiLength = 0;\n \n\t\t let numDirectionalShadows = 0;\n\t\t let numPointShadows = 0;\n\t\t let numSpotShadows = 0;\n \n\t\t lights.sort( shadowCastingLightsFirst );\n \n\t\t for ( let i = 0, l = lights.length; i < l; i ++ ) {\n \n\t\t\t const light = lights[ i ];\n \n\t\t\t const color = light.color;\n\t\t\t const intensity = light.intensity;\n\t\t\t const distance = light.distance;\n \n\t\t\t const shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n \n\t\t\t if ( light.isAmbientLight ) {\n \n\t\t\t\t r += color.r * intensity;\n\t\t\t\t g += color.g * intensity;\n\t\t\t\t b += color.b * intensity;\n \n\t\t\t } else if ( light.isLightProbe ) {\n \n\t\t\t\t for ( let j = 0; j < 9; j ++ ) {\n \n\t\t\t\t\t state.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n \n\t\t\t\t }\n \n\t\t\t } else if ( light.isDirectionalLight ) {\n \n\t\t\t\t const uniforms = cache.get( light );\n \n\t\t\t\t uniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n \n\t\t\t\t if ( light.castShadow ) {\n \n\t\t\t\t\t const shadow = light.shadow;\n \n\t\t\t\t\t const shadowUniforms = shadowCache.get( light );\n \n\t\t\t\t\t shadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t shadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t shadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t shadowUniforms.shadowMapSize = shadow.mapSize;\n \n\t\t\t\t\t state.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\t state.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n \n\t\t\t\t\t numDirectionalShadows ++;\n \n\t\t\t\t }\n \n\t\t\t\t state.directional[ directionalLength ] = uniforms;\n \n\t\t\t\t directionalLength ++;\n \n\t\t\t } else if ( light.isSpotLight ) {\n \n\t\t\t\t const uniforms = cache.get( light );\n \n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\n \n\t\t\t\t uniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t uniforms.distance = distance;\n \n\t\t\t\t uniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t uniforms.decay = light.decay;\n \n\t\t\t\t if ( light.castShadow ) {\n \n\t\t\t\t\t const shadow = light.shadow;\n \n\t\t\t\t\t const shadowUniforms = shadowCache.get( light );\n \n\t\t\t\t\t shadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t shadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t shadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t shadowUniforms.shadowMapSize = shadow.mapSize;\n \n\t\t\t\t\t state.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\t state.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n \n\t\t\t\t\t numSpotShadows ++;\n \n\t\t\t\t }\n \n\t\t\t\t state.spot[ spotLength ] = uniforms;\n \n\t\t\t\t spotLength ++;\n \n\t\t\t } else if ( light.isRectAreaLight ) {\n \n\t\t\t\t const uniforms = cache.get( light );\n \n\t\t\t\t // (a) intensity is the total visible light emitted\n\t\t\t\t //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n \n\t\t\t\t // (b) intensity is the brightness of the light\n\t\t\t\t uniforms.color.copy( color ).multiplyScalar( intensity );\n \n\t\t\t\t uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n \n\t\t\t\t state.rectArea[ rectAreaLength ] = uniforms;\n \n\t\t\t\t rectAreaLength ++;\n \n\t\t\t } else if ( light.isPointLight ) {\n \n\t\t\t\t const uniforms = cache.get( light );\n \n\t\t\t\t uniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t uniforms.distance = light.distance;\n\t\t\t\t uniforms.decay = light.decay;\n \n\t\t\t\t if ( light.castShadow ) {\n \n\t\t\t\t\t const shadow = light.shadow;\n \n\t\t\t\t\t const shadowUniforms = shadowCache.get( light );\n \n\t\t\t\t\t shadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t shadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t shadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t shadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t shadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t shadowUniforms.shadowCameraFar = shadow.camera.far;\n \n\t\t\t\t\t state.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\t state.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n \n\t\t\t\t\t numPointShadows ++;\n \n\t\t\t\t }\n \n\t\t\t\t state.point[ pointLength ] = uniforms;\n \n\t\t\t\t pointLength ++;\n \n\t\t\t } else if ( light.isHemisphereLight ) {\n \n\t\t\t\t const uniforms = cache.get( light );\n \n\t\t\t\t uniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n \n\t\t\t\t state.hemi[ hemiLength ] = uniforms;\n \n\t\t\t\t hemiLength ++;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( rectAreaLength > 0 ) {\n \n\t\t\t if ( capabilities.isWebGL2 ) {\n \n\t\t\t\t // WebGL 2\n \n\t\t\t\t state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n \n\t\t\t } else {\n \n\t\t\t\t // WebGL 1\n \n\t\t\t\t if ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n \n\t\t\t\t\t state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n \n\t\t\t\t } else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n \n\t\t\t\t\t state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t state.ambient[ 0 ] = r;\n\t\t state.ambient[ 1 ] = g;\n\t\t state.ambient[ 2 ] = b;\n \n\t\t const hash = state.hash;\n \n\t\t if ( hash.directionalLength !== directionalLength ||\n\t\t\t hash.pointLength !== pointLength ||\n\t\t\t hash.spotLength !== spotLength ||\n\t\t\t hash.rectAreaLength !== rectAreaLength ||\n\t\t\t hash.hemiLength !== hemiLength ||\n\t\t\t hash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\t hash.numPointShadows !== numPointShadows ||\n\t\t\t hash.numSpotShadows !== numSpotShadows ) {\n \n\t\t\t state.directional.length = directionalLength;\n\t\t\t state.spot.length = spotLength;\n\t\t\t state.rectArea.length = rectAreaLength;\n\t\t\t state.point.length = pointLength;\n\t\t\t state.hemi.length = hemiLength;\n \n\t\t\t state.directionalShadow.length = numDirectionalShadows;\n\t\t\t state.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t state.pointShadow.length = numPointShadows;\n\t\t\t state.pointShadowMap.length = numPointShadows;\n\t\t\t state.spotShadow.length = numSpotShadows;\n\t\t\t state.spotShadowMap.length = numSpotShadows;\n\t\t\t state.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t state.pointShadowMatrix.length = numPointShadows;\n\t\t\t state.spotShadowMatrix.length = numSpotShadows;\n \n\t\t\t hash.directionalLength = directionalLength;\n\t\t\t hash.pointLength = pointLength;\n\t\t\t hash.spotLength = spotLength;\n\t\t\t hash.rectAreaLength = rectAreaLength;\n\t\t\t hash.hemiLength = hemiLength;\n \n\t\t\t hash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t hash.numPointShadows = numPointShadows;\n\t\t\t hash.numSpotShadows = numSpotShadows;\n \n\t\t\t state.version = nextVersion ++;\n \n\t\t }\n \n\t }\n \n\t function setupView( lights, camera ) {\n \n\t\t let directionalLength = 0;\n\t\t let pointLength = 0;\n\t\t let spotLength = 0;\n\t\t let rectAreaLength = 0;\n\t\t let hemiLength = 0;\n \n\t\t const viewMatrix = camera.matrixWorldInverse;\n \n\t\t for ( let i = 0, l = lights.length; i < l; i ++ ) {\n \n\t\t\t const light = lights[ i ];\n \n\t\t\t if ( light.isDirectionalLight ) {\n \n\t\t\t\t const uniforms = state.directional[ directionalLength ];\n \n\t\t\t\t uniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t uniforms.direction.sub( vector3 );\n\t\t\t\t uniforms.direction.transformDirection( viewMatrix );\n \n\t\t\t\t directionalLength ++;\n \n\t\t\t } else if ( light.isSpotLight ) {\n \n\t\t\t\t const uniforms = state.spot[ spotLength ];\n \n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t uniforms.position.applyMatrix4( viewMatrix );\n \n\t\t\t\t uniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t vector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t uniforms.direction.sub( vector3 );\n\t\t\t\t uniforms.direction.transformDirection( viewMatrix );\n \n\t\t\t\t spotLength ++;\n \n\t\t\t } else if ( light.isRectAreaLight ) {\n \n\t\t\t\t const uniforms = state.rectArea[ rectAreaLength ];\n \n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t uniforms.position.applyMatrix4( viewMatrix );\n \n\t\t\t\t // extract local rotation of light to derive width/height half vectors\n\t\t\t\t matrix42.identity();\n\t\t\t\t matrix4.copy( light.matrixWorld );\n\t\t\t\t matrix4.premultiply( viewMatrix );\n\t\t\t\t matrix42.extractRotation( matrix4 );\n \n\t\t\t\t uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n \n\t\t\t\t uniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t uniforms.halfHeight.applyMatrix4( matrix42 );\n \n\t\t\t\t rectAreaLength ++;\n \n\t\t\t } else if ( light.isPointLight ) {\n \n\t\t\t\t const uniforms = state.point[ pointLength ];\n \n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t uniforms.position.applyMatrix4( viewMatrix );\n \n\t\t\t\t pointLength ++;\n \n\t\t\t } else if ( light.isHemisphereLight ) {\n \n\t\t\t\t const uniforms = state.hemi[ hemiLength ];\n \n\t\t\t\t uniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t uniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t uniforms.direction.normalize();\n \n\t\t\t\t hemiLength ++;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t return {\n\t\t setup: setup,\n\t\t setupView: setupView,\n\t\t state: state\n\t };\n \n }\n \n function WebGLRenderState( extensions, capabilities ) {\n \n\t const lights = new WebGLLights( extensions, capabilities );\n \n\t const lightsArray = [];\n\t const shadowsArray = [];\n \n\t function init() {\n \n\t\t lightsArray.length = 0;\n\t\t shadowsArray.length = 0;\n \n\t }\n \n\t function pushLight( light ) {\n \n\t\t lightsArray.push( light );\n \n\t }\n \n\t function pushShadow( shadowLight ) {\n \n\t\t shadowsArray.push( shadowLight );\n \n\t }\n \n\t function setupLights() {\n \n\t\t lights.setup( lightsArray );\n \n\t }\n \n\t function setupLightsView( camera ) {\n \n\t\t lights.setupView( lightsArray, camera );\n \n\t }\n \n\t const state = {\n\t\t lightsArray: lightsArray,\n\t\t shadowsArray: shadowsArray,\n \n\t\t lights: lights\n\t };\n \n\t return {\n\t\t init: init,\n\t\t state: state,\n\t\t setupLights: setupLights,\n\t\t setupLightsView: setupLightsView,\n \n\t\t pushLight: pushLight,\n\t\t pushShadow: pushShadow\n\t };\n \n }\n \n function WebGLRenderStates( extensions, capabilities ) {\n \n\t let renderStates = new WeakMap();\n \n\t function get( scene, renderCallDepth = 0 ) {\n \n\t\t let renderState;\n \n\t\t if ( renderStates.has( scene ) === false ) {\n \n\t\t\t renderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t renderStates.set( scene, [ renderState ] );\n \n\t\t } else {\n \n\t\t\t if ( renderCallDepth >= renderStates.get( scene ).length ) {\n \n\t\t\t\t renderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\t renderStates.get( scene ).push( renderState );\n \n\t\t\t } else {\n \n\t\t\t\t renderState = renderStates.get( scene )[ renderCallDepth ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t return renderState;\n \n\t }\n \n\t function dispose() {\n \n\t\t renderStates = new WeakMap();\n \n\t }\n \n\t return {\n\t\t get: get,\n\t\t dispose: dispose\n\t };\n \n }\n \n /**\n  * parameters = {\n  *\n  *  opacity: <float>,\n  *\n  *  map: new THREE.Texture( <Image> ),\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  displacementMap: new THREE.Texture( <Image> ),\n  *  displacementScale: <float>,\n  *  displacementBias: <float>,\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>\n  * }\n  */\n \n class MeshDepthMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'MeshDepthMaterial';\n \n\t\t this.depthPacking = BasicDepthPacking;\n \n\t\t this.morphTargets = false;\n \n\t\t this.map = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.displacementMap = null;\n\t\t this.displacementScale = 1;\n\t\t this.displacementBias = 0;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n \n\t\t this.fog = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.depthPacking = source.depthPacking;\n \n\t\t this.morphTargets = source.morphTargets;\n \n\t\t this.map = source.map;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.displacementMap = source.displacementMap;\n\t\t this.displacementScale = source.displacementScale;\n\t\t this.displacementBias = source.displacementBias;\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n \n /**\n  * parameters = {\n  *\n  *  referencePosition: <float>,\n  *  nearDistance: <float>,\n  *  farDistance: <float>,\n  *\n  *  morphTargets: <bool>,\n  *\n  *  map: new THREE.Texture( <Image> ),\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  displacementMap: new THREE.Texture( <Image> ),\n  *  displacementScale: <float>,\n  *  displacementBias: <float>\n  *\n  * }\n  */\n \n class MeshDistanceMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'MeshDistanceMaterial';\n \n\t\t this.referencePosition = new Vector3();\n\t\t this.nearDistance = 1;\n\t\t this.farDistance = 1000;\n \n\t\t this.morphTargets = false;\n \n\t\t this.map = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.displacementMap = null;\n\t\t this.displacementScale = 1;\n\t\t this.displacementBias = 0;\n \n\t\t this.fog = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.referencePosition.copy( source.referencePosition );\n\t\t this.nearDistance = source.nearDistance;\n\t\t this.farDistance = source.farDistance;\n \n\t\t this.morphTargets = source.morphTargets;\n \n\t\t this.map = source.map;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.displacementMap = source.displacementMap;\n\t\t this.displacementScale = source.displacementScale;\n\t\t this.displacementBias = source.displacementBias;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n \n var vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n \n var vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n \n function WebGLShadowMap( _renderer, _objects, _capabilities ) {\n \n\t let _frustum = new Frustum();\n \n\t const _shadowMapSize = new Vector2(),\n\t\t _viewportSize = new Vector2(),\n \n\t\t _viewport = new Vector4(),\n \n\t\t _depthMaterials = [],\n\t\t _distanceMaterials = [],\n \n\t\t _materialCache = {},\n \n\t\t _maxTextureSize = _capabilities.maxTextureSize;\n \n\t const shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n \n\t const shadowMaterialVertical = new ShaderMaterial( {\n \n\t\t defines: {\n\t\t\t SAMPLE_RATE: 2.0 / 8.0,\n\t\t\t HALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t },\n \n\t\t uniforms: {\n\t\t\t shadow_pass: { value: null },\n\t\t\t resolution: { value: new Vector2() },\n\t\t\t radius: { value: 4.0 }\n\t\t },\n \n\t\t vertexShader: vsm_vert,\n \n\t\t fragmentShader: vsm_frag\n \n\t } );\n \n\t const shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n \n\t const fullScreenTri = new BufferGeometry();\n\t fullScreenTri.setAttribute(\n\t\t 'position',\n\t\t new BufferAttribute(\n\t\t\t new Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t 3\n\t\t )\n\t );\n \n\t const fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n \n\t const scope = this;\n \n\t this.enabled = false;\n \n\t this.autoUpdate = true;\n\t this.needsUpdate = false;\n \n\t this.type = PCFShadowMap;\n \n\t this.render = function ( lights, scene, camera ) {\n \n\t\t if ( scope.enabled === false ) return;\n\t\t if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n \n\t\t if ( lights.length === 0 ) return;\n \n\t\t const currentRenderTarget = _renderer.getRenderTarget();\n\t\t const activeCubeFace = _renderer.getActiveCubeFace();\n\t\t const activeMipmapLevel = _renderer.getActiveMipmapLevel();\n \n\t\t const _state = _renderer.state;\n \n\t\t // Set GL state for depth map.\n\t\t _state.setBlending( NoBlending );\n\t\t _state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t _state.buffers.depth.setTest( true );\n\t\t _state.setScissorTest( false );\n \n\t\t // render depth map\n \n\t\t for ( let i = 0, il = lights.length; i < il; i ++ ) {\n \n\t\t\t const light = lights[ i ];\n\t\t\t const shadow = light.shadow;\n \n\t\t\t if ( shadow === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t continue;\n \n\t\t\t }\n \n\t\t\t if ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n \n\t\t\t _shadowMapSize.copy( shadow.mapSize );\n \n\t\t\t const shadowFrameExtents = shadow.getFrameExtents();\n \n\t\t\t _shadowMapSize.multiply( shadowFrameExtents );\n \n\t\t\t _viewportSize.copy( shadow.mapSize );\n \n\t\t\t if ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n \n\t\t\t\t if ( _shadowMapSize.x > _maxTextureSize ) {\n \n\t\t\t\t\t _viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t shadow.mapSize.x = _viewportSize.x;\n \n\t\t\t\t }\n \n\t\t\t\t if ( _shadowMapSize.y > _maxTextureSize ) {\n \n\t\t\t\t\t _viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t shadow.mapSize.y = _viewportSize.y;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n \n\t\t\t\t const pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n \n\t\t\t\t shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t shadow.map.texture.name = light.name + '.shadowMap';\n \n\t\t\t\t shadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n \n\t\t\t\t shadow.camera.updateProjectionMatrix();\n \n\t\t\t }\n \n\t\t\t if ( shadow.map === null ) {\n \n\t\t\t\t const pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n \n\t\t\t\t shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t shadow.map.texture.name = light.name + '.shadowMap';\n \n\t\t\t\t shadow.camera.updateProjectionMatrix();\n \n\t\t\t }\n \n\t\t\t _renderer.setRenderTarget( shadow.map );\n\t\t\t _renderer.clear();\n \n\t\t\t const viewportCount = shadow.getViewportCount();\n \n\t\t\t for ( let vp = 0; vp < viewportCount; vp ++ ) {\n \n\t\t\t\t const viewport = shadow.getViewport( vp );\n \n\t\t\t\t _viewport.set(\n\t\t\t\t\t _viewportSize.x * viewport.x,\n\t\t\t\t\t _viewportSize.y * viewport.y,\n\t\t\t\t\t _viewportSize.x * viewport.z,\n\t\t\t\t\t _viewportSize.y * viewport.w\n\t\t\t\t );\n \n\t\t\t\t _state.viewport( _viewport );\n \n\t\t\t\t shadow.updateMatrices( light, vp );\n \n\t\t\t\t _frustum = shadow.getFrustum();\n \n\t\t\t\t renderObject( scene, camera, shadow.camera, light, this.type );\n \n\t\t\t }\n \n\t\t\t // do blur pass for VSM\n \n\t\t\t if ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n \n\t\t\t\t VSMPass( shadow, camera );\n \n\t\t\t }\n \n\t\t\t shadow.needsUpdate = false;\n \n\t\t }\n \n\t\t scope.needsUpdate = false;\n \n\t\t _renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n \n\t };\n \n\t function VSMPass( shadow, camera ) {\n \n\t\t const geometry = _objects.update( fullScreenMesh );\n \n\t\t // vertical pass\n \n\t\t shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t _renderer.setRenderTarget( shadow.mapPass );\n\t\t _renderer.clear();\n\t\t _renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n \n\t\t // horizontal pass\n \n\t\t shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t _renderer.setRenderTarget( shadow.map );\n\t\t _renderer.clear();\n\t\t _renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n \n\t }\n \n\t function getDepthMaterialVariant( useMorphing ) {\n \n\t\t const index = useMorphing << 0;\n \n\t\t let material = _depthMaterials[ index ];\n \n\t\t if ( material === undefined ) {\n \n\t\t\t material = new MeshDepthMaterial( {\n \n\t\t\t\t depthPacking: RGBADepthPacking,\n \n\t\t\t\t morphTargets: useMorphing\n \n\t\t\t } );\n \n\t\t\t _depthMaterials[ index ] = material;\n \n\t\t }\n \n\t\t return material;\n \n\t }\n \n\t function getDistanceMaterialVariant( useMorphing ) {\n \n\t\t const index = useMorphing << 0;\n \n\t\t let material = _distanceMaterials[ index ];\n \n\t\t if ( material === undefined ) {\n \n\t\t\t material = new MeshDistanceMaterial( {\n \n\t\t\t\t morphTargets: useMorphing\n \n\t\t\t } );\n \n\t\t\t _distanceMaterials[ index ] = material;\n \n\t\t }\n \n\t\t return material;\n \n\t }\n \n\t function getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n \n\t\t let result = null;\n \n\t\t let getMaterialVariant = getDepthMaterialVariant;\n\t\t let customMaterial = object.customDepthMaterial;\n \n\t\t if ( light.isPointLight === true ) {\n \n\t\t\t getMaterialVariant = getDistanceMaterialVariant;\n\t\t\t customMaterial = object.customDistanceMaterial;\n \n\t\t }\n \n\t\t if ( customMaterial === undefined ) {\n \n\t\t\t let useMorphing = false;\n \n\t\t\t if ( material.morphTargets === true ) {\n \n\t\t\t\t useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n \n\t\t\t }\n \n\t\t\t result = getMaterialVariant( useMorphing );\n \n\t\t } else {\n \n\t\t\t result = customMaterial;\n \n\t\t }\n \n\t\t if ( _renderer.localClippingEnabled &&\n\t\t\t\t material.clipShadows === true &&\n\t\t\t\t material.clippingPlanes.length !== 0 ) {\n \n\t\t\t // in this case we need a unique material instance reflecting the\n\t\t\t // appropriate state\n \n\t\t\t const keyA = result.uuid, keyB = material.uuid;\n \n\t\t\t let materialsForVariant = _materialCache[ keyA ];\n \n\t\t\t if ( materialsForVariant === undefined ) {\n \n\t\t\t\t materialsForVariant = {};\n\t\t\t\t _materialCache[ keyA ] = materialsForVariant;\n \n\t\t\t }\n \n\t\t\t let cachedMaterial = materialsForVariant[ keyB ];\n \n\t\t\t if ( cachedMaterial === undefined ) {\n \n\t\t\t\t cachedMaterial = result.clone();\n\t\t\t\t materialsForVariant[ keyB ] = cachedMaterial;\n \n\t\t\t }\n \n\t\t\t result = cachedMaterial;\n \n\t\t }\n \n\t\t result.visible = material.visible;\n\t\t result.wireframe = material.wireframe;\n \n\t\t if ( type === VSMShadowMap ) {\n \n\t\t\t result.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n \n\t\t } else {\n \n\t\t\t result.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n \n\t\t }\n \n\t\t result.clipShadows = material.clipShadows;\n\t\t result.clippingPlanes = material.clippingPlanes;\n\t\t result.clipIntersection = material.clipIntersection;\n \n\t\t result.wireframeLinewidth = material.wireframeLinewidth;\n\t\t result.linewidth = material.linewidth;\n \n\t\t if ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n \n\t\t\t result.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\t result.nearDistance = shadowCameraNear;\n\t\t\t result.farDistance = shadowCameraFar;\n \n\t\t }\n \n\t\t return result;\n \n\t }\n \n\t function renderObject( object, camera, shadowCamera, light, type ) {\n \n\t\t if ( object.visible === false ) return;\n \n\t\t const visible = object.layers.test( camera.layers );\n \n\t\t if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n \n\t\t\t if ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n \n\t\t\t\t object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n \n\t\t\t\t const geometry = _objects.update( object );\n\t\t\t\t const material = object.material;\n \n\t\t\t\t if ( Array.isArray( material ) ) {\n \n\t\t\t\t\t const groups = geometry.groups;\n \n\t\t\t\t\t for ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n \n\t\t\t\t\t\t const group = groups[ k ];\n\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\n \n\t\t\t\t\t\t if ( groupMaterial && groupMaterial.visible ) {\n \n\t\t\t\t\t\t\t const depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n \n\t\t\t\t\t\t\t _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t } else if ( material.visible ) {\n \n\t\t\t\t\t const depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n \n\t\t\t\t\t _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t const children = object.children;\n \n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t renderObject( children[ i ], camera, shadowCamera, light, type );\n \n\t\t }\n \n\t }\n \n }\n \n function WebGLState( gl, extensions, capabilities ) {\n \n\t const isWebGL2 = capabilities.isWebGL2;\n \n\t function ColorBuffer() {\n \n\t\t let locked = false;\n \n\t\t const color = new Vector4();\n\t\t let currentColorMask = null;\n\t\t const currentColorClear = new Vector4( 0, 0, 0, 0 );\n \n\t\t return {\n \n\t\t\t setMask: function ( colorMask ) {\n \n\t\t\t\t if ( currentColorMask !== colorMask && ! locked ) {\n \n\t\t\t\t\t gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t currentColorMask = colorMask;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setLocked: function ( lock ) {\n \n\t\t\t\t locked = lock;\n \n\t\t\t },\n \n\t\t\t setClear: function ( r, g, b, a, premultipliedAlpha ) {\n \n\t\t\t\t if ( premultipliedAlpha === true ) {\n \n\t\t\t\t\t r *= a; g *= a; b *= a;\n \n\t\t\t\t }\n \n\t\t\t\t color.set( r, g, b, a );\n \n\t\t\t\t if ( currentColorClear.equals( color ) === false ) {\n \n\t\t\t\t\t gl.clearColor( r, g, b, a );\n\t\t\t\t\t currentColorClear.copy( color );\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t reset: function () {\n \n\t\t\t\t locked = false;\n \n\t\t\t\t currentColorMask = null;\n\t\t\t\t currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n \n\t\t\t }\n \n\t\t };\n \n\t }\n \n\t function DepthBuffer() {\n \n\t\t let locked = false;\n \n\t\t let currentDepthMask = null;\n\t\t let currentDepthFunc = null;\n\t\t let currentDepthClear = null;\n \n\t\t return {\n \n\t\t\t setTest: function ( depthTest ) {\n \n\t\t\t\t if ( depthTest ) {\n \n\t\t\t\t\t enable( 2929 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t disable( 2929 );\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setMask: function ( depthMask ) {\n \n\t\t\t\t if ( currentDepthMask !== depthMask && ! locked ) {\n \n\t\t\t\t\t gl.depthMask( depthMask );\n\t\t\t\t\t currentDepthMask = depthMask;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setFunc: function ( depthFunc ) {\n \n\t\t\t\t if ( currentDepthFunc !== depthFunc ) {\n \n\t\t\t\t\t if ( depthFunc ) {\n \n\t\t\t\t\t\t switch ( depthFunc ) {\n \n\t\t\t\t\t\t\t case NeverDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 512 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case AlwaysDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 519 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case LessDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 513 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case LessEqualDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 515 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case EqualDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 514 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case GreaterEqualDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 518 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case GreaterDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 516 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t case NotEqualDepth:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 517 );\n\t\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t\t default:\n \n\t\t\t\t\t\t\t\t gl.depthFunc( 515 );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t gl.depthFunc( 515 );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t currentDepthFunc = depthFunc;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setLocked: function ( lock ) {\n \n\t\t\t\t locked = lock;\n \n\t\t\t },\n \n\t\t\t setClear: function ( depth ) {\n \n\t\t\t\t if ( currentDepthClear !== depth ) {\n \n\t\t\t\t\t gl.clearDepth( depth );\n\t\t\t\t\t currentDepthClear = depth;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t reset: function () {\n \n\t\t\t\t locked = false;\n \n\t\t\t\t currentDepthMask = null;\n\t\t\t\t currentDepthFunc = null;\n\t\t\t\t currentDepthClear = null;\n \n\t\t\t }\n \n\t\t };\n \n\t }\n \n\t function StencilBuffer() {\n \n\t\t let locked = false;\n \n\t\t let currentStencilMask = null;\n\t\t let currentStencilFunc = null;\n\t\t let currentStencilRef = null;\n\t\t let currentStencilFuncMask = null;\n\t\t let currentStencilFail = null;\n\t\t let currentStencilZFail = null;\n\t\t let currentStencilZPass = null;\n\t\t let currentStencilClear = null;\n \n\t\t return {\n \n\t\t\t setTest: function ( stencilTest ) {\n \n\t\t\t\t if ( ! locked ) {\n \n\t\t\t\t\t if ( stencilTest ) {\n \n\t\t\t\t\t\t enable( 2960 );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t disable( 2960 );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setMask: function ( stencilMask ) {\n \n\t\t\t\t if ( currentStencilMask !== stencilMask && ! locked ) {\n \n\t\t\t\t\t gl.stencilMask( stencilMask );\n\t\t\t\t\t currentStencilMask = stencilMask;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n \n\t\t\t\t if ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t  currentStencilRef !== stencilRef ||\n\t\t\t\t\t  currentStencilFuncMask !== stencilMask ) {\n \n\t\t\t\t\t gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n \n\t\t\t\t\t currentStencilFunc = stencilFunc;\n\t\t\t\t\t currentStencilRef = stencilRef;\n\t\t\t\t\t currentStencilFuncMask = stencilMask;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n \n\t\t\t\t if ( currentStencilFail !== stencilFail ||\n\t\t\t\t\t  currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t  currentStencilZPass !== stencilZPass ) {\n \n\t\t\t\t\t gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n \n\t\t\t\t\t currentStencilFail = stencilFail;\n\t\t\t\t\t currentStencilZFail = stencilZFail;\n\t\t\t\t\t currentStencilZPass = stencilZPass;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t setLocked: function ( lock ) {\n \n\t\t\t\t locked = lock;\n \n\t\t\t },\n \n\t\t\t setClear: function ( stencil ) {\n \n\t\t\t\t if ( currentStencilClear !== stencil ) {\n \n\t\t\t\t\t gl.clearStencil( stencil );\n\t\t\t\t\t currentStencilClear = stencil;\n \n\t\t\t\t }\n \n\t\t\t },\n \n\t\t\t reset: function () {\n \n\t\t\t\t locked = false;\n \n\t\t\t\t currentStencilMask = null;\n\t\t\t\t currentStencilFunc = null;\n\t\t\t\t currentStencilRef = null;\n\t\t\t\t currentStencilFuncMask = null;\n\t\t\t\t currentStencilFail = null;\n\t\t\t\t currentStencilZFail = null;\n\t\t\t\t currentStencilZPass = null;\n\t\t\t\t currentStencilClear = null;\n \n\t\t\t }\n \n\t\t };\n \n\t }\n \n\t //\n \n\t const colorBuffer = new ColorBuffer();\n\t const depthBuffer = new DepthBuffer();\n\t const stencilBuffer = new StencilBuffer();\n \n\t let enabledCapabilities = {};\n \n\t let xrFramebuffer = null;\n\t let currentBoundFramebuffers = {};\n \n\t let currentProgram = null;\n \n\t let currentBlendingEnabled = false;\n\t let currentBlending = null;\n\t let currentBlendEquation = null;\n\t let currentBlendSrc = null;\n\t let currentBlendDst = null;\n\t let currentBlendEquationAlpha = null;\n\t let currentBlendSrcAlpha = null;\n\t let currentBlendDstAlpha = null;\n\t let currentPremultipledAlpha = false;\n \n\t let currentFlipSided = null;\n\t let currentCullFace = null;\n \n\t let currentLineWidth = null;\n \n\t let currentPolygonOffsetFactor = null;\n\t let currentPolygonOffsetUnits = null;\n \n\t const maxTextures = gl.getParameter( 35661 );\n \n\t let lineWidthAvailable = false;\n\t let version = 0;\n\t const glVersion = gl.getParameter( 7938 );\n \n\t if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n \n\t\t version = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\t lineWidthAvailable = ( version >= 1.0 );\n \n\t } else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n \n\t\t version = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\t lineWidthAvailable = ( version >= 2.0 );\n \n\t }\n \n\t let currentTextureSlot = null;\n\t let currentBoundTextures = {};\n \n\t const scissorParam = gl.getParameter( 3088 );\n\t const viewportParam = gl.getParameter( 2978 );\n \n\t const currentScissor = new Vector4().fromArray( scissorParam );\n\t const currentViewport = new Vector4().fromArray( viewportParam );\n \n\t function createTexture( type, target, count ) {\n \n\t\t const data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t const texture = gl.createTexture();\n \n\t\t gl.bindTexture( type, texture );\n\t\t gl.texParameteri( type, 10241, 9728 );\n\t\t gl.texParameteri( type, 10240, 9728 );\n \n\t\t for ( let i = 0; i < count; i ++ ) {\n \n\t\t\t gl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n \n\t\t }\n \n\t\t return texture;\n \n\t }\n \n\t const emptyTextures = {};\n\t emptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\t emptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n \n\t // init\n \n\t colorBuffer.setClear( 0, 0, 0, 1 );\n\t depthBuffer.setClear( 1 );\n\t stencilBuffer.setClear( 0 );\n \n\t enable( 2929 );\n\t depthBuffer.setFunc( LessEqualDepth );\n \n\t setFlipSided( false );\n\t setCullFace( CullFaceBack );\n\t enable( 2884 );\n \n\t setBlending( NoBlending );\n \n\t //\n \n\t function enable( id ) {\n \n\t\t if ( enabledCapabilities[ id ] !== true ) {\n \n\t\t\t gl.enable( id );\n\t\t\t enabledCapabilities[ id ] = true;\n \n\t\t }\n \n\t }\n \n\t function disable( id ) {\n \n\t\t if ( enabledCapabilities[ id ] !== false ) {\n \n\t\t\t gl.disable( id );\n\t\t\t enabledCapabilities[ id ] = false;\n \n\t\t }\n \n\t }\n \n\t function bindXRFramebuffer( framebuffer ) {\n \n\t\t if ( framebuffer !== xrFramebuffer ) {\n \n\t\t\t gl.bindFramebuffer( 36160, framebuffer );\n \n\t\t\t xrFramebuffer = framebuffer;\n \n\t\t }\n \n\t }\n \n\t function bindFramebuffer( target, framebuffer ) {\n \n\t\t if ( framebuffer === null && xrFramebuffer !== null ) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n \n\t\t if ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n \n\t\t\t gl.bindFramebuffer( target, framebuffer );\n \n\t\t\t currentBoundFramebuffers[ target ] = framebuffer;\n \n\t\t\t if ( isWebGL2 ) {\n \n\t\t\t\t // 36009 is equivalent to 36160\n \n\t\t\t\t if ( target === 36009 ) {\n \n\t\t\t\t\t currentBoundFramebuffers[ 36160 ] = framebuffer;\n \n\t\t\t\t }\n \n\t\t\t\t if ( target === 36160 ) {\n \n\t\t\t\t\t currentBoundFramebuffers[ 36009 ] = framebuffer;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t return true;\n \n\t\t }\n \n\t\t return false;\n \n\t }\n \n\t function useProgram( program ) {\n \n\t\t if ( currentProgram !== program ) {\n \n\t\t\t gl.useProgram( program );\n \n\t\t\t currentProgram = program;\n \n\t\t\t return true;\n \n\t\t }\n \n\t\t return false;\n \n\t }\n \n\t const equationToGL = {\n\t\t [ AddEquation ]: 32774,\n\t\t [ SubtractEquation ]: 32778,\n\t\t [ ReverseSubtractEquation ]: 32779\n\t };\n \n\t if ( isWebGL2 ) {\n \n\t\t equationToGL[ MinEquation ] = 32775;\n\t\t equationToGL[ MaxEquation ] = 32776;\n \n\t } else {\n \n\t\t const extension = extensions.get( 'EXT_blend_minmax' );\n \n\t\t if ( extension !== null ) {\n \n\t\t\t equationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\t equationToGL[ MaxEquation ] = extension.MAX_EXT;\n \n\t\t }\n \n\t }\n \n\t const factorToGL = {\n\t\t [ ZeroFactor ]: 0,\n\t\t [ OneFactor ]: 1,\n\t\t [ SrcColorFactor ]: 768,\n\t\t [ SrcAlphaFactor ]: 770,\n\t\t [ SrcAlphaSaturateFactor ]: 776,\n\t\t [ DstColorFactor ]: 774,\n\t\t [ DstAlphaFactor ]: 772,\n\t\t [ OneMinusSrcColorFactor ]: 769,\n\t\t [ OneMinusSrcAlphaFactor ]: 771,\n\t\t [ OneMinusDstColorFactor ]: 775,\n\t\t [ OneMinusDstAlphaFactor ]: 773\n\t };\n \n\t function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n \n\t\t if ( blending === NoBlending ) {\n \n\t\t\t if ( currentBlendingEnabled === true ) {\n \n\t\t\t\t disable( 3042 );\n\t\t\t\t currentBlendingEnabled = false;\n \n\t\t\t }\n \n\t\t\t return;\n \n\t\t }\n \n\t\t if ( currentBlendingEnabled === false ) {\n \n\t\t\t enable( 3042 );\n\t\t\t currentBlendingEnabled = true;\n \n\t\t }\n \n\t\t if ( blending !== CustomBlending ) {\n \n\t\t\t if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n \n\t\t\t\t if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n \n\t\t\t\t\t gl.blendEquation( 32774 );\n \n\t\t\t\t\t currentBlendEquation = AddEquation;\n\t\t\t\t\t currentBlendEquationAlpha = AddEquation;\n \n\t\t\t\t }\n \n\t\t\t\t if ( premultipliedAlpha ) {\n \n\t\t\t\t\t switch ( blending ) {\n \n\t\t\t\t\t\t case NormalBlending:\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t case AdditiveBlending:\n\t\t\t\t\t\t\t gl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t case SubtractiveBlending:\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t case MultiplyBlending:\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t default:\n\t\t\t\t\t\t\t console.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t switch ( blending ) {\n \n\t\t\t\t\t\t case NormalBlending:\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t case AdditiveBlending:\n\t\t\t\t\t\t\t gl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t case SubtractiveBlending:\n\t\t\t\t\t\t\t gl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t case MultiplyBlending:\n\t\t\t\t\t\t\t gl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t default:\n\t\t\t\t\t\t\t console.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t currentBlendSrc = null;\n\t\t\t\t currentBlendDst = null;\n\t\t\t\t currentBlendSrcAlpha = null;\n\t\t\t\t currentBlendDstAlpha = null;\n \n\t\t\t\t currentBlending = blending;\n\t\t\t\t currentPremultipledAlpha = premultipliedAlpha;\n \n\t\t\t }\n \n\t\t\t return;\n \n\t\t }\n \n\t\t // custom blending\n \n\t\t blendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t blendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t blendDstAlpha = blendDstAlpha || blendDst;\n \n\t\t if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n \n\t\t\t gl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n \n\t\t\t currentBlendEquation = blendEquation;\n\t\t\t currentBlendEquationAlpha = blendEquationAlpha;\n \n\t\t }\n \n\t\t if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n \n\t\t\t gl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n \n\t\t\t currentBlendSrc = blendSrc;\n\t\t\t currentBlendDst = blendDst;\n\t\t\t currentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t currentBlendDstAlpha = blendDstAlpha;\n \n\t\t }\n \n\t\t currentBlending = blending;\n\t\t currentPremultipledAlpha = null;\n \n\t }\n \n\t function setMaterial( material, frontFaceCW ) {\n \n\t\t material.side === DoubleSide\n\t\t\t ? disable( 2884 )\n\t\t\t : enable( 2884 );\n \n\t\t let flipSided = ( material.side === BackSide );\n\t\t if ( frontFaceCW ) flipSided = ! flipSided;\n \n\t\t setFlipSided( flipSided );\n \n\t\t ( material.blending === NormalBlending && material.transparent === false )\n\t\t\t ? setBlending( NoBlending )\n\t\t\t : setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n \n\t\t depthBuffer.setFunc( material.depthFunc );\n\t\t depthBuffer.setTest( material.depthTest );\n\t\t depthBuffer.setMask( material.depthWrite );\n\t\t colorBuffer.setMask( material.colorWrite );\n \n\t\t const stencilWrite = material.stencilWrite;\n\t\t stencilBuffer.setTest( stencilWrite );\n\t\t if ( stencilWrite ) {\n \n\t\t\t stencilBuffer.setMask( material.stencilWriteMask );\n\t\t\t stencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\t stencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n \n\t\t }\n \n\t\t setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n \n\t\t material.alphaToCoverage === true\n\t\t\t ? enable( 32926 )\n\t\t\t : disable( 32926 );\n \n\t }\n \n\t //\n \n\t function setFlipSided( flipSided ) {\n \n\t\t if ( currentFlipSided !== flipSided ) {\n \n\t\t\t if ( flipSided ) {\n \n\t\t\t\t gl.frontFace( 2304 );\n \n\t\t\t } else {\n \n\t\t\t\t gl.frontFace( 2305 );\n \n\t\t\t }\n \n\t\t\t currentFlipSided = flipSided;\n \n\t\t }\n \n\t }\n \n\t function setCullFace( cullFace ) {\n \n\t\t if ( cullFace !== CullFaceNone ) {\n \n\t\t\t enable( 2884 );\n \n\t\t\t if ( cullFace !== currentCullFace ) {\n \n\t\t\t\t if ( cullFace === CullFaceBack ) {\n \n\t\t\t\t\t gl.cullFace( 1029 );\n \n\t\t\t\t } else if ( cullFace === CullFaceFront ) {\n \n\t\t\t\t\t gl.cullFace( 1028 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t gl.cullFace( 1032 );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t disable( 2884 );\n \n\t\t }\n \n\t\t currentCullFace = cullFace;\n \n\t }\n \n\t function setLineWidth( width ) {\n \n\t\t if ( width !== currentLineWidth ) {\n \n\t\t\t if ( lineWidthAvailable ) gl.lineWidth( width );\n \n\t\t\t currentLineWidth = width;\n \n\t\t }\n \n\t }\n \n\t function setPolygonOffset( polygonOffset, factor, units ) {\n \n\t\t if ( polygonOffset ) {\n \n\t\t\t enable( 32823 );\n \n\t\t\t if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n \n\t\t\t\t gl.polygonOffset( factor, units );\n \n\t\t\t\t currentPolygonOffsetFactor = factor;\n\t\t\t\t currentPolygonOffsetUnits = units;\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t disable( 32823 );\n \n\t\t }\n \n\t }\n \n\t function setScissorTest( scissorTest ) {\n \n\t\t if ( scissorTest ) {\n \n\t\t\t enable( 3089 );\n \n\t\t } else {\n \n\t\t\t disable( 3089 );\n \n\t\t }\n \n\t }\n \n\t // texture\n \n\t function activeTexture( webglSlot ) {\n \n\t\t if ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n \n\t\t if ( currentTextureSlot !== webglSlot ) {\n \n\t\t\t gl.activeTexture( webglSlot );\n\t\t\t currentTextureSlot = webglSlot;\n \n\t\t }\n \n\t }\n \n\t function bindTexture( webglType, webglTexture ) {\n \n\t\t if ( currentTextureSlot === null ) {\n \n\t\t\t activeTexture();\n \n\t\t }\n \n\t\t let boundTexture = currentBoundTextures[ currentTextureSlot ];\n \n\t\t if ( boundTexture === undefined ) {\n \n\t\t\t boundTexture = { type: undefined, texture: undefined };\n\t\t\t currentBoundTextures[ currentTextureSlot ] = boundTexture;\n \n\t\t }\n \n\t\t if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n \n\t\t\t gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n \n\t\t\t boundTexture.type = webglType;\n\t\t\t boundTexture.texture = webglTexture;\n \n\t\t }\n \n\t }\n \n\t function unbindTexture() {\n \n\t\t const boundTexture = currentBoundTextures[ currentTextureSlot ];\n \n\t\t if ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n \n\t\t\t gl.bindTexture( boundTexture.type, null );\n \n\t\t\t boundTexture.type = undefined;\n\t\t\t boundTexture.texture = undefined;\n \n\t\t }\n \n\t }\n \n\t function compressedTexImage2D() {\n \n\t\t try {\n \n\t\t\t gl.compressedTexImage2D.apply( gl, arguments );\n \n\t\t } catch ( error ) {\n \n\t\t\t console.error( 'THREE.WebGLState:', error );\n \n\t\t }\n \n\t }\n \n\t function texImage2D() {\n \n\t\t try {\n \n\t\t\t gl.texImage2D.apply( gl, arguments );\n \n\t\t } catch ( error ) {\n \n\t\t\t console.error( 'THREE.WebGLState:', error );\n \n\t\t }\n \n\t }\n \n\t function texImage3D() {\n \n\t\t try {\n \n\t\t\t gl.texImage3D.apply( gl, arguments );\n \n\t\t } catch ( error ) {\n \n\t\t\t console.error( 'THREE.WebGLState:', error );\n \n\t\t }\n \n\t }\n \n\t //\n \n\t function scissor( scissor ) {\n \n\t\t if ( currentScissor.equals( scissor ) === false ) {\n \n\t\t\t gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t currentScissor.copy( scissor );\n \n\t\t }\n \n\t }\n \n\t function viewport( viewport ) {\n \n\t\t if ( currentViewport.equals( viewport ) === false ) {\n \n\t\t\t gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t currentViewport.copy( viewport );\n \n\t\t }\n \n\t }\n \n\t //\n \n\t function reset() {\n \n\t\t // reset state\n \n\t\t gl.disable( 3042 );\n\t\t gl.disable( 2884 );\n\t\t gl.disable( 2929 );\n\t\t gl.disable( 32823 );\n\t\t gl.disable( 3089 );\n\t\t gl.disable( 2960 );\n\t\t gl.disable( 32926 );\n \n\t\t gl.blendEquation( 32774 );\n\t\t gl.blendFunc( 1, 0 );\n\t\t gl.blendFuncSeparate( 1, 0, 1, 0 );\n \n\t\t gl.colorMask( true, true, true, true );\n\t\t gl.clearColor( 0, 0, 0, 0 );\n \n\t\t gl.depthMask( true );\n\t\t gl.depthFunc( 513 );\n\t\t gl.clearDepth( 1 );\n \n\t\t gl.stencilMask( 0xffffffff );\n\t\t gl.stencilFunc( 519, 0, 0xffffffff );\n\t\t gl.stencilOp( 7680, 7680, 7680 );\n\t\t gl.clearStencil( 0 );\n \n\t\t gl.cullFace( 1029 );\n\t\t gl.frontFace( 2305 );\n \n\t\t gl.polygonOffset( 0, 0 );\n \n\t\t gl.activeTexture( 33984 );\n \n\t\t gl.bindFramebuffer( 36160, null );\n \n\t\t if ( isWebGL2 === true ) {\n \n\t\t\t gl.bindFramebuffer( 36009, null );\n\t\t\t gl.bindFramebuffer( 36008, null );\n \n\t\t }\n \n\t\t gl.useProgram( null );\n \n\t\t gl.lineWidth( 1 );\n \n\t\t gl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\t gl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n \n\t\t // reset internals\n \n\t\t enabledCapabilities = {};\n \n\t\t currentTextureSlot = null;\n\t\t currentBoundTextures = {};\n \n\t\t xrFramebuffer = null;\n\t\t currentBoundFramebuffers = {};\n \n\t\t currentProgram = null;\n \n\t\t currentBlendingEnabled = false;\n\t\t currentBlending = null;\n\t\t currentBlendEquation = null;\n\t\t currentBlendSrc = null;\n\t\t currentBlendDst = null;\n\t\t currentBlendEquationAlpha = null;\n\t\t currentBlendSrcAlpha = null;\n\t\t currentBlendDstAlpha = null;\n\t\t currentPremultipledAlpha = false;\n \n\t\t currentFlipSided = null;\n\t\t currentCullFace = null;\n \n\t\t currentLineWidth = null;\n \n\t\t currentPolygonOffsetFactor = null;\n\t\t currentPolygonOffsetUnits = null;\n \n\t\t currentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\t currentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n \n\t\t colorBuffer.reset();\n\t\t depthBuffer.reset();\n\t\t stencilBuffer.reset();\n \n\t }\n \n\t return {\n \n\t\t buffers: {\n\t\t\t color: colorBuffer,\n\t\t\t depth: depthBuffer,\n\t\t\t stencil: stencilBuffer\n\t\t },\n \n\t\t enable: enable,\n\t\t disable: disable,\n \n\t\t bindFramebuffer: bindFramebuffer,\n\t\t bindXRFramebuffer: bindXRFramebuffer,\n \n\t\t useProgram: useProgram,\n \n\t\t setBlending: setBlending,\n\t\t setMaterial: setMaterial,\n \n\t\t setFlipSided: setFlipSided,\n\t\t setCullFace: setCullFace,\n \n\t\t setLineWidth: setLineWidth,\n\t\t setPolygonOffset: setPolygonOffset,\n \n\t\t setScissorTest: setScissorTest,\n \n\t\t activeTexture: activeTexture,\n\t\t bindTexture: bindTexture,\n\t\t unbindTexture: unbindTexture,\n\t\t compressedTexImage2D: compressedTexImage2D,\n\t\t texImage2D: texImage2D,\n\t\t texImage3D: texImage3D,\n \n\t\t scissor: scissor,\n\t\t viewport: viewport,\n \n\t\t reset: reset\n \n\t };\n \n }\n \n function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n \n\t const isWebGL2 = capabilities.isWebGL2;\n\t const maxTextures = capabilities.maxTextures;\n\t const maxCubemapSize = capabilities.maxCubemapSize;\n\t const maxTextureSize = capabilities.maxTextureSize;\n\t const maxSamples = capabilities.maxSamples;\n \n\t const _videoTextures = new WeakMap();\n\t let _canvas;\n \n\t // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n \n\t let useOffscreenCanvas = false;\n \n\t try {\n \n\t\t useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t && ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n \n\t } catch ( err ) {\n \n\t\t // Ignore any errors\n \n\t }\n \n\t function createCanvas( width, height ) {\n \n\t\t // Use OffscreenCanvas when available. Specially needed in web workers\n \n\t\t return useOffscreenCanvas ?\n\t\t\t new OffscreenCanvas( width, height ) :\n\t\t\t document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n \n\t }\n \n\t function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n \n\t\t let scale = 1;\n \n\t\t // handle case if texture exceeds max size\n \n\t\t if ( image.width > maxSize || image.height > maxSize ) {\n \n\t\t\t scale = maxSize / Math.max( image.width, image.height );\n \n\t\t }\n \n\t\t // only perform resize if necessary\n \n\t\t if ( scale < 1 || needsPowerOfTwo === true ) {\n \n\t\t\t // only perform resize for certain image types\n \n\t\t\t if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n \n\t\t\t\t const floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n \n\t\t\t\t const width = floor( scale * image.width );\n\t\t\t\t const height = floor( scale * image.height );\n \n\t\t\t\t if ( _canvas === undefined ) _canvas = createCanvas( width, height );\n \n\t\t\t\t // cube textures can't reuse the same canvas\n \n\t\t\t\t const canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n \n\t\t\t\t canvas.width = width;\n\t\t\t\t canvas.height = height;\n \n\t\t\t\t const context = canvas.getContext( '2d' );\n\t\t\t\t context.drawImage( image, 0, 0, width, height );\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n \n\t\t\t\t return canvas;\n \n\t\t\t } else {\n \n\t\t\t\t if ( 'data' in image ) {\n \n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n \n\t\t\t\t }\n \n\t\t\t\t return image;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return image;\n \n\t }\n \n\t function isPowerOfTwo$1( image ) {\n \n\t\t return isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n \n\t }\n \n\t function textureNeedsPowerOfTwo( texture ) {\n \n\t\t if ( isWebGL2 ) return false;\n \n\t\t return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n \n\t }\n \n\t function textureNeedsGenerateMipmaps( texture, supportsMips ) {\n \n\t\t return texture.generateMipmaps && supportsMips &&\n\t\t\t texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n \n\t }\n \n\t function generateMipmap( target, texture, width, height ) {\n \n\t\t _gl.generateMipmap( target );\n \n\t\t const textureProperties = properties.get( texture );\n \n\t\t textureProperties.__maxMipLevel = Math.log2( Math.max( width, height ) );\n \n\t }\n \n\t function getInternalFormat( internalFormatName, glFormat, glType ) {\n \n\t\t if ( isWebGL2 === false ) return glFormat;\n \n\t\t if ( internalFormatName !== null ) {\n \n\t\t\t if ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n \n\t\t }\n \n\t\t let internalFormat = glFormat;\n \n\t\t if ( glFormat === 6403 ) {\n \n\t\t\t if ( glType === 5126 ) internalFormat = 33326;\n\t\t\t if ( glType === 5131 ) internalFormat = 33325;\n\t\t\t if ( glType === 5121 ) internalFormat = 33321;\n \n\t\t }\n \n\t\t if ( glFormat === 6407 ) {\n \n\t\t\t if ( glType === 5126 ) internalFormat = 34837;\n\t\t\t if ( glType === 5131 ) internalFormat = 34843;\n\t\t\t if ( glType === 5121 ) internalFormat = 32849;\n \n\t\t }\n \n\t\t if ( glFormat === 6408 ) {\n \n\t\t\t if ( glType === 5126 ) internalFormat = 34836;\n\t\t\t if ( glType === 5131 ) internalFormat = 34842;\n\t\t\t if ( glType === 5121 ) internalFormat = 32856;\n \n\t\t }\n \n\t\t if ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\t internalFormat === 34842 || internalFormat === 34836 ) {\n \n\t\t\t extensions.get( 'EXT_color_buffer_float' );\n \n\t\t }\n \n\t\t return internalFormat;\n \n\t }\n \n\t // Fallback filters for non-power-of-2 textures\n \n\t function filterFallback( f ) {\n \n\t\t if ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n \n\t\t\t return 9728;\n \n\t\t }\n \n\t\t return 9729;\n \n\t }\n \n\t //\n \n\t function onTextureDispose( event ) {\n \n\t\t const texture = event.target;\n \n\t\t texture.removeEventListener( 'dispose', onTextureDispose );\n \n\t\t deallocateTexture( texture );\n \n\t\t if ( texture.isVideoTexture ) {\n \n\t\t\t _videoTextures.delete( texture );\n \n\t\t }\n \n\t\t info.memory.textures --;\n \n\t }\n \n\t function onRenderTargetDispose( event ) {\n \n\t\t const renderTarget = event.target;\n \n\t\t renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n \n\t\t deallocateRenderTarget( renderTarget );\n \n\t }\n \n\t //\n \n\t function deallocateTexture( texture ) {\n \n\t\t const textureProperties = properties.get( texture );\n \n\t\t if ( textureProperties.__webglInit === undefined ) return;\n \n\t\t _gl.deleteTexture( textureProperties.__webglTexture );\n \n\t\t properties.remove( texture );\n \n\t }\n \n\t function deallocateRenderTarget( renderTarget ) {\n \n\t\t const texture = renderTarget.texture;\n \n\t\t const renderTargetProperties = properties.get( renderTarget );\n\t\t const textureProperties = properties.get( texture );\n \n\t\t if ( ! renderTarget ) return;\n \n\t\t if ( textureProperties.__webglTexture !== undefined ) {\n \n\t\t\t _gl.deleteTexture( textureProperties.__webglTexture );\n \n\t\t\t info.memory.textures --;\n \n\t\t }\n \n\t\t if ( renderTarget.depthTexture ) {\n \n\t\t\t renderTarget.depthTexture.dispose();\n \n\t\t }\n \n\t\t if ( renderTarget.isWebGLCubeRenderTarget ) {\n \n\t\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t\t _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\t if ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t if ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t if ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n \n\t\t }\n \n\t\t if ( renderTarget.isWebGLMultipleRenderTargets ) {\n \n\t\t\t for ( let i = 0, il = texture.length; i < il; i ++ ) {\n \n\t\t\t\t const attachmentProperties = properties.get( texture[ i ] );\n \n\t\t\t\t if ( attachmentProperties.__webglTexture ) {\n \n\t\t\t\t\t _gl.deleteTexture( attachmentProperties.__webglTexture );\n \n\t\t\t\t\t info.memory.textures --;\n \n\t\t\t\t }\n \n\t\t\t\t properties.remove( texture[ i ] );\n \n\t\t\t }\n \n\t\t }\n \n\t\t properties.remove( texture );\n\t\t properties.remove( renderTarget );\n \n\t }\n \n\t //\n \n\t let textureUnits = 0;\n \n\t function resetTextureUnits() {\n \n\t\t textureUnits = 0;\n \n\t }\n \n\t function allocateTextureUnit() {\n \n\t\t const textureUnit = textureUnits;\n \n\t\t if ( textureUnit >= maxTextures ) {\n \n\t\t\t console.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n \n\t\t }\n \n\t\t textureUnits += 1;\n \n\t\t return textureUnit;\n \n\t }\n \n\t //\n \n\t function setTexture2D( texture, slot ) {\n \n\t\t const textureProperties = properties.get( texture );\n \n\t\t if ( texture.isVideoTexture ) updateVideoTexture( texture );\n \n\t\t if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n\t\t\t const image = texture.image;\n \n\t\t\t if ( image === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n \n\t\t\t } else if ( image.complete === false ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n \n\t\t\t } else {\n \n\t\t\t\t uploadTexture( textureProperties, texture, slot );\n\t\t\t\t return;\n \n\t\t\t }\n \n\t\t }\n \n\t\t state.activeTexture( 33984 + slot );\n\t\t state.bindTexture( 3553, textureProperties.__webglTexture );\n \n\t }\n \n\t function setTexture2DArray( texture, slot ) {\n \n\t\t const textureProperties = properties.get( texture );\n \n\t\t if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n\t\t\t uploadTexture( textureProperties, texture, slot );\n\t\t\t return;\n \n\t\t }\n \n\t\t state.activeTexture( 33984 + slot );\n\t\t state.bindTexture( 35866, textureProperties.__webglTexture );\n \n\t }\n \n\t function setTexture3D( texture, slot ) {\n \n\t\t const textureProperties = properties.get( texture );\n \n\t\t if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n\t\t\t uploadTexture( textureProperties, texture, slot );\n\t\t\t return;\n \n\t\t }\n \n\t\t state.activeTexture( 33984 + slot );\n\t\t state.bindTexture( 32879, textureProperties.__webglTexture );\n \n\t }\n \n\t function setTextureCube( texture, slot ) {\n \n\t\t const textureProperties = properties.get( texture );\n \n\t\t if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n \n\t\t\t uploadCubeTexture( textureProperties, texture, slot );\n\t\t\t return;\n \n\t\t }\n \n\t\t state.activeTexture( 33984 + slot );\n\t\t state.bindTexture( 34067, textureProperties.__webglTexture );\n \n\t }\n \n\t const wrappingToGL = {\n\t\t [ RepeatWrapping ]: 10497,\n\t\t [ ClampToEdgeWrapping ]: 33071,\n\t\t [ MirroredRepeatWrapping ]: 33648\n\t };\n \n\t const filterToGL = {\n\t\t [ NearestFilter ]: 9728,\n\t\t [ NearestMipmapNearestFilter ]: 9984,\n\t\t [ NearestMipmapLinearFilter ]: 9986,\n \n\t\t [ LinearFilter ]: 9729,\n\t\t [ LinearMipmapNearestFilter ]: 9985,\n\t\t [ LinearMipmapLinearFilter ]: 9987\n\t };\n \n\t function setTextureParameters( textureType, texture, supportsMips ) {\n \n\t\t if ( supportsMips ) {\n \n\t\t\t _gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t _gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n \n\t\t\t if ( textureType === 32879 || textureType === 35866 ) {\n \n\t\t\t\t _gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n \n\t\t\t }\n \n\t\t\t _gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t _gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n \n\t\t } else {\n \n\t\t\t _gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t _gl.texParameteri( textureType, 10243, 33071 );\n \n\t\t\t if ( textureType === 32879 || textureType === 35866 ) {\n \n\t\t\t\t _gl.texParameteri( textureType, 32882, 33071 );\n \n\t\t\t }\n \n\t\t\t if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n \n\t\t\t }\n \n\t\t\t _gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t _gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n \n\t\t\t if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n \n\t\t\t const extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n \n\t\t\t if ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\t if ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n \n\t\t\t if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n \n\t\t\t\t _gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t properties.get( texture ).__currentAnisotropy = texture.anisotropy;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t function initTexture( textureProperties, texture ) {\n \n\t\t if ( textureProperties.__webglInit === undefined ) {\n \n\t\t\t textureProperties.__webglInit = true;\n \n\t\t\t texture.addEventListener( 'dispose', onTextureDispose );\n \n\t\t\t textureProperties.__webglTexture = _gl.createTexture();\n \n\t\t\t info.memory.textures ++;\n \n\t\t }\n \n\t }\n \n\t function uploadTexture( textureProperties, texture, slot ) {\n \n\t\t let textureType = 3553;\n \n\t\t if ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\t if ( texture.isDataTexture3D ) textureType = 32879;\n \n\t\t initTexture( textureProperties, texture );\n \n\t\t state.activeTexture( 33984 + slot );\n\t\t state.bindTexture( textureType, textureProperties.__webglTexture );\n \n\t\t _gl.pixelStorei( 37440, texture.flipY );\n\t\t _gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t _gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t _gl.pixelStorei( 37443, 0 );\n \n\t\t const needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t const image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n \n\t\t const supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t glFormat = utils.convert( texture.format );\n \n\t\t let glType = utils.convert( texture.type ),\n\t\t\t glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n \n\t\t setTextureParameters( textureType, texture, supportsMips );\n \n\t\t let mipmap;\n\t\t const mipmaps = texture.mipmaps;\n \n\t\t if ( texture.isDepthTexture ) {\n \n\t\t\t // populate depth texture with dummy data\n \n\t\t\t glInternalFormat = 6402;\n \n\t\t\t if ( isWebGL2 ) {\n \n\t\t\t\t if ( texture.type === FloatType ) {\n \n\t\t\t\t\t glInternalFormat = 36012;\n \n\t\t\t\t } else if ( texture.type === UnsignedIntType ) {\n \n\t\t\t\t\t glInternalFormat = 33190;\n \n\t\t\t\t } else if ( texture.type === UnsignedInt248Type ) {\n \n\t\t\t\t\t glInternalFormat = 35056;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t if ( texture.type === FloatType ) {\n \n\t\t\t\t\t console.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // validation checks for WebGL 1\n \n\t\t\t if ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n \n\t\t\t\t // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n \n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n \n\t\t\t\t\t texture.type = UnsignedShortType;\n\t\t\t\t\t glType = utils.convert( texture.type );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n \n\t\t\t\t // Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t glInternalFormat = 34041;\n \n\t\t\t\t // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t if ( texture.type !== UnsignedInt248Type ) {\n \n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n \n\t\t\t\t\t texture.type = UnsignedInt248Type;\n\t\t\t\t\t glType = utils.convert( texture.type );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t //\n \n\t\t\t state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n \n\t\t } else if ( texture.isDataTexture ) {\n \n\t\t\t // use manually created mipmaps if available\n\t\t\t // if there are no manual mipmaps\n\t\t\t // set 0 level mipmap and then use GL to generate other mipmap levels\n \n\t\t\t if ( mipmaps.length > 0 && supportsMips ) {\n \n\t\t\t\t for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n \n\t\t\t\t\t mipmap = mipmaps[ i ];\n\t\t\t\t\t state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n \n\t\t\t\t }\n \n\t\t\t\t texture.generateMipmaps = false;\n\t\t\t\t textureProperties.__maxMipLevel = mipmaps.length - 1;\n \n\t\t\t } else {\n \n\t\t\t\t state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\t textureProperties.__maxMipLevel = 0;\n \n\t\t\t }\n \n\t\t } else if ( texture.isCompressedTexture ) {\n \n\t\t\t for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n \n\t\t\t\t mipmap = mipmaps[ i ];\n \n\t\t\t\t if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n \n\t\t\t\t\t if ( glFormat !== null ) {\n \n\t\t\t\t\t\t state.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t textureProperties.__maxMipLevel = mipmaps.length - 1;\n \n\t\t } else if ( texture.isDataTexture2DArray ) {\n \n\t\t\t state.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t textureProperties.__maxMipLevel = 0;\n \n\t\t } else if ( texture.isDataTexture3D ) {\n \n\t\t\t state.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t textureProperties.__maxMipLevel = 0;\n \n\t\t } else {\n \n\t\t\t // regular Texture (image, video, canvas)\n \n\t\t\t // use manually created mipmaps if available\n\t\t\t // if there are no manual mipmaps\n\t\t\t // set 0 level mipmap and then use GL to generate other mipmap levels\n \n\t\t\t if ( mipmaps.length > 0 && supportsMips ) {\n \n\t\t\t\t for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n \n\t\t\t\t\t mipmap = mipmaps[ i ];\n\t\t\t\t\t state.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n \n\t\t\t\t }\n \n\t\t\t\t texture.generateMipmaps = false;\n\t\t\t\t textureProperties.__maxMipLevel = mipmaps.length - 1;\n \n\t\t\t } else {\n \n\t\t\t\t state.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\t textureProperties.__maxMipLevel = 0;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n\t\t\t generateMipmap( textureType, texture, image.width, image.height );\n \n\t\t }\n \n\t\t textureProperties.__version = texture.version;\n \n\t\t if ( texture.onUpdate ) texture.onUpdate( texture );\n \n\t }\n \n\t function uploadCubeTexture( textureProperties, texture, slot ) {\n \n\t\t if ( texture.image.length !== 6 ) return;\n \n\t\t initTexture( textureProperties, texture );\n \n\t\t state.activeTexture( 33984 + slot );\n\t\t state.bindTexture( 34067, textureProperties.__webglTexture );\n \n\t\t _gl.pixelStorei( 37440, texture.flipY );\n\t\t _gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t _gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t _gl.pixelStorei( 37443, 0 );\n \n\t\t const isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\t const isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n \n\t\t const cubeImage = [];\n \n\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t if ( ! isCompressed && ! isDataTexture ) {\n \n\t\t\t\t cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n \n\t\t\t } else {\n \n\t\t\t\t cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t const image = cubeImage[ 0 ],\n\t\t\t supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t glFormat = utils.convert( texture.format ),\n\t\t\t glType = utils.convert( texture.type ),\n\t\t\t glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n \n\t\t setTextureParameters( 34067, texture, supportsMips );\n \n\t\t let mipmaps;\n \n\t\t if ( isCompressed ) {\n \n\t\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t\t mipmaps = cubeImage[ i ].mipmaps;\n \n\t\t\t\t for ( let j = 0; j < mipmaps.length; j ++ ) {\n \n\t\t\t\t\t const mipmap = mipmaps[ j ];\n \n\t\t\t\t\t if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n \n\t\t\t\t\t\t if ( glFormat !== null ) {\n \n\t\t\t\t\t\t\t state.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t state.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t textureProperties.__maxMipLevel = mipmaps.length - 1;\n \n\t\t } else {\n \n\t\t\t mipmaps = texture.mipmaps;\n \n\t\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t\t if ( isDataTexture ) {\n \n\t\t\t\t\t state.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n \n\t\t\t\t\t for ( let j = 0; j < mipmaps.length; j ++ ) {\n \n\t\t\t\t\t\t const mipmap = mipmaps[ j ];\n\t\t\t\t\t\t const mipmapImage = mipmap.image[ i ].image;\n \n\t\t\t\t\t\t state.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t state.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n \n\t\t\t\t\t for ( let j = 0; j < mipmaps.length; j ++ ) {\n \n\t\t\t\t\t\t const mipmap = mipmaps[ j ];\n \n\t\t\t\t\t\t state.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t textureProperties.__maxMipLevel = mipmaps.length;\n \n\t\t }\n \n\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n\t\t\t // We assume images for cube map have the same size.\n\t\t\t generateMipmap( 34067, texture, image.width, image.height );\n \n\t\t }\n \n\t\t textureProperties.__version = texture.version;\n \n\t\t if ( texture.onUpdate ) texture.onUpdate( texture );\n \n\t }\n \n\t // Render targets\n \n\t // Setup storage for target texture and bind it to correct framebuffer\n\t function setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n \n\t\t const glFormat = utils.convert( texture.format );\n\t\t const glType = utils.convert( texture.type );\n\t\t const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n \n\t\t if ( textureTarget === 32879 || textureTarget === 35866 ) {\n \n\t\t\t state.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n \n\t\t } else {\n \n\t\t\t state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n \n\t\t }\n \n\t\t state.bindFramebuffer( 36160, framebuffer );\n\t\t _gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\t\t state.bindFramebuffer( 36160, null );\n \n\t }\n \n\t // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n \n\t\t _gl.bindRenderbuffer( 36161, renderbuffer );\n \n\t\t if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n \n\t\t\t let glInternalFormat = 33189;\n \n\t\t\t if ( isMultisample ) {\n \n\t\t\t\t const depthTexture = renderTarget.depthTexture;\n \n\t\t\t\t if ( depthTexture && depthTexture.isDepthTexture ) {\n \n\t\t\t\t\t if ( depthTexture.type === FloatType ) {\n \n\t\t\t\t\t\t glInternalFormat = 36012;\n \n\t\t\t\t\t } else if ( depthTexture.type === UnsignedIntType ) {\n \n\t\t\t\t\t\t glInternalFormat = 33190;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t const samples = getRenderTargetSamples( renderTarget );\n \n\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n\t\t\t } else {\n \n\t\t\t\t _gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n \n\t\t\t }\n \n\t\t\t _gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n \n\t\t } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n \n\t\t\t if ( isMultisample ) {\n \n\t\t\t\t const samples = getRenderTargetSamples( renderTarget );\n \n\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n \n\t\t\t } else {\n \n\t\t\t\t _gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n \n\t\t\t }\n \n \n\t\t\t _gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n \n\t\t } else {\n \n\t\t\t // Use the first texture for MRT so far\n\t\t\t const texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\n \n\t\t\t const glFormat = utils.convert( texture.format );\n\t\t\t const glType = utils.convert( texture.type );\n\t\t\t const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n \n\t\t\t if ( isMultisample ) {\n \n\t\t\t\t const samples = getRenderTargetSamples( renderTarget );\n \n\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n\t\t\t } else {\n \n\t\t\t\t _gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n \n\t\t\t }\n \n\t\t }\n \n\t\t _gl.bindRenderbuffer( 36161, null );\n \n\t }\n \n\t // Setup resources for a Depth Texture for a FBO (needs an extension)\n\t function setupDepthTexture( framebuffer, renderTarget ) {\n \n\t\t const isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\t if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n \n\t\t state.bindFramebuffer( 36160, framebuffer );\n \n\t\t if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n \n\t\t\t throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n \n\t\t }\n \n\t\t // upload an empty depth texture with framebuffer size\n\t\t if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t renderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t renderTarget.depthTexture.image.height !== renderTarget.height ) {\n \n\t\t\t renderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t renderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t renderTarget.depthTexture.needsUpdate = true;\n \n\t\t }\n \n\t\t setTexture2D( renderTarget.depthTexture, 0 );\n \n\t\t const webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n \n\t\t if ( renderTarget.depthTexture.format === DepthFormat ) {\n \n\t\t\t _gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n \n\t\t } else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n \n\t\t\t _gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n \n\t\t } else {\n \n\t\t\t throw new Error( 'Unknown depthTexture format' );\n \n\t\t }\n \n\t }\n \n\t // Setup GL resources for a non-texture depth buffer\n\t function setupDepthRenderbuffer( renderTarget ) {\n \n\t\t const renderTargetProperties = properties.get( renderTarget );\n \n\t\t const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n \n\t\t if ( renderTarget.depthTexture ) {\n \n\t\t\t if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n \n\t\t\t setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n \n\t\t } else {\n \n\t\t\t if ( isCube ) {\n \n\t\t\t\t renderTargetProperties.__webglDepthbuffer = [];\n \n\t\t\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t\t\t state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n \n\t\t\t }\n \n\t\t }\n \n\t\t state.bindFramebuffer( 36160, null );\n \n\t }\n \n\t // Set up GL resources for the render target\n\t function setupRenderTarget( renderTarget ) {\n \n\t\t const texture = renderTarget.texture;\n \n\t\t const renderTargetProperties = properties.get( renderTarget );\n\t\t const textureProperties = properties.get( texture );\n \n\t\t renderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n \n\t\t if ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n \n\t\t\t textureProperties.__webglTexture = _gl.createTexture();\n\t\t\t textureProperties.__version = texture.version;\n\t\t\t info.memory.textures ++;\n \n\t\t }\n \n\t\t const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\t const isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\t const isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\t const isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\t const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n \n\t\t // Handles WebGL2 RGBFormat fallback - #18858\n \n\t\t if ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {\n \n\t\t\t texture.format = RGBAFormat;\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n \n\t\t }\n \n\t\t // Setup framebuffer\n \n\t\t if ( isCube ) {\n \n\t\t\t renderTargetProperties.__webglFramebuffer = [];\n \n\t\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t\t renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n \n\t\t\t if ( isMultipleRenderTargets ) {\n \n\t\t\t\t if ( capabilities.drawBuffers ) {\n \n\t\t\t\t\t const textures = renderTarget.texture;\n \n\t\t\t\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t const attachmentProperties = properties.get( textures[ i ] );\n \n\t\t\t\t\t\t if ( attachmentProperties.__webglTexture === undefined ) {\n \n\t\t\t\t\t\t\t attachmentProperties.__webglTexture = _gl.createTexture();\n \n\t\t\t\t\t\t\t info.memory.textures ++;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n \n\t\t\t\t }\n \n\t\t\t } else if ( isMultisample ) {\n \n\t\t\t\t if ( isWebGL2 ) {\n \n\t\t\t\t\t renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n \n\t\t\t\t\t _gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n \n\t\t\t\t\t const glFormat = utils.convert( texture.format );\n\t\t\t\t\t const glType = utils.convert( texture.type );\n\t\t\t\t\t const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\t\t\t\t\t const samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n \n\t\t\t\t\t state.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t _gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t _gl.bindRenderbuffer( 36161, null );\n \n\t\t\t\t\t if ( renderTarget.depthBuffer ) {\n \n\t\t\t\t\t\t renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t state.bindFramebuffer( 36160, null );\n \n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t // Setup color buffer\n \n\t\t if ( isCube ) {\n \n\t\t\t state.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\t setTextureParameters( 34067, texture, supportsMips );\n \n\t\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t\t setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n \n\t\t\t }\n \n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n\t\t\t\t generateMipmap( 34067, texture, renderTarget.width, renderTarget.height );\n \n\t\t\t }\n \n\t\t\t state.bindTexture( 34067, null );\n \n\t\t } else if ( isMultipleRenderTargets ) {\n \n\t\t\t const textures = renderTarget.texture;\n \n\t\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n\t\t\t\t const attachment = textures[ i ];\n\t\t\t\t const attachmentProperties = properties.get( attachment );\n \n\t\t\t\t state.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\t setTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\t setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n \n\t\t\t\t if ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n \n\t\t\t\t\t generateMipmap( 3553, attachment, renderTarget.width, renderTarget.height );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t state.bindTexture( 3553, null );\n \n\t\t } else {\n \n\t\t\t let glTextureType = 3553;\n \n\t\t\t if ( isRenderTarget3D ) {\n \n\t\t\t\t // Render targets containing layers, i.e: Texture 3D and 2d arrays\n \n\t\t\t\t if ( isWebGL2 ) {\n \n\t\t\t\t\t const isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\t glTextureType = isTexture3D ? 32879 : 35866;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t state.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\t setTextureParameters( glTextureType, texture, supportsMips );\n\t\t\t setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n \n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n\t\t\t\t generateMipmap( 3553, texture, renderTarget.width, renderTarget.height );\n \n\t\t\t }\n \n\t\t\t state.bindTexture( 3553, null );\n \n\t\t }\n \n\t\t // Setup depth and stencil buffers\n \n\t\t if ( renderTarget.depthBuffer ) {\n \n\t\t\t setupDepthRenderbuffer( renderTarget );\n \n\t\t }\n \n\t }\n \n\t function updateRenderTargetMipmap( renderTarget ) {\n \n\t\t const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n \n\t\t const textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n \n\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n\t\t\t const texture = textures[ i ];\n \n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n \n\t\t\t\t const target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\t const webglTexture = properties.get( texture ).__webglTexture;\n \n\t\t\t\t state.bindTexture( target, webglTexture );\n\t\t\t\t generateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\t state.bindTexture( target, null );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t function updateMultisampleRenderTarget( renderTarget ) {\n \n\t\t if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n \n\t\t\t if ( isWebGL2 ) {\n \n\t\t\t\t const width = renderTarget.width;\n\t\t\t\t const height = renderTarget.height;\n\t\t\t\t let mask = 16384;\n \n\t\t\t\t if ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t if ( renderTarget.stencilBuffer ) mask |= 1024;\n \n\t\t\t\t const renderTargetProperties = properties.get( renderTarget );\n \n\t\t\t\t state.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t state.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n \n\t\t\t\t _gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n \n\t\t\t\t state.bindFramebuffer( 36008, null );\n\t\t\t\t state.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n \n\t\t\t } else {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t function getRenderTargetSamples( renderTarget ) {\n \n\t\t return ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\t Math.min( maxSamples, renderTarget.samples ) : 0;\n \n\t }\n \n\t function updateVideoTexture( texture ) {\n \n\t\t const frame = info.render.frame;\n \n\t\t // Check the last frame we updated the VideoTexture\n \n\t\t if ( _videoTextures.get( texture ) !== frame ) {\n \n\t\t\t _videoTextures.set( texture, frame );\n\t\t\t texture.update();\n \n\t\t }\n \n\t }\n \n\t // backwards compatibility\n \n\t let warnedTexture2D = false;\n\t let warnedTextureCube = false;\n \n\t function safeSetTexture2D( texture, slot ) {\n \n\t\t if ( texture && texture.isWebGLRenderTarget ) {\n \n\t\t\t if ( warnedTexture2D === false ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\t warnedTexture2D = true;\n \n\t\t\t }\n \n\t\t\t texture = texture.texture;\n \n\t\t }\n \n\t\t setTexture2D( texture, slot );\n \n\t }\n \n\t function safeSetTextureCube( texture, slot ) {\n \n\t\t if ( texture && texture.isWebGLCubeRenderTarget ) {\n \n\t\t\t if ( warnedTextureCube === false ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\t warnedTextureCube = true;\n \n\t\t\t }\n \n\t\t\t texture = texture.texture;\n \n\t\t }\n \n \n\t\t setTextureCube( texture, slot );\n \n\t }\n \n\t //\n \n\t this.allocateTextureUnit = allocateTextureUnit;\n\t this.resetTextureUnits = resetTextureUnits;\n \n\t this.setTexture2D = setTexture2D;\n\t this.setTexture2DArray = setTexture2DArray;\n\t this.setTexture3D = setTexture3D;\n\t this.setTextureCube = setTextureCube;\n\t this.setupRenderTarget = setupRenderTarget;\n\t this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n \n\t this.safeSetTexture2D = safeSetTexture2D;\n\t this.safeSetTextureCube = safeSetTextureCube;\n \n }\n \n function WebGLUtils( gl, extensions, capabilities ) {\n \n\t const isWebGL2 = capabilities.isWebGL2;\n \n\t function convert( p ) {\n \n\t\t let extension;\n \n\t\t if ( p === UnsignedByteType ) return 5121;\n\t\t if ( p === UnsignedShort4444Type ) return 32819;\n\t\t if ( p === UnsignedShort5551Type ) return 32820;\n\t\t if ( p === UnsignedShort565Type ) return 33635;\n \n\t\t if ( p === ByteType ) return 5120;\n\t\t if ( p === ShortType ) return 5122;\n\t\t if ( p === UnsignedShortType ) return 5123;\n\t\t if ( p === IntType ) return 5124;\n\t\t if ( p === UnsignedIntType ) return 5125;\n\t\t if ( p === FloatType ) return 5126;\n \n\t\t if ( p === HalfFloatType ) {\n \n\t\t\t if ( isWebGL2 ) return 5131;\n \n\t\t\t extension = extensions.get( 'OES_texture_half_float' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t return extension.HALF_FLOAT_OES;\n \n\t\t\t } else {\n \n\t\t\t\t return null;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( p === AlphaFormat ) return 6406;\n\t\t if ( p === RGBFormat ) return 6407;\n\t\t if ( p === RGBAFormat ) return 6408;\n\t\t if ( p === LuminanceFormat ) return 6409;\n\t\t if ( p === LuminanceAlphaFormat ) return 6410;\n\t\t if ( p === DepthFormat ) return 6402;\n\t\t if ( p === DepthStencilFormat ) return 34041;\n\t\t if ( p === RedFormat ) return 6403;\n \n\t\t // WebGL2 formats.\n \n\t\t if ( p === RedIntegerFormat ) return 36244;\n\t\t if ( p === RGFormat ) return 33319;\n\t\t if ( p === RGIntegerFormat ) return 33320;\n\t\t if ( p === RGBIntegerFormat ) return 36248;\n\t\t if ( p === RGBAIntegerFormat ) return 36249;\n \n\t\t if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n \n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n \n\t\t\t } else {\n \n\t\t\t\t return null;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n \n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n \n\t\t\t } else {\n \n\t\t\t\t return null;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( p === RGB_ETC1_Format ) {\n \n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t return extension.COMPRESSED_RGB_ETC1_WEBGL;\n \n\t\t\t } else {\n \n\t\t\t\t return null;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n \n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_etc' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t if ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t if ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\t p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\t p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\t p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\t p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\t p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n \n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_astc' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t // TODO Complete?\n \n\t\t\t\t return p;\n \n\t\t\t } else {\n \n\t\t\t\t return null;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( p === RGBA_BPTC_Format ) {\n \n\t\t\t extension = extensions.get( 'EXT_texture_compression_bptc' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t // TODO Complete?\n \n\t\t\t\t return p;\n \n\t\t\t } else {\n \n\t\t\t\t return null;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( p === UnsignedInt248Type ) {\n \n\t\t\t if ( isWebGL2 ) return 34042;\n \n\t\t\t extension = extensions.get( 'WEBGL_depth_texture' );\n \n\t\t\t if ( extension !== null ) {\n \n\t\t\t\t return extension.UNSIGNED_INT_24_8_WEBGL;\n \n\t\t\t } else {\n \n\t\t\t\t return null;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t return { convert: convert };\n \n }\n \n class ArrayCamera extends PerspectiveCamera {\n \n\t constructor( array = [] ) {\n \n\t\t super();\n \n\t\t this.cameras = array;\n \n\t }\n \n }\n \n ArrayCamera.prototype.isArrayCamera = true;\n \n class Group extends Object3D {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this.type = 'Group';\n \n\t }\n \n }\n \n Group.prototype.isGroup = true;\n \n const _moveEvent = { type: 'move' };\n \n class WebXRController {\n \n\t constructor() {\n \n\t\t this._targetRay = null;\n\t\t this._grip = null;\n\t\t this._hand = null;\n \n\t }\n \n\t getHandSpace() {\n \n\t\t if ( this._hand === null ) {\n \n\t\t\t this._hand = new Group();\n\t\t\t this._hand.matrixAutoUpdate = false;\n\t\t\t this._hand.visible = false;\n \n\t\t\t this._hand.joints = {};\n\t\t\t this._hand.inputState = { pinching: false };\n \n\t\t }\n \n\t\t return this._hand;\n \n\t }\n \n\t getTargetRaySpace() {\n \n\t\t if ( this._targetRay === null ) {\n \n\t\t\t this._targetRay = new Group();\n\t\t\t this._targetRay.matrixAutoUpdate = false;\n\t\t\t this._targetRay.visible = false;\n\t\t\t this._targetRay.hasLinearVelocity = false;\n\t\t\t this._targetRay.linearVelocity = new Vector3();\n\t\t\t this._targetRay.hasAngularVelocity = false;\n\t\t\t this._targetRay.angularVelocity = new Vector3();\n \n\t\t }\n \n\t\t return this._targetRay;\n \n\t }\n \n\t getGripSpace() {\n \n\t\t if ( this._grip === null ) {\n \n\t\t\t this._grip = new Group();\n\t\t\t this._grip.matrixAutoUpdate = false;\n\t\t\t this._grip.visible = false;\n\t\t\t this._grip.hasLinearVelocity = false;\n\t\t\t this._grip.linearVelocity = new Vector3();\n\t\t\t this._grip.hasAngularVelocity = false;\n\t\t\t this._grip.angularVelocity = new Vector3();\n \n\t\t }\n \n\t\t return this._grip;\n \n\t }\n \n\t dispatchEvent( event ) {\n \n\t\t if ( this._targetRay !== null ) {\n \n\t\t\t this._targetRay.dispatchEvent( event );\n \n\t\t }\n \n\t\t if ( this._grip !== null ) {\n \n\t\t\t this._grip.dispatchEvent( event );\n \n\t\t }\n \n\t\t if ( this._hand !== null ) {\n \n\t\t\t this._hand.dispatchEvent( event );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t disconnect( inputSource ) {\n \n\t\t this.dispatchEvent( { type: 'disconnected', data: inputSource } );\n \n\t\t if ( this._targetRay !== null ) {\n \n\t\t\t this._targetRay.visible = false;\n \n\t\t }\n \n\t\t if ( this._grip !== null ) {\n \n\t\t\t this._grip.visible = false;\n \n\t\t }\n \n\t\t if ( this._hand !== null ) {\n \n\t\t\t this._hand.visible = false;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t update( inputSource, frame, referenceSpace ) {\n \n\t\t let inputPose = null;\n\t\t let gripPose = null;\n\t\t let handPose = null;\n \n\t\t const targetRay = this._targetRay;\n\t\t const grip = this._grip;\n\t\t const hand = this._hand;\n \n\t\t if ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n \n\t\t\t if ( targetRay !== null ) {\n \n\t\t\t\t inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n \n\t\t\t\t if ( inputPose !== null ) {\n \n\t\t\t\t\t targetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t targetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n \n\t\t\t\t\t if ( inputPose.linearVelocity ) {\n \n\t\t\t\t\t\t targetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t targetRay.linearVelocity.copy( inputPose.linearVelocity );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t targetRay.hasLinearVelocity = false;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( inputPose.angularVelocity ) {\n \n\t\t\t\t\t\t targetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t targetRay.angularVelocity.copy( inputPose.angularVelocity );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t targetRay.hasAngularVelocity = false;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t this.dispatchEvent( _moveEvent );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( hand && inputSource.hand ) {\n \n\t\t\t\t handPose = true;\n \n\t\t\t\t for ( const inputjoint of inputSource.hand.values() ) {\n \n\t\t\t\t\t // Update the joints groups with the XRJoint poses\n\t\t\t\t\t const jointPose = frame.getJointPose( inputjoint, referenceSpace );\n \n\t\t\t\t\t if ( hand.joints[ inputjoint.jointName ] === undefined ) {\n \n\t\t\t\t\t\t // The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t const joint = new Group();\n\t\t\t\t\t\t joint.matrixAutoUpdate = false;\n\t\t\t\t\t\t joint.visible = false;\n\t\t\t\t\t\t hand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t // ??\n\t\t\t\t\t\t hand.add( joint );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t const joint = hand.joints[ inputjoint.jointName ];\n \n\t\t\t\t\t if ( jointPose !== null ) {\n \n\t\t\t\t\t\t joint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\t joint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\t joint.jointRadius = jointPose.radius;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t joint.visible = jointPose !== null;\n \n\t\t\t\t }\n \n\t\t\t\t // Custom events\n \n\t\t\t\t // Check pinchz\n\t\t\t\t const indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\t const thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\t const distance = indexTip.position.distanceTo( thumbTip.position );\n \n\t\t\t\t const distanceToPinch = 0.02;\n\t\t\t\t const threshold = 0.005;\n \n\t\t\t\t if ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n \n\t\t\t\t\t hand.inputState.pinching = false;\n\t\t\t\t\t this.dispatchEvent( {\n\t\t\t\t\t\t type: 'pinchend',\n\t\t\t\t\t\t handedness: inputSource.handedness,\n\t\t\t\t\t\t target: this\n\t\t\t\t\t } );\n \n\t\t\t\t } else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n \n\t\t\t\t\t hand.inputState.pinching = true;\n\t\t\t\t\t this.dispatchEvent( {\n\t\t\t\t\t\t type: 'pinchstart',\n\t\t\t\t\t\t handedness: inputSource.handedness,\n\t\t\t\t\t\t target: this\n\t\t\t\t\t } );\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t if ( grip !== null && inputSource.gripSpace ) {\n \n\t\t\t\t\t gripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n \n\t\t\t\t\t if ( gripPose !== null ) {\n \n\t\t\t\t\t\t grip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\t grip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n \n\t\t\t\t\t\t if ( gripPose.linearVelocity ) {\n \n\t\t\t\t\t\t\t grip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t grip.linearVelocity.copy( gripPose.linearVelocity );\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t grip.hasLinearVelocity = false;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t if ( gripPose.angularVelocity ) {\n \n\t\t\t\t\t\t\t grip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t grip.angularVelocity.copy( gripPose.angularVelocity );\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t grip.hasAngularVelocity = false;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( targetRay !== null ) {\n \n\t\t\t targetRay.visible = ( inputPose !== null );\n \n\t\t }\n \n\t\t if ( grip !== null ) {\n \n\t\t\t grip.visible = ( gripPose !== null );\n \n\t\t }\n \n\t\t if ( hand !== null ) {\n \n\t\t\t hand.visible = ( handPose !== null );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n }\n \n class WebXRManager extends EventDispatcher {\n \n\t constructor( renderer, gl ) {\n \n\t\t super();\n \n\t\t const scope = this;\n\t\t const state = renderer.state;\n \n\t\t let session = null;\n \n\t\t let framebufferScaleFactor = 1.0;\n \n\t\t let referenceSpace = null;\n\t\t let referenceSpaceType = 'local-floor';\n \n\t\t let pose = null;\n \n\t\t const controllers = [];\n\t\t const inputSourcesMap = new Map();\n \n\t\t //\n \n\t\t const cameraL = new PerspectiveCamera();\n\t\t cameraL.layers.enable( 1 );\n\t\t cameraL.viewport = new Vector4();\n \n\t\t const cameraR = new PerspectiveCamera();\n\t\t cameraR.layers.enable( 2 );\n\t\t cameraR.viewport = new Vector4();\n \n\t\t const cameras = [ cameraL, cameraR ];\n \n\t\t const cameraVR = new ArrayCamera();\n\t\t cameraVR.layers.enable( 1 );\n\t\t cameraVR.layers.enable( 2 );\n \n\t\t let _currentDepthNear = null;\n\t\t let _currentDepthFar = null;\n \n\t\t //\n \n\t\t this.cameraAutoUpdate = true;\n\t\t this.enabled = false;\n \n\t\t this.isPresenting = false;\n \n\t\t this.getController = function ( index ) {\n \n\t\t\t let controller = controllers[ index ];\n \n\t\t\t if ( controller === undefined ) {\n \n\t\t\t\t controller = new WebXRController();\n\t\t\t\t controllers[ index ] = controller;\n \n\t\t\t }\n \n\t\t\t return controller.getTargetRaySpace();\n \n\t\t };\n \n\t\t this.getControllerGrip = function ( index ) {\n \n\t\t\t let controller = controllers[ index ];\n \n\t\t\t if ( controller === undefined ) {\n \n\t\t\t\t controller = new WebXRController();\n\t\t\t\t controllers[ index ] = controller;\n \n\t\t\t }\n \n\t\t\t return controller.getGripSpace();\n \n\t\t };\n \n\t\t this.getHand = function ( index ) {\n \n\t\t\t let controller = controllers[ index ];\n \n\t\t\t if ( controller === undefined ) {\n \n\t\t\t\t controller = new WebXRController();\n\t\t\t\t controllers[ index ] = controller;\n \n\t\t\t }\n \n\t\t\t return controller.getHandSpace();\n \n\t\t };\n \n\t\t //\n \n\t\t function onSessionEvent( event ) {\n \n\t\t\t const controller = inputSourcesMap.get( event.inputSource );\n \n\t\t\t if ( controller ) {\n \n\t\t\t\t controller.dispatchEvent( { type: event.type, data: event.inputSource } );\n \n\t\t\t }\n \n\t\t }\n \n\t\t function onSessionEnd() {\n \n\t\t\t inputSourcesMap.forEach( function ( controller, inputSource ) {\n \n\t\t\t\t controller.disconnect( inputSource );\n \n\t\t\t } );\n \n\t\t\t inputSourcesMap.clear();\n \n\t\t\t _currentDepthNear = null;\n\t\t\t _currentDepthFar = null;\n \n\t\t\t // restore framebuffer/rendering state\n \n\t\t\t state.bindXRFramebuffer( null );\n\t\t\t renderer.setRenderTarget( renderer.getRenderTarget() );\n \n\t\t\t //\n \n\t\t\t animation.stop();\n \n\t\t\t scope.isPresenting = false;\n \n\t\t\t scope.dispatchEvent( { type: 'sessionend' } );\n \n\t\t }\n \n\t\t this.setFramebufferScaleFactor = function ( value ) {\n \n\t\t\t framebufferScaleFactor = value;\n \n\t\t\t if ( scope.isPresenting === true ) {\n \n\t\t\t\t console.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n \n\t\t\t }\n \n\t\t };\n \n\t\t this.setReferenceSpaceType = function ( value ) {\n \n\t\t\t referenceSpaceType = value;\n \n\t\t\t if ( scope.isPresenting === true ) {\n \n\t\t\t\t console.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n \n\t\t\t }\n \n\t\t };\n \n\t\t this.getReferenceSpace = function () {\n \n\t\t\t return referenceSpace;\n \n\t\t };\n \n\t\t this.getSession = function () {\n \n\t\t\t return session;\n \n\t\t };\n \n\t\t this.setSession = async function ( value ) {\n \n\t\t\t session = value;\n \n\t\t\t if ( session !== null ) {\n \n\t\t\t\t session.addEventListener( 'select', onSessionEvent );\n\t\t\t\t session.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\t session.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\t session.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\t session.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\t session.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\t session.addEventListener( 'end', onSessionEnd );\n\t\t\t\t session.addEventListener( 'inputsourceschange', onInputSourcesChange );\n \n\t\t\t\t const attributes = gl.getContextAttributes();\n \n\t\t\t\t if ( attributes.xrCompatible !== true ) {\n \n\t\t\t\t\t await gl.makeXRCompatible();\n \n\t\t\t\t }\n \n\t\t\t\t const layerInit = {\n\t\t\t\t\t antialias: attributes.antialias,\n\t\t\t\t\t alpha: attributes.alpha,\n\t\t\t\t\t depth: attributes.depth,\n\t\t\t\t\t stencil: attributes.stencil,\n\t\t\t\t\t framebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t };\n \n\t\t\t\t // eslint-disable-next-line no-undef\n\t\t\t\t const baseLayer = new XRWebGLLayer( session, gl, layerInit );\n \n\t\t\t\t session.updateRenderState( { baseLayer: baseLayer } );\n \n\t\t\t\t referenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n \n\t\t\t\t animation.setContext( session );\n\t\t\t\t animation.start();\n \n\t\t\t\t scope.isPresenting = true;\n \n\t\t\t\t scope.dispatchEvent( { type: 'sessionstart' } );\n \n\t\t\t }\n \n\t\t };\n \n\t\t function onInputSourcesChange( event ) {\n \n\t\t\t const inputSources = session.inputSources;\n \n\t\t\t // Assign inputSources to available controllers\n \n\t\t\t for ( let i = 0; i < controllers.length; i ++ ) {\n \n\t\t\t\t inputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n \n\t\t\t }\n \n\t\t\t // Notify disconnected\n \n\t\t\t for ( let i = 0; i < event.removed.length; i ++ ) {\n \n\t\t\t\t const inputSource = event.removed[ i ];\n\t\t\t\t const controller = inputSourcesMap.get( inputSource );\n \n\t\t\t\t if ( controller ) {\n \n\t\t\t\t\t controller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\t inputSourcesMap.delete( inputSource );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // Notify connected\n \n\t\t\t for ( let i = 0; i < event.added.length; i ++ ) {\n \n\t\t\t\t const inputSource = event.added[ i ];\n\t\t\t\t const controller = inputSourcesMap.get( inputSource );\n \n\t\t\t\t if ( controller ) {\n \n\t\t\t\t\t controller.dispatchEvent( { type: 'connected', data: inputSource } );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t //\n \n\t\t const cameraLPos = new Vector3();\n\t\t const cameraRPos = new Vector3();\n \n\t\t /**\n\t\t  * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t  * the cameras' projection and world matrices have already been set.\n\t\t  * And that near and far planes are identical for both cameras.\n\t\t  * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t  */\n\t\t function setProjectionFromUnion( camera, cameraL, cameraR ) {\n \n\t\t\t cameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\t cameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n \n\t\t\t const ipd = cameraLPos.distanceTo( cameraRPos );\n \n\t\t\t const projL = cameraL.projectionMatrix.elements;\n\t\t\t const projR = cameraR.projectionMatrix.elements;\n \n\t\t\t // VR systems will have identical far and near planes, and\n\t\t\t // most likely identical top and bottom frustum extents.\n\t\t\t // Use the left camera for these values.\n\t\t\t const near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\t const far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\t const topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\t const bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n \n\t\t\t const leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\t const rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\t const left = near * leftFov;\n\t\t\t const right = near * rightFov;\n \n\t\t\t // Calculate the new camera's position offset from the\n\t\t\t // left camera. xOffset should be roughly half `ipd`.\n\t\t\t const zOffset = ipd / ( - leftFov + rightFov );\n\t\t\t const xOffset = zOffset * - leftFov;\n \n\t\t\t // TODO: Better way to apply this offset?\n\t\t\t cameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t camera.translateX( xOffset );\n\t\t\t camera.translateZ( zOffset );\n\t\t\t camera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\t camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n \n\t\t\t // Find the union of the frustum values of the cameras and scale\n\t\t\t // the values so that the near plane's position does not change in world space,\n\t\t\t // although must now be relative to the new union camera.\n\t\t\t const near2 = near + zOffset;\n\t\t\t const far2 = far + zOffset;\n\t\t\t const left2 = left - xOffset;\n\t\t\t const right2 = right + ( ipd - xOffset );\n\t\t\t const top2 = topFov * far / far2 * near2;\n\t\t\t const bottom2 = bottomFov * far / far2 * near2;\n \n\t\t\t camera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n \n\t\t }\n \n\t\t function updateCamera( camera, parent ) {\n \n\t\t\t if ( parent === null ) {\n \n\t\t\t\t camera.matrixWorld.copy( camera.matrix );\n \n\t\t\t } else {\n \n\t\t\t\t camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n \n\t\t\t }\n \n\t\t\t camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n \n\t\t }\n \n\t\t this.updateCamera = function ( camera ) {\n \n\t\t\t if ( session === null ) return;\n \n\t\t\t cameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t cameraVR.far = cameraR.far = cameraL.far = camera.far;\n \n\t\t\t if ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n \n\t\t\t\t // Note that the new renderState won't apply until the next frame. See #18320\n \n\t\t\t\t session.updateRenderState( {\n\t\t\t\t\t depthNear: cameraVR.near,\n\t\t\t\t\t depthFar: cameraVR.far\n\t\t\t\t } );\n \n\t\t\t\t _currentDepthNear = cameraVR.near;\n\t\t\t\t _currentDepthFar = cameraVR.far;\n \n\t\t\t }\n \n\t\t\t const parent = camera.parent;\n\t\t\t const cameras = cameraVR.cameras;\n \n\t\t\t updateCamera( cameraVR, parent );\n \n\t\t\t for ( let i = 0; i < cameras.length; i ++ ) {\n \n\t\t\t\t updateCamera( cameras[ i ], parent );\n \n\t\t\t }\n \n\t\t\t cameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n \n\t\t\t // update user camera and its children\n \n\t\t\t camera.position.copy( cameraVR.position );\n\t\t\t camera.quaternion.copy( cameraVR.quaternion );\n\t\t\t camera.scale.copy( cameraVR.scale );\n\t\t\t camera.matrix.copy( cameraVR.matrix );\n\t\t\t camera.matrixWorld.copy( cameraVR.matrixWorld );\n \n\t\t\t const children = camera.children;\n \n\t\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t\t children[ i ].updateMatrixWorld( true );\n \n\t\t\t }\n \n\t\t\t // update projection matrix for proper view frustum culling\n \n\t\t\t if ( cameras.length === 2 ) {\n \n\t\t\t\t setProjectionFromUnion( cameraVR, cameraL, cameraR );\n \n\t\t\t } else {\n \n\t\t\t\t // assume single camera setup (AR)\n \n\t\t\t\t cameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n \n\t\t\t }\n \n\t\t };\n \n\t\t this.getCamera = function () {\n \n\t\t\t return cameraVR;\n \n\t\t };\n \n\t\t // Animation Loop\n \n\t\t let onAnimationFrameCallback = null;\n \n\t\t function onAnimationFrame( time, frame ) {\n \n\t\t\t pose = frame.getViewerPose( referenceSpace );\n \n\t\t\t if ( pose !== null ) {\n \n\t\t\t\t const views = pose.views;\n\t\t\t\t const baseLayer = session.renderState.baseLayer;\n \n\t\t\t\t state.bindXRFramebuffer( baseLayer.framebuffer );\n \n\t\t\t\t let cameraVRNeedsUpdate = false;\n \n\t\t\t\t // check if it's necessary to rebuild cameraVR's camera list\n \n\t\t\t\t if ( views.length !== cameraVR.cameras.length ) {\n \n\t\t\t\t\t cameraVR.cameras.length = 0;\n\t\t\t\t\t cameraVRNeedsUpdate = true;\n \n\t\t\t\t }\n \n\t\t\t\t for ( let i = 0; i < views.length; i ++ ) {\n \n\t\t\t\t\t const view = views[ i ];\n\t\t\t\t\t const viewport = baseLayer.getViewport( view );\n \n\t\t\t\t\t const camera = cameras[ i ];\n\t\t\t\t\t camera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\t camera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\t camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n \n\t\t\t\t\t if ( i === 0 ) {\n \n\t\t\t\t\t\t cameraVR.matrix.copy( camera.matrix );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( cameraVRNeedsUpdate === true ) {\n \n\t\t\t\t\t\t cameraVR.cameras.push( camera );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t //\n \n\t\t\t const inputSources = session.inputSources;\n \n\t\t\t for ( let i = 0; i < controllers.length; i ++ ) {\n \n\t\t\t\t const controller = controllers[ i ];\n\t\t\t\t const inputSource = inputSources[ i ];\n \n\t\t\t\t controller.update( inputSource, frame, referenceSpace );\n \n\t\t\t }\n \n\t\t\t if ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n \n\t\t }\n \n\t\t const animation = new WebGLAnimation();\n\t\t animation.setAnimationLoop( onAnimationFrame );\n \n\t\t this.setAnimationLoop = function ( callback ) {\n \n\t\t\t onAnimationFrameCallback = callback;\n \n\t\t };\n \n\t\t this.dispose = function () {};\n \n\t }\n \n }\n \n function WebGLMaterials( properties ) {\n \n\t function refreshFogUniforms( uniforms, fog ) {\n \n\t\t uniforms.fogColor.value.copy( fog.color );\n \n\t\t if ( fog.isFog ) {\n \n\t\t\t uniforms.fogNear.value = fog.near;\n\t\t\t uniforms.fogFar.value = fog.far;\n \n\t\t } else if ( fog.isFogExp2 ) {\n \n\t\t\t uniforms.fogDensity.value = fog.density;\n \n\t\t }\n \n\t }\n \n\t function refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n \n\t\t if ( material.isMeshBasicMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n \n\t\t } else if ( material.isMeshLambertMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n\t\t\t refreshUniformsLambert( uniforms, material );\n \n\t\t } else if ( material.isMeshToonMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n\t\t\t refreshUniformsToon( uniforms, material );\n \n\t\t } else if ( material.isMeshPhongMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n\t\t\t refreshUniformsPhong( uniforms, material );\n \n\t\t } else if ( material.isMeshStandardMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n \n\t\t\t if ( material.isMeshPhysicalMaterial ) {\n \n\t\t\t\t refreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n \n\t\t\t } else {\n \n\t\t\t\t refreshUniformsStandard( uniforms, material );\n \n\t\t\t }\n \n\t\t } else if ( material.isMeshMatcapMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n\t\t\t refreshUniformsMatcap( uniforms, material );\n \n\t\t } else if ( material.isMeshDepthMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n\t\t\t refreshUniformsDepth( uniforms, material );\n \n\t\t } else if ( material.isMeshDistanceMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n\t\t\t refreshUniformsDistance( uniforms, material );\n \n\t\t } else if ( material.isMeshNormalMaterial ) {\n \n\t\t\t refreshUniformsCommon( uniforms, material );\n\t\t\t refreshUniformsNormal( uniforms, material );\n \n\t\t } else if ( material.isLineBasicMaterial ) {\n \n\t\t\t refreshUniformsLine( uniforms, material );\n \n\t\t\t if ( material.isLineDashedMaterial ) {\n \n\t\t\t\t refreshUniformsDash( uniforms, material );\n \n\t\t\t }\n \n\t\t } else if ( material.isPointsMaterial ) {\n \n\t\t\t refreshUniformsPoints( uniforms, material, pixelRatio, height );\n \n\t\t } else if ( material.isSpriteMaterial ) {\n \n\t\t\t refreshUniformsSprites( uniforms, material );\n \n\t\t } else if ( material.isShadowMaterial ) {\n \n\t\t\t uniforms.color.value.copy( material.color );\n\t\t\t uniforms.opacity.value = material.opacity;\n \n\t\t } else if ( material.isShaderMaterial ) {\n \n\t\t\t material.uniformsNeedUpdate = false; // #15581\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsCommon( uniforms, material ) {\n \n\t\t uniforms.opacity.value = material.opacity;\n \n\t\t if ( material.color ) {\n \n\t\t\t uniforms.diffuse.value.copy( material.color );\n \n\t\t }\n \n\t\t if ( material.emissive ) {\n \n\t\t\t uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n \n\t\t }\n \n\t\t if ( material.map ) {\n \n\t\t\t uniforms.map.value = material.map;\n \n\t\t }\n \n\t\t if ( material.alphaMap ) {\n \n\t\t\t uniforms.alphaMap.value = material.alphaMap;\n \n\t\t }\n \n\t\t if ( material.specularMap ) {\n \n\t\t\t uniforms.specularMap.value = material.specularMap;\n \n\t\t }\n \n\t\t const envMap = properties.get( material ).envMap;\n \n\t\t if ( envMap ) {\n \n\t\t\t uniforms.envMap.value = envMap;\n \n\t\t\t uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n \n\t\t\t uniforms.reflectivity.value = material.reflectivity;\n\t\t\t uniforms.refractionRatio.value = material.refractionRatio;\n \n\t\t\t const maxMipLevel = properties.get( envMap ).__maxMipLevel;\n \n\t\t\t if ( maxMipLevel !== undefined ) {\n \n\t\t\t\t uniforms.maxMipLevel.value = maxMipLevel;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( material.lightMap ) {\n \n\t\t\t uniforms.lightMap.value = material.lightMap;\n\t\t\t uniforms.lightMapIntensity.value = material.lightMapIntensity;\n \n\t\t }\n \n\t\t if ( material.aoMap ) {\n \n\t\t\t uniforms.aoMap.value = material.aoMap;\n\t\t\t uniforms.aoMapIntensity.value = material.aoMapIntensity;\n \n\t\t }\n \n\t\t // uv repeat and offset setting priorities\n\t\t // 1. color map\n\t\t // 2. specular map\n\t\t // 3. displacementMap map\n\t\t // 4. normal map\n\t\t // 5. bump map\n\t\t // 6. roughnessMap map\n\t\t // 7. metalnessMap map\n\t\t // 8. alphaMap map\n\t\t // 9. emissiveMap map\n\t\t // 10. clearcoat map\n\t\t // 11. clearcoat normal map\n\t\t // 12. clearcoat roughnessMap map\n \n\t\t let uvScaleMap;\n \n\t\t if ( material.map ) {\n \n\t\t\t uvScaleMap = material.map;\n \n\t\t } else if ( material.specularMap ) {\n \n\t\t\t uvScaleMap = material.specularMap;\n \n\t\t } else if ( material.displacementMap ) {\n \n\t\t\t uvScaleMap = material.displacementMap;\n \n\t\t } else if ( material.normalMap ) {\n \n\t\t\t uvScaleMap = material.normalMap;\n \n\t\t } else if ( material.bumpMap ) {\n \n\t\t\t uvScaleMap = material.bumpMap;\n \n\t\t } else if ( material.roughnessMap ) {\n \n\t\t\t uvScaleMap = material.roughnessMap;\n \n\t\t } else if ( material.metalnessMap ) {\n \n\t\t\t uvScaleMap = material.metalnessMap;\n \n\t\t } else if ( material.alphaMap ) {\n \n\t\t\t uvScaleMap = material.alphaMap;\n \n\t\t } else if ( material.emissiveMap ) {\n \n\t\t\t uvScaleMap = material.emissiveMap;\n \n\t\t } else if ( material.clearcoatMap ) {\n \n\t\t\t uvScaleMap = material.clearcoatMap;\n \n\t\t } else if ( material.clearcoatNormalMap ) {\n \n\t\t\t uvScaleMap = material.clearcoatNormalMap;\n \n\t\t } else if ( material.clearcoatRoughnessMap ) {\n \n\t\t\t uvScaleMap = material.clearcoatRoughnessMap;\n \n\t\t }\n \n\t\t if ( uvScaleMap !== undefined ) {\n \n\t\t\t // backwards compatibility\n\t\t\t if ( uvScaleMap.isWebGLRenderTarget ) {\n \n\t\t\t\t uvScaleMap = uvScaleMap.texture;\n \n\t\t\t }\n \n\t\t\t if ( uvScaleMap.matrixAutoUpdate === true ) {\n \n\t\t\t\t uvScaleMap.updateMatrix();\n \n\t\t\t }\n \n\t\t\t uniforms.uvTransform.value.copy( uvScaleMap.matrix );\n \n\t\t }\n \n\t\t // uv repeat and offset setting priorities for uv2\n\t\t // 1. ao map\n\t\t // 2. light map\n \n\t\t let uv2ScaleMap;\n \n\t\t if ( material.aoMap ) {\n \n\t\t\t uv2ScaleMap = material.aoMap;\n \n\t\t } else if ( material.lightMap ) {\n \n\t\t\t uv2ScaleMap = material.lightMap;\n \n\t\t }\n \n\t\t if ( uv2ScaleMap !== undefined ) {\n \n\t\t\t // backwards compatibility\n\t\t\t if ( uv2ScaleMap.isWebGLRenderTarget ) {\n \n\t\t\t\t uv2ScaleMap = uv2ScaleMap.texture;\n \n\t\t\t }\n \n\t\t\t if ( uv2ScaleMap.matrixAutoUpdate === true ) {\n \n\t\t\t\t uv2ScaleMap.updateMatrix();\n \n\t\t\t }\n \n\t\t\t uniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsLine( uniforms, material ) {\n \n\t\t uniforms.diffuse.value.copy( material.color );\n\t\t uniforms.opacity.value = material.opacity;\n \n\t }\n \n\t function refreshUniformsDash( uniforms, material ) {\n \n\t\t uniforms.dashSize.value = material.dashSize;\n\t\t uniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t uniforms.scale.value = material.scale;\n \n\t }\n \n\t function refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n \n\t\t uniforms.diffuse.value.copy( material.color );\n\t\t uniforms.opacity.value = material.opacity;\n\t\t uniforms.size.value = material.size * pixelRatio;\n\t\t uniforms.scale.value = height * 0.5;\n \n\t\t if ( material.map ) {\n \n\t\t\t uniforms.map.value = material.map;\n \n\t\t }\n \n\t\t if ( material.alphaMap ) {\n \n\t\t\t uniforms.alphaMap.value = material.alphaMap;\n \n\t\t }\n \n\t\t // uv repeat and offset setting priorities\n\t\t // 1. color map\n\t\t // 2. alpha map\n \n\t\t let uvScaleMap;\n \n\t\t if ( material.map ) {\n \n\t\t\t uvScaleMap = material.map;\n \n\t\t } else if ( material.alphaMap ) {\n \n\t\t\t uvScaleMap = material.alphaMap;\n \n\t\t }\n \n\t\t if ( uvScaleMap !== undefined ) {\n \n\t\t\t if ( uvScaleMap.matrixAutoUpdate === true ) {\n \n\t\t\t\t uvScaleMap.updateMatrix();\n \n\t\t\t }\n \n\t\t\t uniforms.uvTransform.value.copy( uvScaleMap.matrix );\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsSprites( uniforms, material ) {\n \n\t\t uniforms.diffuse.value.copy( material.color );\n\t\t uniforms.opacity.value = material.opacity;\n\t\t uniforms.rotation.value = material.rotation;\n \n\t\t if ( material.map ) {\n \n\t\t\t uniforms.map.value = material.map;\n \n\t\t }\n \n\t\t if ( material.alphaMap ) {\n \n\t\t\t uniforms.alphaMap.value = material.alphaMap;\n \n\t\t }\n \n\t\t // uv repeat and offset setting priorities\n\t\t // 1. color map\n\t\t // 2. alpha map\n \n\t\t let uvScaleMap;\n \n\t\t if ( material.map ) {\n \n\t\t\t uvScaleMap = material.map;\n \n\t\t } else if ( material.alphaMap ) {\n \n\t\t\t uvScaleMap = material.alphaMap;\n \n\t\t }\n \n\t\t if ( uvScaleMap !== undefined ) {\n \n\t\t\t if ( uvScaleMap.matrixAutoUpdate === true ) {\n \n\t\t\t\t uvScaleMap.updateMatrix();\n \n\t\t\t }\n \n\t\t\t uniforms.uvTransform.value.copy( uvScaleMap.matrix );\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsLambert( uniforms, material ) {\n \n\t\t if ( material.emissiveMap ) {\n \n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsPhong( uniforms, material ) {\n \n\t\t uniforms.specular.value.copy( material.specular );\n\t\t uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n \n\t\t if ( material.emissiveMap ) {\n \n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\n \n\t\t }\n \n\t\t if ( material.bumpMap ) {\n \n\t\t\t uniforms.bumpMap.value = material.bumpMap;\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n \n\t\t }\n \n\t\t if ( material.normalMap ) {\n \n\t\t\t uniforms.normalMap.value = material.normalMap;\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\n \n\t\t }\n \n\t\t if ( material.displacementMap ) {\n \n\t\t\t uniforms.displacementMap.value = material.displacementMap;\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsToon( uniforms, material ) {\n \n\t\t if ( material.gradientMap ) {\n \n\t\t\t uniforms.gradientMap.value = material.gradientMap;\n \n\t\t }\n \n\t\t if ( material.emissiveMap ) {\n \n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\n \n\t\t }\n \n\t\t if ( material.bumpMap ) {\n \n\t\t\t uniforms.bumpMap.value = material.bumpMap;\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n \n\t\t }\n \n\t\t if ( material.normalMap ) {\n \n\t\t\t uniforms.normalMap.value = material.normalMap;\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\n \n\t\t }\n \n\t\t if ( material.displacementMap ) {\n \n\t\t\t uniforms.displacementMap.value = material.displacementMap;\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsStandard( uniforms, material ) {\n \n\t\t uniforms.roughness.value = material.roughness;\n\t\t uniforms.metalness.value = material.metalness;\n \n\t\t if ( material.roughnessMap ) {\n \n\t\t\t uniforms.roughnessMap.value = material.roughnessMap;\n \n\t\t }\n \n\t\t if ( material.metalnessMap ) {\n \n\t\t\t uniforms.metalnessMap.value = material.metalnessMap;\n \n\t\t }\n \n\t\t if ( material.emissiveMap ) {\n \n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\n \n\t\t }\n \n\t\t if ( material.bumpMap ) {\n \n\t\t\t uniforms.bumpMap.value = material.bumpMap;\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n \n\t\t }\n \n\t\t if ( material.normalMap ) {\n \n\t\t\t uniforms.normalMap.value = material.normalMap;\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\n \n\t\t }\n \n\t\t if ( material.displacementMap ) {\n \n\t\t\t uniforms.displacementMap.value = material.displacementMap;\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\n \n\t\t }\n \n\t\t const envMap = properties.get( material ).envMap;\n \n\t\t if ( envMap ) {\n \n\t\t\t //uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t uniforms.envMapIntensity.value = material.envMapIntensity;\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n \n\t\t refreshUniformsStandard( uniforms, material );\n \n\t\t uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n \n\t\t uniforms.clearcoat.value = material.clearcoat;\n\t\t uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n \n\t\t if ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n \n\t\t if ( material.clearcoatMap ) {\n \n\t\t\t uniforms.clearcoatMap.value = material.clearcoatMap;\n \n\t\t }\n \n\t\t if ( material.clearcoatRoughnessMap ) {\n \n\t\t\t uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n \n\t\t }\n \n\t\t if ( material.clearcoatNormalMap ) {\n \n\t\t\t uniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n \n\t\t\t if ( material.side === BackSide ) {\n \n\t\t\t\t uniforms.clearcoatNormalScale.value.negate();\n \n\t\t\t }\n \n\t\t }\n \n\t\t uniforms.transmission.value = material.transmission;\n \n\t\t if ( material.transmissionMap ) {\n \n\t\t\t uniforms.transmissionMap.value = material.transmissionMap;\n \n\t\t }\n \n\t\t if ( material.transmission > 0.0 ) {\n \n\t\t\t uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t uniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n \n\t\t }\n \n\t\t uniforms.thickness.value = material.thickness;\n \n\t\t if ( material.thicknessMap ) {\n \n\t\t\t uniforms.thicknessMap.value = material.thicknessMap;\n \n\t\t }\n \n\t\t uniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t uniforms.attenuationColor.value.copy( material.attenuationColor );\n \n\t }\n \n\t function refreshUniformsMatcap( uniforms, material ) {\n \n\t\t if ( material.matcap ) {\n \n\t\t\t uniforms.matcap.value = material.matcap;\n \n\t\t }\n \n\t\t if ( material.bumpMap ) {\n \n\t\t\t uniforms.bumpMap.value = material.bumpMap;\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n \n\t\t }\n \n\t\t if ( material.normalMap ) {\n \n\t\t\t uniforms.normalMap.value = material.normalMap;\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\n \n\t\t }\n \n\t\t if ( material.displacementMap ) {\n \n\t\t\t uniforms.displacementMap.value = material.displacementMap;\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsDepth( uniforms, material ) {\n \n\t\t if ( material.displacementMap ) {\n \n\t\t\t uniforms.displacementMap.value = material.displacementMap;\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\n \n\t\t }\n \n\t }\n \n\t function refreshUniformsDistance( uniforms, material ) {\n \n\t\t if ( material.displacementMap ) {\n \n\t\t\t uniforms.displacementMap.value = material.displacementMap;\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\n \n\t\t }\n \n\t\t uniforms.referencePosition.value.copy( material.referencePosition );\n\t\t uniforms.nearDistance.value = material.nearDistance;\n\t\t uniforms.farDistance.value = material.farDistance;\n \n\t }\n \n\t function refreshUniformsNormal( uniforms, material ) {\n \n\t\t if ( material.bumpMap ) {\n \n\t\t\t uniforms.bumpMap.value = material.bumpMap;\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n \n\t\t }\n \n\t\t if ( material.normalMap ) {\n \n\t\t\t uniforms.normalMap.value = material.normalMap;\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\n \n\t\t }\n \n\t\t if ( material.displacementMap ) {\n \n\t\t\t uniforms.displacementMap.value = material.displacementMap;\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\n \n\t\t }\n \n\t }\n \n\t return {\n\t\t refreshFogUniforms: refreshFogUniforms,\n\t\t refreshMaterialUniforms: refreshMaterialUniforms\n\t };\n \n }\n \n function createCanvasElement() {\n \n\t const canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t canvas.style.display = 'block';\n\t return canvas;\n \n }\n \n function WebGLRenderer( parameters = {} ) {\n \n\t const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t _context = parameters.context !== undefined ? parameters.context : null,\n \n\t\t _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t _depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n \n\t let currentRenderList = null;\n\t let currentRenderState = null;\n \n\t // render() can be called from within a callback triggered by another render.\n\t // We track this so that the nested render call gets its list and state isolated from the parent render call.\n \n\t const renderListStack = [];\n\t const renderStateStack = [];\n \n\t // public properties\n \n\t this.domElement = _canvas;\n \n\t // Debug configuration container\n\t this.debug = {\n \n\t\t /**\n\t\t  * Enables error checking and reporting when shader programs are being compiled\n\t\t  * @type {boolean}\n\t\t  */\n\t\t checkShaderErrors: true\n\t };\n \n\t // clearing\n \n\t this.autoClear = true;\n\t this.autoClearColor = true;\n\t this.autoClearDepth = true;\n\t this.autoClearStencil = true;\n \n\t // scene graph\n \n\t this.sortObjects = true;\n \n\t // user-defined clipping\n \n\t this.clippingPlanes = [];\n\t this.localClippingEnabled = false;\n \n\t // physically based shading\n \n\t this.gammaFactor = 2.0;\t// for backwards compatibility\n\t this.outputEncoding = LinearEncoding;\n \n\t // physical lights\n \n\t this.physicallyCorrectLights = false;\n \n\t // tone mapping\n \n\t this.toneMapping = NoToneMapping;\n\t this.toneMappingExposure = 1.0;\n \n\t // internal properties\n \n\t const _this = this;\n \n\t let _isContextLost = false;\n \n\t // internal state cache\n \n\t let _currentActiveCubeFace = 0;\n\t let _currentActiveMipmapLevel = 0;\n\t let _currentRenderTarget = null;\n\t let _currentMaterialId = - 1;\n \n\t let _currentCamera = null;\n \n\t const _currentViewport = new Vector4();\n\t const _currentScissor = new Vector4();\n\t let _currentScissorTest = null;\n \n\t //\n \n\t let _width = _canvas.width;\n\t let _height = _canvas.height;\n \n\t let _pixelRatio = 1;\n\t let _opaqueSort = null;\n\t let _transparentSort = null;\n \n\t const _viewport = new Vector4( 0, 0, _width, _height );\n\t const _scissor = new Vector4( 0, 0, _width, _height );\n\t let _scissorTest = false;\n \n\t //\n \n\t const _currentDrawBuffers = [];\n \n\t // frustum\n \n\t const _frustum = new Frustum();\n \n\t // clipping\n \n\t let _clippingEnabled = false;\n\t let _localClippingEnabled = false;\n \n\t // transmission\n \n\t let _transmissionRenderTarget = null;\n \n\t // camera matrices cache\n \n\t const _projScreenMatrix = new Matrix4();\n \n\t const _vector3 = new Vector3();\n \n\t const _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n \n\t function getTargetPixelRatio() {\n \n\t\t return _currentRenderTarget === null ? _pixelRatio : 1;\n \n\t }\n \n\t // initialize\n \n\t let _gl = _context;\n \n\t function getContext( contextNames, contextAttributes ) {\n \n\t\t for ( let i = 0; i < contextNames.length; i ++ ) {\n \n\t\t\t const contextName = contextNames[ i ];\n\t\t\t const context = _canvas.getContext( contextName, contextAttributes );\n\t\t\t if ( context !== null ) return context;\n \n\t\t }\n \n\t\t return null;\n \n\t }\n \n\t try {\n \n\t\t const contextAttributes = {\n\t\t\t alpha: _alpha,\n\t\t\t depth: _depth,\n\t\t\t stencil: _stencil,\n\t\t\t antialias: _antialias,\n\t\t\t premultipliedAlpha: _premultipliedAlpha,\n\t\t\t preserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t powerPreference: _powerPreference,\n\t\t\t failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t };\n \n\t\t // event listeners must be registered before WebGL context is created, see #12753\n \n\t\t _canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t _canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n \n\t\t if ( _gl === null ) {\n \n\t\t\t const contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n \n\t\t\t console.log('this',_this.isWebGL1Renderer)\n\t\t\t if ( _this.isWebGL1Renderer === true ) {\n \n\t\t\t\t contextNames.shift();\n \n\t\t\t }\n \n\t\t\t _gl = getContext( contextNames, contextAttributes );\n \n\t\t\t if ( _gl === null ) {\n \n\t\t\t\t if ( getContext( contextNames ) ) {\n \n\t\t\t\t\t throw new Error( 'Error creating WebGL context with your selected attributes.' );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t throw new Error( 'Error creating WebGL context.' );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n \n\t\t if ( _gl.getShaderPrecisionFormat === undefined ) {\n \n\t\t\t _gl.getShaderPrecisionFormat = function () {\n \n\t\t\t\t return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n \n\t\t\t };\n \n\t\t }\n \n\t } catch ( error ) {\n \n\t\t console.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t throw error;\n \n\t }\n \n\t let extensions, capabilities, state, info;\n\t let properties, textures, cubemaps, attributes, geometries, objects;\n\t let programCache, materials, renderLists, renderStates, clipping, shadowMap;\n \n\t let background, morphtargets, bufferRenderer, indexedBufferRenderer;\n \n\t let utils, bindingStates;\n \n\t function initGLContext() {\n \n\t\t extensions = new WebGLExtensions( _gl );\n \n\t\t capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n \n\t\t extensions.init( capabilities );\n \n\t\t utils = new WebGLUtils( _gl, extensions, capabilities );\n \n\t\t state = new WebGLState( _gl, extensions, capabilities );\n \n\t\t _currentDrawBuffers[ 0 ] = 1029;\n \n\t\t info = new WebGLInfo( _gl );\n\t\t properties = new WebGLProperties();\n\t\t textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t cubemaps = new WebGLCubeMaps( _this );\n\t\t attributes = new WebGLAttributes( _gl, capabilities );\n\t\t bindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t geometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t objects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t morphtargets = new WebGLMorphtargets( _gl );\n\t\t clipping = new WebGLClipping( properties );\n\t\t programCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\t materials = new WebGLMaterials( properties );\n\t\t renderLists = new WebGLRenderLists( properties );\n\t\t renderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t background = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\t\t shadowMap = new WebGLShadowMap( _this, objects, capabilities );\n \n\t\t bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n \n\t\t info.programs = programCache.programs;\n \n\t\t _this.capabilities = capabilities;\n\t\t _this.extensions = extensions;\n\t\t _this.properties = properties;\n\t\t _this.renderLists = renderLists;\n\t\t _this.shadowMap = shadowMap;\n\t\t _this.state = state;\n\t\t _this.info = info;\n \n\t }\n \n\t initGLContext();\n \n\t // xr\n \n\t const xr = new WebXRManager( _this, _gl );\n \n\t this.xr = xr;\n \n\t // API\n \n\t this.getContext = function () {\n \n\t\t return _gl;\n \n\t };\n \n\t this.getContextAttributes = function () {\n \n\t\t return _gl.getContextAttributes();\n \n\t };\n \n\t this.forceContextLoss = function () {\n \n\t\t const extension = extensions.get( 'WEBGL_lose_context' );\n\t\t if ( extension ) extension.loseContext();\n \n\t };\n \n\t this.forceContextRestore = function () {\n \n\t\t const extension = extensions.get( 'WEBGL_lose_context' );\n\t\t if ( extension ) extension.restoreContext();\n \n\t };\n \n\t this.getPixelRatio = function () {\n \n\t\t return _pixelRatio;\n \n\t };\n \n\t this.setPixelRatio = function ( value ) {\n \n\t\t if ( value === undefined ) return;\n \n\t\t _pixelRatio = value;\n \n\t\t this.setSize( _width, _height, false );\n \n\t };\n \n\t this.getSize = function ( target ) {\n \n\t\t return target.set( _width, _height );\n \n\t };\n \n\t this.setSize = function ( width, height, updateStyle ) {\n \n\t\t if ( xr.isPresenting ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t _width = width;\n\t\t _height = height;\n \n\t\t _canvas.width = Math.floor( width * _pixelRatio );\n\t\t _canvas.height = Math.floor( height * _pixelRatio );\n \n\t\t if ( updateStyle !== false ) {\n \n\t\t\t _canvas.style.width = width + 'px';\n\t\t\t _canvas.style.height = height + 'px';\n \n\t\t }\n \n\t\t this.setViewport( 0, 0, width, height );\n \n\t };\n \n\t this.getDrawingBufferSize = function ( target ) {\n \n\t\t return target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n \n\t };\n \n\t this.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n \n\t\t _width = width;\n\t\t _height = height;\n \n\t\t _pixelRatio = pixelRatio;\n \n\t\t _canvas.width = Math.floor( width * pixelRatio );\n\t\t _canvas.height = Math.floor( height * pixelRatio );\n \n\t\t this.setViewport( 0, 0, width, height );\n \n\t };\n \n\t this.getCurrentViewport = function ( target ) {\n \n\t\t return target.copy( _currentViewport );\n \n\t };\n \n\t this.getViewport = function ( target ) {\n \n\t\t return target.copy( _viewport );\n \n\t };\n \n\t this.setViewport = function ( x, y, width, height ) {\n \n\t\t if ( x.isVector4 ) {\n \n\t\t\t _viewport.set( x.x, x.y, x.z, x.w );\n \n\t\t } else {\n \n\t\t\t _viewport.set( x, y, width, height );\n \n\t\t }\n \n\t\t state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n \n\t };\n \n\t this.getScissor = function ( target ) {\n \n\t\t return target.copy( _scissor );\n \n\t };\n \n\t this.setScissor = function ( x, y, width, height ) {\n \n\t\t if ( x.isVector4 ) {\n \n\t\t\t _scissor.set( x.x, x.y, x.z, x.w );\n \n\t\t } else {\n \n\t\t\t _scissor.set( x, y, width, height );\n \n\t\t }\n \n\t\t state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n \n\t };\n \n\t this.getScissorTest = function () {\n \n\t\t return _scissorTest;\n \n\t };\n \n\t this.setScissorTest = function ( boolean ) {\n \n\t\t state.setScissorTest( _scissorTest = boolean );\n \n\t };\n \n\t this.setOpaqueSort = function ( method ) {\n \n\t\t _opaqueSort = method;\n \n\t };\n \n\t this.setTransparentSort = function ( method ) {\n \n\t\t _transparentSort = method;\n \n\t };\n \n\t // Clearing\n \n\t this.getClearColor = function ( target ) {\n \n\t\t return target.copy( background.getClearColor() );\n \n\t };\n \n\t this.setClearColor = function () {\n \n\t\t background.setClearColor.apply( background, arguments );\n \n\t };\n \n\t this.getClearAlpha = function () {\n \n\t\t return background.getClearAlpha();\n \n\t };\n \n\t this.setClearAlpha = function () {\n \n\t\t background.setClearAlpha.apply( background, arguments );\n \n\t };\n \n\t this.clear = function ( color, depth, stencil ) {\n \n\t\t let bits = 0;\n \n\t\t if ( color === undefined || color ) bits |= 16384;\n\t\t if ( depth === undefined || depth ) bits |= 256;\n\t\t if ( stencil === undefined || stencil ) bits |= 1024;\n \n\t\t _gl.clear( bits );\n \n\t };\n \n\t this.clearColor = function () {\n \n\t\t this.clear( true, false, false );\n \n\t };\n \n\t this.clearDepth = function () {\n \n\t\t this.clear( false, true, false );\n \n\t };\n \n\t this.clearStencil = function () {\n \n\t\t this.clear( false, false, true );\n \n\t };\n \n\t //\n \n\t this.dispose = function () {\n \n\t\t _canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t _canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n \n\t\t renderLists.dispose();\n\t\t renderStates.dispose();\n\t\t properties.dispose();\n\t\t cubemaps.dispose();\n\t\t objects.dispose();\n\t\t bindingStates.dispose();\n \n\t\t xr.dispose();\n \n\t\t xr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t xr.removeEventListener( 'sessionend', onXRSessionEnd );\n \n\t\t if ( _transmissionRenderTarget ) {\n \n\t\t\t _transmissionRenderTarget.dispose();\n\t\t\t _transmissionRenderTarget = null;\n \n\t\t }\n \n\t\t animation.stop();\n \n\t };\n \n\t // Events\n \n\t function onContextLost( event ) {\n \n\t\t event.preventDefault();\n \n\t\t console.log( 'THREE.WebGLRenderer: Context Lost.' );\n \n\t\t _isContextLost = true;\n \n\t }\n \n\t function onContextRestore( /* event */ ) {\n \n\t\t console.log( 'THREE.WebGLRenderer: Context Restored.' );\n \n\t\t _isContextLost = false;\n \n\t\t const infoAutoReset = info.autoReset;\n\t\t const shadowMapEnabled = shadowMap.enabled;\n\t\t const shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t const shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t const shadowMapType = shadowMap.type;\n \n\t\t initGLContext();\n \n\t\t info.autoReset = infoAutoReset;\n\t\t shadowMap.enabled = shadowMapEnabled;\n\t\t shadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t shadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t shadowMap.type = shadowMapType;\n \n\t }\n \n\t function onMaterialDispose( event ) {\n \n\t\t const material = event.target;\n \n\t\t material.removeEventListener( 'dispose', onMaterialDispose );\n \n\t\t deallocateMaterial( material );\n \n\t }\n \n\t // Buffer deallocation\n \n\t function deallocateMaterial( material ) {\n \n\t\t releaseMaterialProgramReferences( material );\n \n\t\t properties.remove( material );\n \n\t }\n \n \n\t function releaseMaterialProgramReferences( material ) {\n \n\t\t const programs = properties.get( material ).programs;\n \n\t\t if ( programs !== undefined ) {\n \n\t\t\t programs.forEach( function ( program ) {\n \n\t\t\t\t programCache.releaseProgram( program );\n \n\t\t\t } );\n \n\t\t }\n \n\t }\n \n\t // Buffer rendering\n \n\t function renderObjectImmediate( object, program ) {\n \n\t\t object.render( function ( object ) {\n \n\t\t\t _this.renderBufferImmediate( object, program );\n \n\t\t } );\n \n\t }\n \n\t this.renderBufferImmediate = function ( object, program ) {\n \n\t\t bindingStates.initAttributes();\n \n\t\t const buffers = properties.get( object );\n \n\t\t if ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\t if ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\t if ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\t if ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n \n\t\t const programAttributes = program.getAttributes();\n \n\t\t if ( object.hasPositions ) {\n \n\t\t\t _gl.bindBuffer( 34962, buffers.position );\n\t\t\t _gl.bufferData( 34962, object.positionArray, 35048 );\n \n\t\t\t bindingStates.enableAttribute( programAttributes.position );\n\t\t\t _gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n \n\t\t }\n \n\t\t if ( object.hasNormals ) {\n \n\t\t\t _gl.bindBuffer( 34962, buffers.normal );\n\t\t\t _gl.bufferData( 34962, object.normalArray, 35048 );\n \n\t\t\t bindingStates.enableAttribute( programAttributes.normal );\n\t\t\t _gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n \n\t\t }\n \n\t\t if ( object.hasUvs ) {\n \n\t\t\t _gl.bindBuffer( 34962, buffers.uv );\n\t\t\t _gl.bufferData( 34962, object.uvArray, 35048 );\n \n\t\t\t bindingStates.enableAttribute( programAttributes.uv );\n\t\t\t _gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n \n\t\t }\n \n\t\t if ( object.hasColors ) {\n \n\t\t\t _gl.bindBuffer( 34962, buffers.color );\n\t\t\t _gl.bufferData( 34962, object.colorArray, 35048 );\n \n\t\t\t bindingStates.enableAttribute( programAttributes.color );\n\t\t\t _gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n \n\t\t }\n \n\t\t bindingStates.disableUnusedAttributes();\n \n\t\t _gl.drawArrays( 4, 0, object.count );\n \n\t\t object.count = 0;\n \n\t };\n \n\t this.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n \n\t\t if ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n \n\t\t const frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n \n\t\t const program = setProgram( camera, scene, material, object );\n \n\t\t state.setMaterial( material, frontFaceCW );\n \n\t\t //\n \n\t\t let index = geometry.index;\n\t\t const position = geometry.attributes.position;\n \n\t\t //\n \n\t\t if ( index === null ) {\n \n\t\t\t if ( position === undefined || position.count === 0 ) return;\n \n\t\t } else if ( index.count === 0 ) {\n \n\t\t\t return;\n \n\t\t }\n \n\t\t //\n \n\t\t let rangeFactor = 1;\n \n\t\t if ( material.wireframe === true ) {\n \n\t\t\t index = geometries.getWireframeAttribute( geometry );\n\t\t\t rangeFactor = 2;\n \n\t\t }\n \n\t\t if ( material.morphTargets || material.morphNormals ) {\n \n\t\t\t morphtargets.update( object, geometry, material, program );\n \n\t\t }\n \n\t\t bindingStates.setup( object, material, program, geometry, index );\n \n\t\t let attribute;\n\t\t let renderer = bufferRenderer;\n \n\t\t if ( index !== null ) {\n \n\t\t\t attribute = attributes.get( index );\n \n\t\t\t renderer = indexedBufferRenderer;\n\t\t\t renderer.setIndex( attribute );\n \n\t\t }\n \n\t\t //\n \n\t\t const dataCount = ( index !== null ) ? index.count : position.count;\n \n\t\t const rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t const rangeCount = geometry.drawRange.count * rangeFactor;\n \n\t\t const groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t const groupCount = group !== null ? group.count * rangeFactor : Infinity;\n \n\t\t const drawStart = Math.max( rangeStart, groupStart );\n\t\t const drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n \n\t\t const drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n \n\t\t if ( drawCount === 0 ) return;\n \n\t\t //\n \n\t\t if ( object.isMesh ) {\n \n\t\t\t if ( material.wireframe === true ) {\n \n\t\t\t\t state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t renderer.setMode( 1 );\n \n\t\t\t } else {\n \n\t\t\t\t renderer.setMode( 4 );\n \n\t\t\t }\n \n\t\t } else if ( object.isLine ) {\n \n\t\t\t let lineWidth = material.linewidth;\n \n\t\t\t if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n \n\t\t\t state.setLineWidth( lineWidth * getTargetPixelRatio() );\n \n\t\t\t if ( object.isLineSegments ) {\n \n\t\t\t\t renderer.setMode( 1 );\n \n\t\t\t } else if ( object.isLineLoop ) {\n \n\t\t\t\t renderer.setMode( 2 );\n \n\t\t\t } else {\n \n\t\t\t\t renderer.setMode( 3 );\n \n\t\t\t }\n \n\t\t } else if ( object.isPoints ) {\n \n\t\t\t renderer.setMode( 0 );\n \n\t\t } else if ( object.isSprite ) {\n \n\t\t\t renderer.setMode( 4 );\n \n\t\t }\n \n\t\t if ( object.isInstancedMesh ) {\n \n\t\t\t renderer.renderInstances( drawStart, drawCount, object.count );\n \n\t\t } else if ( geometry.isInstancedBufferGeometry ) {\n \n\t\t\t const instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n \n\t\t\t renderer.renderInstances( drawStart, drawCount, instanceCount );\n \n\t\t } else {\n \n\t\t\t renderer.render( drawStart, drawCount );\n \n\t\t }\n \n\t };\n \n\t // Compile\n \n\t this.compile = function ( scene, camera ) {\n \n\t\t currentRenderState = renderStates.get( scene );\n\t\t currentRenderState.init();\n \n\t\t scene.traverseVisible( function ( object ) {\n \n\t\t\t if ( object.isLight && object.layers.test( camera.layers ) ) {\n \n\t\t\t\t currentRenderState.pushLight( object );\n \n\t\t\t\t if ( object.castShadow ) {\n \n\t\t\t\t\t currentRenderState.pushShadow( object );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } );\n \n\t\t currentRenderState.setupLights();\n \n\t\t scene.traverse( function ( object ) {\n \n\t\t\t const material = object.material;\n \n\t\t\t if ( material ) {\n \n\t\t\t\t if ( Array.isArray( material ) ) {\n \n\t\t\t\t\t for ( let i = 0; i < material.length; i ++ ) {\n \n\t\t\t\t\t\t const material2 = material[ i ];\n \n\t\t\t\t\t\t getProgram( material2, scene, object );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t getProgram( material, scene, object );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } );\n \n\t };\n \n\t // Animation Loop\n \n\t let onAnimationFrameCallback = null;\n \n\t function onAnimationFrame( time ) {\n \n\t\t if ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n \n\t }\n \n\t function onXRSessionStart() {\n \n\t\t animation.stop();\n \n\t }\n \n\t function onXRSessionEnd() {\n \n\t\t animation.start();\n \n\t }\n \n\t const animation = new WebGLAnimation();\n\t animation.setAnimationLoop( onAnimationFrame );\n \n\t if ( typeof window !== 'undefined' ) animation.setContext( window );\n \n\t this.setAnimationLoop = function ( callback ) {\n \n\t\t onAnimationFrameCallback = callback;\n\t\t xr.setAnimationLoop( callback );\n \n\t\t ( callback === null ) ? animation.stop() : animation.start();\n \n\t };\n \n\t xr.addEventListener( 'sessionstart', onXRSessionStart );\n\t xr.addEventListener( 'sessionend', onXRSessionEnd );\n \n\t // Rendering\n \n\t this.render = function ( scene, camera ) {\n \n\t\t if ( camera !== undefined && camera.isCamera !== true ) {\n \n\t\t\t console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t if ( _isContextLost === true ) return;\n \n\t\t // update scene graph\n \n\t\t if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n \n\t\t // update camera matrices and frustum\n \n\t\t if ( camera.parent === null ) camera.updateMatrixWorld();\n \n\t\t if ( xr.enabled === true && xr.isPresenting === true ) {\n \n\t\t\t if ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n \n\t\t\t camera = xr.getCamera(); // use XR camera for rendering\n \n\t\t }\n \n\t\t //\n\t\t if ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n \n\t\t currentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t currentRenderState.init();\n \n\t\t renderStateStack.push( currentRenderState );\n \n\t\t _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t _frustum.setFromProjectionMatrix( _projScreenMatrix );\n \n\t\t _localClippingEnabled = this.localClippingEnabled;\n\t\t _clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n \n\t\t currentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t currentRenderList.init();\n \n\t\t renderListStack.push( currentRenderList );\n \n\t\t projectObject( scene, camera, 0, _this.sortObjects );\n \n\t\t currentRenderList.finish();\n \n\t\t if ( _this.sortObjects === true ) {\n \n\t\t\t currentRenderList.sort( _opaqueSort, _transparentSort );\n \n\t\t }\n \n\t\t //\n \n\t\t if ( _clippingEnabled === true ) clipping.beginShadows();\n \n\t\t const shadowsArray = currentRenderState.state.shadowsArray;\n \n\t\t shadowMap.render( shadowsArray, scene, camera );\n \n\t\t currentRenderState.setupLights();\n\t\t currentRenderState.setupLightsView( camera );\n \n\t\t if ( _clippingEnabled === true ) clipping.endShadows();\n \n\t\t //\n \n\t\t if ( this.info.autoReset === true ) this.info.reset();\n \n\t\t //\n \n\t\t background.render( currentRenderList, scene );\n \n\t\t // render scene\n \n\t\t const opaqueObjects = currentRenderList.opaque;\n\t\t const transmissiveObjects = currentRenderList.transmissive;\n\t\t const transparentObjects = currentRenderList.transparent;\n \n\t\t if ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t if ( transmissiveObjects.length > 0 ) renderTransmissiveObjects( opaqueObjects, transmissiveObjects, scene, camera );\n\t\t if ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n \n\t\t //\n \n\t\t if ( _currentRenderTarget !== null ) {\n \n\t\t\t // Generate mipmap if we're using any kind of mipmap filtering\n \n\t\t\t textures.updateRenderTargetMipmap( _currentRenderTarget );\n \n\t\t\t // resolve multisample renderbuffers to a single-sample texture if necessary\n \n\t\t\t textures.updateMultisampleRenderTarget( _currentRenderTarget );\n \n\t\t }\n \n\t\t //\n \n\t\t if ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n \n\t\t // Ensure depth buffer writing is enabled so it can be cleared on next render\n \n\t\t state.buffers.depth.setTest( true );\n\t\t state.buffers.depth.setMask( true );\n\t\t state.buffers.color.setMask( true );\n \n\t\t state.setPolygonOffset( false );\n \n\t\t // _gl.finish();\n \n\t\t bindingStates.resetDefaultState();\n\t\t _currentMaterialId = - 1;\n\t\t _currentCamera = null;\n \n\t\t renderStateStack.pop();\n \n\t\t if ( renderStateStack.length > 0 ) {\n \n\t\t\t currentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n \n\t\t } else {\n \n\t\t\t currentRenderState = null;\n \n\t\t }\n \n\t\t renderListStack.pop();\n \n\t\t if ( renderListStack.length > 0 ) {\n \n\t\t\t currentRenderList = renderListStack[ renderListStack.length - 1 ];\n \n\t\t } else {\n \n\t\t\t currentRenderList = null;\n \n\t\t }\n \n\t };\n \n\t function projectObject( object, camera, groupOrder, sortObjects ) {\n \n\t\t if ( object.visible === false ) return;\n \n\t\t const visible = object.layers.test( camera.layers );\n \n\t\t if ( visible ) {\n \n\t\t\t if ( object.isGroup ) {\n \n\t\t\t\t groupOrder = object.renderOrder;\n \n\t\t\t } else if ( object.isLOD ) {\n \n\t\t\t\t if ( object.autoUpdate === true ) object.update( camera );\n \n\t\t\t } else if ( object.isLight ) {\n \n\t\t\t\t currentRenderState.pushLight( object );\n \n\t\t\t\t if ( object.castShadow ) {\n \n\t\t\t\t\t currentRenderState.pushShadow( object );\n \n\t\t\t\t }\n \n\t\t\t } else if ( object.isSprite ) {\n \n\t\t\t\t if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n \n\t\t\t\t\t if ( sortObjects ) {\n \n\t\t\t\t\t\t _vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t .applyMatrix4( _projScreenMatrix );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t const geometry = objects.update( object );\n\t\t\t\t\t const material = object.material;\n \n\t\t\t\t\t if ( material.visible ) {\n \n\t\t\t\t\t\t currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t } else if ( object.isImmediateRenderObject ) {\n \n\t\t\t\t if ( sortObjects ) {\n \n\t\t\t\t\t _vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t .applyMatrix4( _projScreenMatrix );\n \n\t\t\t\t }\n \n\t\t\t\t currentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n \n\t\t\t } else if ( object.isMesh || object.isLine || object.isPoints ) {\n \n\t\t\t\t if ( object.isSkinnedMesh ) {\n \n\t\t\t\t\t // update skeleton only once in a frame\n \n\t\t\t\t\t if ( object.skeleton.frame !== info.render.frame ) {\n \n\t\t\t\t\t\t object.skeleton.update();\n\t\t\t\t\t\t object.skeleton.frame = info.render.frame;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n \n\t\t\t\t\t if ( sortObjects ) {\n \n\t\t\t\t\t\t _vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t .applyMatrix4( _projScreenMatrix );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t const geometry = objects.update( object );\n\t\t\t\t\t const material = object.material;\n \n\t\t\t\t\t if ( Array.isArray( material ) ) {\n \n\t\t\t\t\t\t const groups = geometry.groups;\n \n\t\t\t\t\t\t for ( let i = 0, l = groups.length; i < l; i ++ ) {\n \n\t\t\t\t\t\t\t const group = groups[ i ];\n\t\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\n \n\t\t\t\t\t\t\t if ( groupMaterial && groupMaterial.visible ) {\n \n\t\t\t\t\t\t\t\t currentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t } else if ( material.visible ) {\n \n\t\t\t\t\t\t currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t const children = object.children;\n \n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t projectObject( children[ i ], camera, groupOrder, sortObjects );\n \n\t\t }\n \n\t }\n \n\t function renderTransmissiveObjects( opaqueObjects, transmissiveObjects, scene, camera ) {\n \n\t\t if ( _transmissionRenderTarget === null ) {\n \n\t\t\t const needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n\t\t\t const renderTargetType = needsAntialias ? WebGLMultisampleRenderTarget : WebGLRenderTarget;\n \n\t\t\t _transmissionRenderTarget = new renderTargetType( 1024, 1024, {\n\t\t\t\t generateMipmaps: true,\n\t\t\t\t type: utils.convert( HalfFloatType ) !== null ? HalfFloatType : UnsignedByteType,\n\t\t\t\t minFilter: LinearMipmapLinearFilter,\n\t\t\t\t magFilter: NearestFilter,\n\t\t\t\t wrapS: ClampToEdgeWrapping,\n\t\t\t\t wrapT: ClampToEdgeWrapping\n\t\t\t } );\n \n\t\t }\n \n\t\t const currentRenderTarget = _this.getRenderTarget();\n\t\t _this.setRenderTarget( _transmissionRenderTarget );\n\t\t _this.clear();\n \n\t\t // Turn off the features which can affect the frag color for opaque objects pass.\n\t\t // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t const currentToneMapping = _this.toneMapping;\n\t\t _this.toneMapping = NoToneMapping;\n \n\t\t renderObjects( opaqueObjects, scene, camera );\n \n\t\t _this.toneMapping = currentToneMapping;\n \n\t\t textures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t textures.updateRenderTargetMipmap( _transmissionRenderTarget );\n \n\t\t _this.setRenderTarget( currentRenderTarget );\n \n\t\t renderObjects( transmissiveObjects, scene, camera );\n \n\t }\n \n\t function renderObjects( renderList, scene, camera ) {\n \n\t\t const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n \n\t\t for ( let i = 0, l = renderList.length; i < l; i ++ ) {\n \n\t\t\t const renderItem = renderList[ i ];\n \n\t\t\t const object = renderItem.object;\n\t\t\t const geometry = renderItem.geometry;\n\t\t\t const material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t const group = renderItem.group;\n \n\t\t\t if ( camera.isArrayCamera ) {\n \n\t\t\t\t const cameras = camera.cameras;\n \n\t\t\t\t for ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n \n\t\t\t\t\t const camera2 = cameras[ j ];\n \n\t\t\t\t\t if ( object.layers.test( camera2.layers ) ) {\n \n\t\t\t\t\t\t state.viewport( _currentViewport.copy( camera2.viewport ) );\n \n\t\t\t\t\t\t currentRenderState.setupLightsView( camera2 );\n \n\t\t\t\t\t\t renderObject( object, scene, camera2, geometry, material, group );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t renderObject( object, scene, camera, geometry, material, group );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t function renderObject( object, scene, camera, geometry, material, group ) {\n \n\t\t object.onBeforeRender( _this, scene, camera, geometry, material, group );\n \n\t\t object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t object.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n \n\t\t if ( object.isImmediateRenderObject ) {\n \n\t\t\t const program = setProgram( camera, scene, material, object );\n \n\t\t\t state.setMaterial( material );\n \n\t\t\t bindingStates.reset();\n \n\t\t\t renderObjectImmediate( object, program );\n \n\t\t } else {\n \n\t\t\t if ( material.transparent === true && material.side === DoubleSide ) {\n \n\t\t\t\t material.side = BackSide;\n\t\t\t\t material.needsUpdate = true;\n\t\t\t\t _this.renderBufferDirect( camera, scene, geometry, material, object, group );\n \n\t\t\t\t material.side = FrontSide;\n\t\t\t\t material.needsUpdate = true;\n\t\t\t\t _this.renderBufferDirect( camera, scene, geometry, material, object, group );\n \n\t\t\t\t material.side = DoubleSide;\n \n\t\t\t } else {\n \n\t\t\t\t _this.renderBufferDirect( camera, scene, geometry, material, object, group );\n \n\t\t\t }\n \n\t\t }\n \n\t\t object.onAfterRender( _this, scene, camera, geometry, material, group );\n \n\t }\n \n\t function getProgram( material, scene, object ) {\n \n\t\t if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n \n\t\t const materialProperties = properties.get( material );\n \n\t\t const lights = currentRenderState.state.lights;\n\t\t const shadowsArray = currentRenderState.state.shadowsArray;\n \n\t\t const lightsStateVersion = lights.state.version;\n \n\t\t const parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t const programCacheKey = programCache.getProgramCacheKey( parameters );\n \n\t\t let programs = materialProperties.programs;\n \n\t\t // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n \n\t\t materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t materialProperties.fog = scene.fog;\n\t\t materialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n \n\t\t if ( programs === undefined ) {\n \n\t\t\t // new material\n \n\t\t\t material.addEventListener( 'dispose', onMaterialDispose );\n \n\t\t\t programs = new Map();\n\t\t\t materialProperties.programs = programs;\n \n\t\t }\n \n\t\t let program = programs.get( programCacheKey );\n \n\t\t if ( program !== undefined ) {\n \n\t\t\t // early out if program and light state is identical\n \n\t\t\t if ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n \n\t\t\t\t updateCommonMaterialProperties( material, parameters );\n \n\t\t\t\t return program;\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t parameters.uniforms = programCache.getUniforms( material );\n \n\t\t\t material.onBuild( parameters, _this );\n \n\t\t\t material.onBeforeCompile( parameters, _this );\n \n\t\t\t program = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t programs.set( programCacheKey, program );\n \n\t\t\t materialProperties.uniforms = parameters.uniforms;\n \n\t\t }\n \n\t\t const uniforms = materialProperties.uniforms;\n \n\t\t if ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n \n\t\t\t uniforms.clippingPlanes = clipping.uniform;\n \n\t\t }\n \n\t\t updateCommonMaterialProperties( material, parameters );\n \n\t\t // store the light setup it was created for\n \n\t\t materialProperties.needsLights = materialNeedsLights( material );\n\t\t materialProperties.lightsStateVersion = lightsStateVersion;\n \n\t\t if ( materialProperties.needsLights ) {\n \n\t\t\t // wire up the material to this renderer's lighting state\n \n\t\t\t uniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t uniforms.lightProbe.value = lights.state.probe;\n\t\t\t uniforms.directionalLights.value = lights.state.directional;\n\t\t\t uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t uniforms.spotLights.value = lights.state.spot;\n\t\t\t uniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t uniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t uniforms.pointLights.value = lights.state.point;\n\t\t\t uniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t uniforms.hemisphereLights.value = lights.state.hemi;\n \n\t\t\t uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t // TODO (abelnation): add area lights shadow info to uniforms\n \n\t\t }\n \n\t\t const progUniforms = program.getUniforms();\n\t\t const uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n \n\t\t materialProperties.currentProgram = program;\n\t\t materialProperties.uniformsList = uniformsList;\n \n\t\t return program;\n \n\t }\n \n\t function updateCommonMaterialProperties( material, parameters ) {\n \n\t\t const materialProperties = properties.get( material );\n \n\t\t materialProperties.outputEncoding = parameters.outputEncoding;\n\t\t materialProperties.instancing = parameters.instancing;\n\t\t materialProperties.skinning = parameters.skinning;\n\t\t materialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t materialProperties.numIntersection = parameters.numClipIntersection;\n\t\t materialProperties.vertexAlphas = parameters.vertexAlphas;\n \n\t }\n \n\t function setProgram( camera, scene, material, object ) {\n \n\t\t if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n \n\t\t textures.resetTextureUnits();\n \n\t\t const fog = scene.fog;\n\t\t const environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t const encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\t const envMap = cubemaps.get( material.envMap || environment );\n\t\t const vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n \n\t\t const materialProperties = properties.get( material );\n\t\t const lights = currentRenderState.state.lights;\n \n\t\t if ( _clippingEnabled === true ) {\n \n\t\t\t if ( _localClippingEnabled === true || camera !== _currentCamera ) {\n \n\t\t\t\t const useCache =\n\t\t\t\t\t camera === _currentCamera &&\n\t\t\t\t\t material.id === _currentMaterialId;\n \n\t\t\t\t // we might want to call this function with some ClippingGroup\n\t\t\t\t // object instead of the material, once it becomes feasible\n\t\t\t\t // (#8465, #8379)\n\t\t\t\t clipping.setState( material, camera, useCache );\n \n\t\t\t }\n \n\t\t }\n \n\t\t //\n \n\t\t let needsProgramChange = false;\n \n\t\t if ( material.version === materialProperties.__version ) {\n \n\t\t\t if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( materialProperties.outputEncoding !== encoding ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( materialProperties.envMap !== envMap ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( material.fog && materialProperties.fog !== fog ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t ( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t materialProperties.numIntersection !== clipping.numIntersection ) ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t } else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n \n\t\t\t\t needsProgramChange = true;\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t needsProgramChange = true;\n\t\t\t materialProperties.__version = material.version;\n \n\t\t }\n \n\t\t //\n \n\t\t let program = materialProperties.currentProgram;\n \n\t\t if ( needsProgramChange === true ) {\n \n\t\t\t program = getProgram( material, scene, object );\n \n\t\t }\n \n\t\t let refreshProgram = false;\n\t\t let refreshMaterial = false;\n\t\t let refreshLights = false;\n \n\t\t const p_uniforms = program.getUniforms(),\n\t\t\t m_uniforms = materialProperties.uniforms;\n \n\t\t if ( state.useProgram( program.program ) ) {\n \n\t\t\t refreshProgram = true;\n\t\t\t refreshMaterial = true;\n\t\t\t refreshLights = true;\n \n\t\t }\n \n\t\t if ( material.id !== _currentMaterialId ) {\n \n\t\t\t _currentMaterialId = material.id;\n \n\t\t\t refreshMaterial = true;\n \n\t\t }\n \n\t\t if ( refreshProgram || _currentCamera !== camera ) {\n \n\t\t\t p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n \n\t\t\t if ( capabilities.logarithmicDepthBuffer ) {\n \n\t\t\t\t p_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n \n\t\t\t }\n \n\t\t\t if ( _currentCamera !== camera ) {\n \n\t\t\t\t _currentCamera = camera;\n \n\t\t\t\t // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t // now, in case this material supports lights - or later, when\n\t\t\t\t // the next material that does gets activated:\n \n\t\t\t\t refreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t refreshLights = true;\t\t// remains set until update done\n \n\t\t\t }\n \n\t\t\t // load material specific uniforms\n\t\t\t // (shader material also gets them for the sake of genericity)\n \n\t\t\t if ( material.isShaderMaterial ||\n\t\t\t\t material.isMeshPhongMaterial ||\n\t\t\t\t material.isMeshToonMaterial ||\n\t\t\t\t material.isMeshStandardMaterial ||\n\t\t\t\t material.envMap ) {\n \n\t\t\t\t const uCamPos = p_uniforms.map.cameraPosition;\n \n\t\t\t\t if ( uCamPos !== undefined ) {\n \n\t\t\t\t\t uCamPos.setValue( _gl,\n\t\t\t\t\t\t _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( material.isMeshPhongMaterial ||\n\t\t\t\t material.isMeshToonMaterial ||\n\t\t\t\t material.isMeshLambertMaterial ||\n\t\t\t\t material.isMeshBasicMaterial ||\n\t\t\t\t material.isMeshStandardMaterial ||\n\t\t\t\t material.isShaderMaterial ) {\n \n\t\t\t\t p_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n \n\t\t\t }\n \n\t\t\t if ( material.isMeshPhongMaterial ||\n\t\t\t\t material.isMeshToonMaterial ||\n\t\t\t\t material.isMeshLambertMaterial ||\n\t\t\t\t material.isMeshBasicMaterial ||\n\t\t\t\t material.isMeshStandardMaterial ||\n\t\t\t\t material.isShaderMaterial ||\n\t\t\t\t material.isShadowMaterial ||\n\t\t\t\t object.isSkinnedMesh ) {\n \n\t\t\t\t p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // skinning uniforms must be set even if material didn't change\n\t\t // auto-setting of texture unit for bone texture must go before other textures\n\t\t // otherwise textures used for skinning can take over texture units reserved for other material textures\n \n\t\t if ( object.isSkinnedMesh ) {\n \n\t\t\t p_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n \n\t\t\t const skeleton = object.skeleton;\n \n\t\t\t if ( skeleton ) {\n \n\t\t\t\t if ( capabilities.floatVertexTextures ) {\n \n\t\t\t\t\t if ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n \n\t\t\t\t\t p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n \n\t\t\t materialProperties.receiveShadow = object.receiveShadow;\n\t\t\t p_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n \n\t\t }\n \n\t\t if ( refreshMaterial ) {\n \n\t\t\t p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n \n\t\t\t if ( materialProperties.needsLights ) {\n \n\t\t\t\t // the current material requires lighting info\n \n\t\t\t\t // note: all lighting uniforms are always set correctly\n\t\t\t\t // they simply reference the renderer's state for their\n\t\t\t\t // values\n\t\t\t\t //\n\t\t\t\t // use the current material's .needsUpdate flags to set\n\t\t\t\t // the GL state when required\n \n\t\t\t\t markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n \n\t\t\t }\n \n\t\t\t // refresh uniforms common to several materials\n \n\t\t\t if ( fog && material.fog ) {\n \n\t\t\t\t materials.refreshFogUniforms( m_uniforms, fog );\n \n\t\t\t }\n \n\t\t\t materials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n \n\t\t\t WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n \n\t\t }\n \n\t\t if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n \n\t\t\t WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t material.uniformsNeedUpdate = false;\n \n\t\t }\n \n\t\t if ( material.isSpriteMaterial ) {\n \n\t\t\t p_uniforms.setValue( _gl, 'center', object.center );\n \n\t\t }\n \n\t\t // common matrices\n \n\t\t p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n \n\t\t return program;\n \n\t }\n \n\t // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n \n\t function markUniformsLightsNeedsUpdate( uniforms, value ) {\n \n\t\t uniforms.ambientLightColor.needsUpdate = value;\n\t\t uniforms.lightProbe.needsUpdate = value;\n \n\t\t uniforms.directionalLights.needsUpdate = value;\n\t\t uniforms.directionalLightShadows.needsUpdate = value;\n\t\t uniforms.pointLights.needsUpdate = value;\n\t\t uniforms.pointLightShadows.needsUpdate = value;\n\t\t uniforms.spotLights.needsUpdate = value;\n\t\t uniforms.spotLightShadows.needsUpdate = value;\n\t\t uniforms.rectAreaLights.needsUpdate = value;\n\t\t uniforms.hemisphereLights.needsUpdate = value;\n \n\t }\n \n\t function materialNeedsLights( material ) {\n \n\t\t return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t material.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t ( material.isShaderMaterial && material.lights === true );\n \n\t }\n \n\t this.getActiveCubeFace = function () {\n \n\t\t return _currentActiveCubeFace;\n \n\t };\n \n\t this.getActiveMipmapLevel = function () {\n \n\t\t return _currentActiveMipmapLevel;\n \n\t };\n \n\t this.getRenderTarget = function () {\n \n\t\t return _currentRenderTarget;\n \n\t };\n \n\t this.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n \n\t\t _currentRenderTarget = renderTarget;\n\t\t _currentActiveCubeFace = activeCubeFace;\n\t\t _currentActiveMipmapLevel = activeMipmapLevel;\n \n\t\t if ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n \n\t\t\t textures.setupRenderTarget( renderTarget );\n \n\t\t }\n \n\t\t let framebuffer = null;\n\t\t let isCube = false;\n\t\t let isRenderTarget3D = false;\n \n\t\t if ( renderTarget ) {\n \n\t\t\t const texture = renderTarget.texture;\n \n\t\t\t if ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {\n \n\t\t\t\t isRenderTarget3D = true;\n \n\t\t\t }\n \n\t\t\t const __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n \n\t\t\t if ( renderTarget.isWebGLCubeRenderTarget ) {\n \n\t\t\t\t framebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\t isCube = true;\n \n\t\t\t } else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n \n\t\t\t\t framebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n \n\t\t\t } else {\n \n\t\t\t\t framebuffer = __webglFramebuffer;\n \n\t\t\t }\n \n\t\t\t _currentViewport.copy( renderTarget.viewport );\n\t\t\t _currentScissor.copy( renderTarget.scissor );\n\t\t\t _currentScissorTest = renderTarget.scissorTest;\n \n\t\t } else {\n \n\t\t\t _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t _currentScissorTest = _scissorTest;\n \n\t\t }\n \n\t\t const framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n \n\t\t if ( framebufferBound && capabilities.drawBuffers ) {\n \n\t\t\t let needsUpdate = false;\n \n\t\t\t if ( renderTarget ) {\n \n\t\t\t\t if ( renderTarget.isWebGLMultipleRenderTargets ) {\n \n\t\t\t\t\t const textures = renderTarget.texture;\n \n\t\t\t\t\t if ( _currentDrawBuffers.length !== textures.length || _currentDrawBuffers[ 0 ] !== 36064 ) {\n \n\t\t\t\t\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t\t _currentDrawBuffers[ i ] = 36064 + i;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t _currentDrawBuffers.length = textures.length;\n \n\t\t\t\t\t\t needsUpdate = true;\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t if ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== 36064 ) {\n \n\t\t\t\t\t\t _currentDrawBuffers[ 0 ] = 36064;\n\t\t\t\t\t\t _currentDrawBuffers.length = 1;\n \n\t\t\t\t\t\t needsUpdate = true;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t if ( _currentDrawBuffers.length !== 1 || _currentDrawBuffers[ 0 ] !== 1029 ) {\n \n\t\t\t\t\t _currentDrawBuffers[ 0 ] = 1029;\n\t\t\t\t\t _currentDrawBuffers.length = 1;\n \n\t\t\t\t\t needsUpdate = true;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( needsUpdate ) {\n \n\t\t\t\t if ( capabilities.isWebGL2 ) {\n \n\t\t\t\t\t _gl.drawBuffers( _currentDrawBuffers );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t extensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( _currentDrawBuffers );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t state.viewport( _currentViewport );\n\t\t state.scissor( _currentScissor );\n\t\t state.setScissorTest( _currentScissorTest );\n \n\t\t if ( isCube ) {\n \n\t\t\t const textureProperties = properties.get( renderTarget.texture );\n\t\t\t _gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n \n\t\t } else if ( isRenderTarget3D ) {\n \n\t\t\t const textureProperties = properties.get( renderTarget.texture );\n\t\t\t const layer = activeCubeFace || 0;\n\t\t\t _gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n \n\t\t }\n \n\t };\n \n\t this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n \n\t\t if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n \n\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t let framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n \n\t\t if ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n \n\t\t\t framebuffer = framebuffer[ activeCubeFaceIndex ];\n \n\t\t }\n \n\t\t if ( framebuffer ) {\n \n\t\t\t state.bindFramebuffer( 36160, framebuffer );\n \n\t\t\t try {\n \n\t\t\t\t const texture = renderTarget.texture;\n\t\t\t\t const textureFormat = texture.format;\n\t\t\t\t const textureType = texture.type;\n \n\t\t\t\t if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n \n\t\t\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t return;\n \n\t\t\t\t }\n \n\t\t\t\t const halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n \n\t\t\t\t if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t ! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t ! halfFloatSupportedByExt ) {\n \n\t\t\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t return;\n \n\t\t\t\t }\n \n\t\t\t\t if ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n \n\t\t\t\t\t // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n \n\t\t\t\t\t if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n \n\t\t\t\t\t\t _gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n \n\t\t\t\t }\n \n\t\t\t } finally {\n \n\t\t\t\t // restore framebuffer of current render target if necessary\n \n\t\t\t\t const framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t state.bindFramebuffer( 36160, framebuffer );\n \n\t\t\t }\n \n\t\t }\n \n\t };\n \n\t this.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n \n\t\t const levelScale = Math.pow( 2, - level );\n\t\t const width = Math.floor( texture.image.width * levelScale );\n\t\t const height = Math.floor( texture.image.height * levelScale );\n \n\t\t let glFormat = utils.convert( texture.format );\n \n\t\t if ( capabilities.isWebGL2 ) {\n \n\t\t\t // Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\t\t\t // Not needed in Chrome 93+\n \n\t\t\t if ( glFormat === 6407 ) glFormat = 32849;\n\t\t\t if ( glFormat === 6408 ) glFormat = 32856;\n \n\t\t }\n \n\t\t textures.setTexture2D( texture, 0 );\n \n\t\t _gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n \n\t\t state.unbindTexture();\n \n\t };\n \n\t this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n \n\t\t const width = srcTexture.image.width;\n\t\t const height = srcTexture.image.height;\n\t\t const glFormat = utils.convert( dstTexture.format );\n\t\t const glType = utils.convert( dstTexture.type );\n \n\t\t textures.setTexture2D( dstTexture, 0 );\n \n\t\t // As another texture upload may have changed pixelStorei\n\t\t // parameters, make sure they are correct for the dstTexture\n\t\t _gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t _gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t _gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n \n\t\t if ( srcTexture.isDataTexture ) {\n \n\t\t\t _gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n \n\t\t } else {\n \n\t\t\t if ( srcTexture.isCompressedTexture ) {\n \n\t\t\t\t _gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n \n\t\t\t } else {\n \n\t\t\t\t _gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // Generate mipmaps only when copying level 0\n\t\t if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n \n\t\t state.unbindTexture();\n \n\t };\n \n\t this.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n \n\t\t if ( _this.isWebGL1Renderer ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t const width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t const height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t const depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t const glFormat = utils.convert( dstTexture.format );\n\t\t const glType = utils.convert( dstTexture.type );\n\t\t let glTarget;\n \n\t\t if ( dstTexture.isDataTexture3D ) {\n \n\t\t\t textures.setTexture3D( dstTexture, 0 );\n\t\t\t glTarget = 32879;\n \n\t\t } else if ( dstTexture.isDataTexture2DArray ) {\n \n\t\t\t textures.setTexture2DArray( dstTexture, 0 );\n\t\t\t glTarget = 35866;\n \n\t\t } else {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t _gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t _gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t _gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n \n\t\t const unpackRowLen = _gl.getParameter( 3314 );\n\t\t const unpackImageHeight = _gl.getParameter( 32878 );\n\t\t const unpackSkipPixels = _gl.getParameter( 3316 );\n\t\t const unpackSkipRows = _gl.getParameter( 3315 );\n\t\t const unpackSkipImages = _gl.getParameter( 32877 );\n \n\t\t const image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n \n\t\t _gl.pixelStorei( 3314, image.width );\n\t\t _gl.pixelStorei( 32878, image.height );\n\t\t _gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t _gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t _gl.pixelStorei( 32877, sourceBox.min.z );\n \n\t\t if ( srcTexture.isDataTexture || srcTexture.isDataTexture3D ) {\n \n\t\t\t _gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n \n\t\t } else {\n \n\t\t\t if ( srcTexture.isCompressedTexture ) {\n \n\t\t\t\t console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t _gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n \n\t\t\t } else {\n \n\t\t\t\t _gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n \n\t\t\t }\n \n\t\t }\n \n\t\t _gl.pixelStorei( 3314, unpackRowLen );\n\t\t _gl.pixelStorei( 32878, unpackImageHeight );\n\t\t _gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t _gl.pixelStorei( 3315, unpackSkipRows );\n\t\t _gl.pixelStorei( 32877, unpackSkipImages );\n \n\t\t // Generate mipmaps only when copying level 0\n\t\t if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n \n\t\t state.unbindTexture();\n \n\t };\n \n\t this.initTexture = function ( texture ) {\n \n\t\t textures.setTexture2D( texture, 0 );\n \n\t\t state.unbindTexture();\n \n\t };\n \n\t this.resetState = function () {\n \n\t\t _currentActiveCubeFace = 0;\n\t\t _currentActiveMipmapLevel = 0;\n\t\t _currentRenderTarget = null;\n \n\t\t state.reset();\n\t\t bindingStates.reset();\n \n\t };\n \n\t if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n \n\t\t __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n \n\t }\n \n }\n \n class WebGL1Renderer extends WebGLRenderer {}\n \n WebGL1Renderer.prototype.isWebGL1Renderer = true;\n \n class FogExp2 {\n \n\t constructor( color, density = 0.00025 ) {\n \n\t\t this.name = '';\n \n\t\t this.color = new Color( color );\n\t\t this.density = density;\n \n\t }\n \n\t clone() {\n \n\t\t return new FogExp2( this.color, this.density );\n \n\t }\n \n\t toJSON( /* meta */ ) {\n \n\t\t return {\n\t\t\t type: 'FogExp2',\n\t\t\t color: this.color.getHex(),\n\t\t\t density: this.density\n\t\t };\n \n\t }\n \n }\n \n FogExp2.prototype.isFogExp2 = true;\n \n class Fog {\n \n\t constructor( color, near = 1, far = 1000 ) {\n \n\t\t this.name = '';\n \n\t\t this.color = new Color( color );\n \n\t\t this.near = near;\n\t\t this.far = far;\n \n\t }\n \n\t clone() {\n \n\t\t return new Fog( this.color, this.near, this.far );\n \n\t }\n \n\t toJSON( /* meta */ ) {\n \n\t\t return {\n\t\t\t type: 'Fog',\n\t\t\t color: this.color.getHex(),\n\t\t\t near: this.near,\n\t\t\t far: this.far\n\t\t };\n \n\t }\n \n }\n \n Fog.prototype.isFog = true;\n \n class Scene extends Object3D {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this.type = 'Scene';\n \n\t\t this.background = null;\n\t\t this.environment = null;\n\t\t this.fog = null;\n \n\t\t this.overrideMaterial = null;\n \n\t\t this.autoUpdate = true; // checked by the renderer\n \n\t\t if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n \n\t\t\t __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n \n\t\t }\n \n\t }\n \n\t copy( source, recursive ) {\n \n\t\t super.copy( source, recursive );\n \n\t\t if ( source.background !== null ) this.background = source.background.clone();\n\t\t if ( source.environment !== null ) this.environment = source.environment.clone();\n\t\t if ( source.fog !== null ) this.fog = source.fog.clone();\n \n\t\t if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n \n\t\t this.autoUpdate = source.autoUpdate;\n\t\t this.matrixAutoUpdate = source.matrixAutoUpdate;\n \n\t\t return this;\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t if ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n \n\t\t return data;\n \n\t }\n \n }\n \n Scene.prototype.isScene = true;\n \n class InterleavedBuffer {\n \n\t constructor( array, stride ) {\n \n\t\t this.array = array;\n\t\t this.stride = stride;\n\t\t this.count = array !== undefined ? array.length / stride : 0;\n \n\t\t this.usage = StaticDrawUsage;\n\t\t this.updateRange = { offset: 0, count: - 1 };\n \n\t\t this.version = 0;\n \n\t\t this.uuid = generateUUID();\n \n\t }\n \n\t onUploadCallback() {}\n \n\t set needsUpdate( value ) {\n \n\t\t if ( value === true ) this.version ++;\n \n\t }\n \n\t setUsage( value ) {\n \n\t\t this.usage = value;\n \n\t\t return this;\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.array = new source.array.constructor( source.array );\n\t\t this.count = source.count;\n\t\t this.stride = source.stride;\n\t\t this.usage = source.usage;\n \n\t\t return this;\n \n\t }\n \n\t copyAt( index1, attribute, index2 ) {\n \n\t\t index1 *= this.stride;\n\t\t index2 *= attribute.stride;\n \n\t\t for ( let i = 0, l = this.stride; i < l; i ++ ) {\n \n\t\t\t this.array[ index1 + i ] = attribute.array[ index2 + i ];\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t set( value, offset = 0 ) {\n \n\t\t this.array.set( value, offset );\n \n\t\t return this;\n \n\t }\n \n\t clone( data ) {\n \n\t\t if ( data.arrayBuffers === undefined ) {\n \n\t\t\t data.arrayBuffers = {};\n \n\t\t }\n \n\t\t if ( this.array.buffer._uuid === undefined ) {\n \n\t\t\t this.array.buffer._uuid = generateUUID();\n \n\t\t }\n \n\t\t if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n \n\t\t\t data.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n \n\t\t }\n \n\t\t const array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n \n\t\t const ib = new this.constructor( array, this.stride );\n\t\t ib.setUsage( this.usage );\n \n\t\t return ib;\n \n\t }\n \n\t onUpload( callback ) {\n \n\t\t this.onUploadCallback = callback;\n \n\t\t return this;\n \n\t }\n \n\t toJSON( data ) {\n \n\t\t if ( data.arrayBuffers === undefined ) {\n \n\t\t\t data.arrayBuffers = {};\n \n\t\t }\n \n\t\t // generate UUID for array buffer if necessary\n \n\t\t if ( this.array.buffer._uuid === undefined ) {\n \n\t\t\t this.array.buffer._uuid = generateUUID();\n \n\t\t }\n \n\t\t if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n \n\t\t\t data.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n \n\t\t }\n \n\t\t //\n \n\t\t return {\n\t\t\t uuid: this.uuid,\n\t\t\t buffer: this.array.buffer._uuid,\n\t\t\t type: this.array.constructor.name,\n\t\t\t stride: this.stride\n\t\t };\n \n\t }\n \n }\n \n InterleavedBuffer.prototype.isInterleavedBuffer = true;\n \n const _vector$6 = /*@__PURE__*/ new Vector3();\n \n class InterleavedBufferAttribute {\n \n\t constructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n \n\t\t this.name = '';\n \n\t\t this.data = interleavedBuffer;\n\t\t this.itemSize = itemSize;\n\t\t this.offset = offset;\n \n\t\t this.normalized = normalized === true;\n \n\t }\n \n\t get count() {\n \n\t\t return this.data.count;\n \n\t }\n \n\t get array() {\n \n\t\t return this.data.array;\n \n\t }\n \n\t set needsUpdate( value ) {\n \n\t\t this.data.needsUpdate = value;\n \n\t }\n \n\t applyMatrix4( m ) {\n \n\t\t for ( let i = 0, l = this.data.count; i < l; i ++ ) {\n \n\t\t\t _vector$6.x = this.getX( i );\n\t\t\t _vector$6.y = this.getY( i );\n\t\t\t _vector$6.z = this.getZ( i );\n \n\t\t\t _vector$6.applyMatrix4( m );\n \n\t\t\t this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t applyNormalMatrix( m ) {\n \n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n\t\t\t _vector$6.x = this.getX( i );\n\t\t\t _vector$6.y = this.getY( i );\n\t\t\t _vector$6.z = this.getZ( i );\n \n\t\t\t _vector$6.applyNormalMatrix( m );\n \n\t\t\t this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t transformDirection( m ) {\n \n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\n \n\t\t\t _vector$6.x = this.getX( i );\n\t\t\t _vector$6.y = this.getY( i );\n\t\t\t _vector$6.z = this.getZ( i );\n \n\t\t\t _vector$6.transformDirection( m );\n \n\t\t\t this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setX( index, x ) {\n \n\t\t this.data.array[ index * this.data.stride + this.offset ] = x;\n \n\t\t return this;\n \n\t }\n \n\t setY( index, y ) {\n \n\t\t this.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n \n\t\t return this;\n \n\t }\n \n\t setZ( index, z ) {\n \n\t\t this.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n \n\t\t return this;\n \n\t }\n \n\t setW( index, w ) {\n \n\t\t this.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n \n\t\t return this;\n \n\t }\n \n\t getX( index ) {\n \n\t\t return this.data.array[ index * this.data.stride + this.offset ];\n \n\t }\n \n\t getY( index ) {\n \n\t\t return this.data.array[ index * this.data.stride + this.offset + 1 ];\n \n\t }\n \n\t getZ( index ) {\n \n\t\t return this.data.array[ index * this.data.stride + this.offset + 2 ];\n \n\t }\n \n\t getW( index ) {\n \n\t\t return this.data.array[ index * this.data.stride + this.offset + 3 ];\n \n\t }\n \n\t setXY( index, x, y ) {\n \n\t\t index = index * this.data.stride + this.offset;\n \n\t\t this.data.array[ index + 0 ] = x;\n\t\t this.data.array[ index + 1 ] = y;\n \n\t\t return this;\n \n\t }\n \n\t setXYZ( index, x, y, z ) {\n \n\t\t index = index * this.data.stride + this.offset;\n \n\t\t this.data.array[ index + 0 ] = x;\n\t\t this.data.array[ index + 1 ] = y;\n\t\t this.data.array[ index + 2 ] = z;\n \n\t\t return this;\n \n\t }\n \n\t setXYZW( index, x, y, z, w ) {\n \n\t\t index = index * this.data.stride + this.offset;\n \n\t\t this.data.array[ index + 0 ] = x;\n\t\t this.data.array[ index + 1 ] = y;\n\t\t this.data.array[ index + 2 ] = z;\n\t\t this.data.array[ index + 3 ] = w;\n \n\t\t return this;\n \n\t }\n \n\t clone( data ) {\n \n\t\t if ( data === undefined ) {\n \n\t\t\t console.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n \n\t\t\t const array = [];\n \n\t\t\t for ( let i = 0; i < this.count; i ++ ) {\n \n\t\t\t\t const index = i * this.data.stride + this.offset;\n \n\t\t\t\t for ( let j = 0; j < this.itemSize; j ++ ) {\n \n\t\t\t\t\t array.push( this.data.array[ index + j ] );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t return new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n \n\t\t } else {\n \n\t\t\t if ( data.interleavedBuffers === undefined ) {\n \n\t\t\t\t data.interleavedBuffers = {};\n \n\t\t\t }\n \n\t\t\t if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n \n\t\t\t\t data.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n \n\t\t\t }\n \n\t\t\t return new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n \n\t\t }\n \n\t }\n \n\t toJSON( data ) {\n \n\t\t if ( data === undefined ) {\n \n\t\t\t console.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n \n\t\t\t const array = [];\n \n\t\t\t for ( let i = 0; i < this.count; i ++ ) {\n \n\t\t\t\t const index = i * this.data.stride + this.offset;\n \n\t\t\t\t for ( let j = 0; j < this.itemSize; j ++ ) {\n \n\t\t\t\t\t array.push( this.data.array[ index + j ] );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // deinterleave data and save it as an ordinary buffer attribute for now\n \n\t\t\t return {\n\t\t\t\t itemSize: this.itemSize,\n\t\t\t\t type: this.array.constructor.name,\n\t\t\t\t array: array,\n\t\t\t\t normalized: this.normalized\n\t\t\t };\n \n\t\t } else {\n \n\t\t\t // save as true interlaved attribtue\n \n\t\t\t if ( data.interleavedBuffers === undefined ) {\n \n\t\t\t\t data.interleavedBuffers = {};\n \n\t\t\t }\n \n\t\t\t if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n \n\t\t\t\t data.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n \n\t\t\t }\n \n\t\t\t return {\n\t\t\t\t isInterleavedBufferAttribute: true,\n\t\t\t\t itemSize: this.itemSize,\n\t\t\t\t data: this.data.uuid,\n\t\t\t\t offset: this.offset,\n\t\t\t\t normalized: this.normalized\n\t\t\t };\n \n\t\t }\n \n\t }\n \n }\n \n InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  map: new THREE.Texture( <Image> ),\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *  rotation: <float>,\n  *  sizeAttenuation: <bool>\n  * }\n  */\n \n class SpriteMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'SpriteMaterial';\n \n\t\t this.color = new Color( 0xffffff );\n \n\t\t this.map = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.rotation = 0;\n \n\t\t this.sizeAttenuation = true;\n \n\t\t this.transparent = true;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n \n\t\t this.map = source.map;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.rotation = source.rotation;\n \n\t\t this.sizeAttenuation = source.sizeAttenuation;\n \n\t\t return this;\n \n\t }\n \n }\n \n SpriteMaterial.prototype.isSpriteMaterial = true;\n \n let _geometry;\n \n const _intersectPoint = /*@__PURE__*/ new Vector3();\n const _worldScale = /*@__PURE__*/ new Vector3();\n const _mvPosition = /*@__PURE__*/ new Vector3();\n \n const _alignedPosition = /*@__PURE__*/ new Vector2();\n const _rotatedPosition = /*@__PURE__*/ new Vector2();\n const _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n \n const _vA = /*@__PURE__*/ new Vector3();\n const _vB = /*@__PURE__*/ new Vector3();\n const _vC = /*@__PURE__*/ new Vector3();\n \n const _uvA = /*@__PURE__*/ new Vector2();\n const _uvB = /*@__PURE__*/ new Vector2();\n const _uvC = /*@__PURE__*/ new Vector2();\n \n class Sprite extends Object3D {\n \n\t constructor( material ) {\n \n\t\t super();\n \n\t\t this.type = 'Sprite';\n \n\t\t if ( _geometry === undefined ) {\n \n\t\t\t _geometry = new BufferGeometry();\n \n\t\t\t const float32Array = new Float32Array( [\n\t\t\t\t - 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t 0.5, - 0.5, 0, 1, 0,\n\t\t\t\t 0.5, 0.5, 0, 1, 1,\n\t\t\t\t - 0.5, 0.5, 0, 0, 1\n\t\t\t ] );\n \n\t\t\t const interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n \n\t\t\t _geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t _geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t _geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n \n\t\t }\n \n\t\t this.geometry = _geometry;\n\t\t this.material = ( material !== undefined ) ? material : new SpriteMaterial();\n \n\t\t this.center = new Vector2( 0.5, 0.5 );\n \n\t }\n \n\t raycast( raycaster, intersects ) {\n \n\t\t if ( raycaster.camera === null ) {\n \n\t\t\t console.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n \n\t\t }\n \n\t\t _worldScale.setFromMatrixScale( this.matrixWorld );\n \n\t\t _viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\t this.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n \n\t\t _mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n \n\t\t if ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n \n\t\t\t _worldScale.multiplyScalar( - _mvPosition.z );\n \n\t\t }\n \n\t\t const rotation = this.material.rotation;\n\t\t let sin, cos;\n \n\t\t if ( rotation !== 0 ) {\n \n\t\t\t cos = Math.cos( rotation );\n\t\t\t sin = Math.sin( rotation );\n \n\t\t }\n \n\t\t const center = this.center;\n \n\t\t transformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t transformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t transformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n \n\t\t _uvA.set( 0, 0 );\n\t\t _uvB.set( 1, 0 );\n\t\t _uvC.set( 1, 1 );\n \n\t\t // check first triangle\n\t\t let intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n \n\t\t if ( intersect === null ) {\n \n\t\t\t // check second triangle\n\t\t\t transformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t _uvB.set( 0, 1 );\n \n\t\t\t intersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\t if ( intersect === null ) {\n \n\t\t\t\t return;\n \n\t\t\t }\n \n\t\t }\n \n\t\t const distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n \n\t\t if ( distance < raycaster.near || distance > raycaster.far ) return;\n \n\t\t intersects.push( {\n \n\t\t\t distance: distance,\n\t\t\t point: _intersectPoint.clone(),\n\t\t\t uv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\t face: null,\n\t\t\t object: this\n \n\t\t } );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t if ( source.center !== undefined ) this.center.copy( source.center );\n \n\t\t this.material = source.material;\n \n\t\t return this;\n \n\t }\n \n }\n \n Sprite.prototype.isSprite = true;\n \n function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n \n\t // compute position in camera space\n\t _alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n \n\t // to check if rotation is not zero\n\t if ( sin !== undefined ) {\n \n\t\t _rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t _rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n \n\t } else {\n \n\t\t _rotatedPosition.copy( _alignedPosition );\n \n\t }\n \n \n\t vertexPosition.copy( mvPosition );\n\t vertexPosition.x += _rotatedPosition.x;\n\t vertexPosition.y += _rotatedPosition.y;\n \n\t // transform to world space\n\t vertexPosition.applyMatrix4( _viewWorldMatrix );\n \n }\n \n const _v1$2 = /*@__PURE__*/ new Vector3();\n const _v2$1 = /*@__PURE__*/ new Vector3();\n \n class LOD extends Object3D {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this._currentLevel = 0;\n \n\t\t this.type = 'LOD';\n \n\t\t Object.defineProperties( this, {\n\t\t\t levels: {\n\t\t\t\t enumerable: true,\n\t\t\t\t value: []\n\t\t\t },\n\t\t\t isLOD: {\n\t\t\t\t value: true,\n\t\t\t }\n\t\t } );\n \n\t\t this.autoUpdate = true;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source, false );\n \n\t\t const levels = source.levels;\n \n\t\t for ( let i = 0, l = levels.length; i < l; i ++ ) {\n \n\t\t\t const level = levels[ i ];\n \n\t\t\t this.addLevel( level.object.clone(), level.distance );\n \n\t\t }\n \n\t\t this.autoUpdate = source.autoUpdate;\n \n\t\t return this;\n \n\t }\n \n\t addLevel( object, distance = 0 ) {\n \n\t\t distance = Math.abs( distance );\n \n\t\t const levels = this.levels;\n \n\t\t let l;\n \n\t\t for ( l = 0; l < levels.length; l ++ ) {\n \n\t\t\t if ( distance < levels[ l ].distance ) {\n \n\t\t\t\t break;\n \n\t\t\t }\n \n\t\t }\n \n\t\t levels.splice( l, 0, { distance: distance, object: object } );\n \n\t\t this.add( object );\n \n\t\t return this;\n \n\t }\n \n\t getCurrentLevel() {\n \n\t\t return this._currentLevel;\n \n\t }\n \n\t getObjectForDistance( distance ) {\n \n\t\t const levels = this.levels;\n \n\t\t if ( levels.length > 0 ) {\n \n\t\t\t let i, l;\n \n\t\t\t for ( i = 1, l = levels.length; i < l; i ++ ) {\n \n\t\t\t\t if ( distance < levels[ i ].distance ) {\n \n\t\t\t\t\t break;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t return levels[ i - 1 ].object;\n \n\t\t }\n \n\t\t return null;\n \n\t }\n \n\t raycast( raycaster, intersects ) {\n \n\t\t const levels = this.levels;\n \n\t\t if ( levels.length > 0 ) {\n \n\t\t\t _v1$2.setFromMatrixPosition( this.matrixWorld );\n \n\t\t\t const distance = raycaster.ray.origin.distanceTo( _v1$2 );\n \n\t\t\t this.getObjectForDistance( distance ).raycast( raycaster, intersects );\n \n\t\t }\n \n\t }\n \n\t update( camera ) {\n \n\t\t const levels = this.levels;\n \n\t\t if ( levels.length > 1 ) {\n \n\t\t\t _v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t _v2$1.setFromMatrixPosition( this.matrixWorld );\n \n\t\t\t const distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n \n\t\t\t levels[ 0 ].object.visible = true;\n \n\t\t\t let i, l;\n \n\t\t\t for ( i = 1, l = levels.length; i < l; i ++ ) {\n \n\t\t\t\t if ( distance >= levels[ i ].distance ) {\n \n\t\t\t\t\t levels[ i - 1 ].object.visible = false;\n\t\t\t\t\t levels[ i ].object.visible = true;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t break;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t this._currentLevel = i - 1;\n \n\t\t\t for ( ; i < l; i ++ ) {\n \n\t\t\t\t levels[ i ].object.visible = false;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t if ( this.autoUpdate === false ) data.object.autoUpdate = false;\n \n\t\t data.object.levels = [];\n \n\t\t const levels = this.levels;\n \n\t\t for ( let i = 0, l = levels.length; i < l; i ++ ) {\n \n\t\t\t const level = levels[ i ];\n \n\t\t\t data.object.levels.push( {\n\t\t\t\t object: level.object.uuid,\n\t\t\t\t distance: level.distance\n\t\t\t } );\n \n\t\t }\n \n\t\t return data;\n \n\t }\n \n }\n \n const _basePosition = /*@__PURE__*/ new Vector3();\n \n const _skinIndex = /*@__PURE__*/ new Vector4();\n const _skinWeight = /*@__PURE__*/ new Vector4();\n \n const _vector$5 = /*@__PURE__*/ new Vector3();\n const _matrix = /*@__PURE__*/ new Matrix4();\n \n class SkinnedMesh extends Mesh {\n \n\t constructor( geometry, material ) {\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'SkinnedMesh';\n \n\t\t this.bindMode = 'attached';\n\t\t this.bindMatrix = new Matrix4();\n\t\t this.bindMatrixInverse = new Matrix4();\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.bindMode = source.bindMode;\n\t\t this.bindMatrix.copy( source.bindMatrix );\n\t\t this.bindMatrixInverse.copy( source.bindMatrixInverse );\n \n\t\t this.skeleton = source.skeleton;\n \n\t\t return this;\n \n\t }\n \n\t bind( skeleton, bindMatrix ) {\n \n\t\t this.skeleton = skeleton;\n \n\t\t if ( bindMatrix === undefined ) {\n \n\t\t\t this.updateMatrixWorld( true );\n \n\t\t\t this.skeleton.calculateInverses();\n \n\t\t\t bindMatrix = this.matrixWorld;\n \n\t\t }\n \n\t\t this.bindMatrix.copy( bindMatrix );\n\t\t this.bindMatrixInverse.copy( bindMatrix ).invert();\n \n\t }\n \n\t pose() {\n \n\t\t this.skeleton.pose();\n \n\t }\n \n\t normalizeSkinWeights() {\n \n\t\t const vector = new Vector4();\n \n\t\t const skinWeight = this.geometry.attributes.skinWeight;\n \n\t\t for ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n \n\t\t\t vector.x = skinWeight.getX( i );\n\t\t\t vector.y = skinWeight.getY( i );\n\t\t\t vector.z = skinWeight.getZ( i );\n\t\t\t vector.w = skinWeight.getW( i );\n \n\t\t\t const scale = 1.0 / vector.manhattanLength();\n \n\t\t\t if ( scale !== Infinity ) {\n \n\t\t\t\t vector.multiplyScalar( scale );\n \n\t\t\t } else {\n \n\t\t\t\t vector.set( 1, 0, 0, 0 ); // do something reasonable\n \n\t\t\t }\n \n\t\t\t skinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n \n\t\t }\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t super.updateMatrixWorld( force );\n \n\t\t if ( this.bindMode === 'attached' ) {\n \n\t\t\t this.bindMatrixInverse.copy( this.matrixWorld ).invert();\n \n\t\t } else if ( this.bindMode === 'detached' ) {\n \n\t\t\t this.bindMatrixInverse.copy( this.bindMatrix ).invert();\n \n\t\t } else {\n \n\t\t\t console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n \n\t\t }\n \n\t }\n \n\t boneTransform( index, target ) {\n \n\t\t const skeleton = this.skeleton;\n\t\t const geometry = this.geometry;\n \n\t\t _skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t _skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n \n\t\t _basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n \n\t\t target.set( 0, 0, 0 );\n \n\t\t for ( let i = 0; i < 4; i ++ ) {\n \n\t\t\t const weight = _skinWeight.getComponent( i );\n \n\t\t\t if ( weight !== 0 ) {\n \n\t\t\t\t const boneIndex = _skinIndex.getComponent( i );\n \n\t\t\t\t _matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n \n\t\t\t\t target.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n \n\t\t\t }\n \n\t\t }\n \n\t\t return target.applyMatrix4( this.bindMatrixInverse );\n \n\t }\n \n }\n \n SkinnedMesh.prototype.isSkinnedMesh = true;\n \n class Bone extends Object3D {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this.type = 'Bone';\n \n\t }\n \n }\n \n Bone.prototype.isBone = true;\n \n class DataTexture extends Texture {\n \n\t constructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n \n\t\t super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n \n\t\t this.image = { data: data, width: width, height: height };\n \n\t\t this.magFilter = magFilter;\n\t\t this.minFilter = minFilter;\n \n\t\t this.generateMipmaps = false;\n\t\t this.flipY = false;\n\t\t this.unpackAlignment = 1;\n \n\t\t this.needsUpdate = true;\n \n\t }\n \n }\n \n DataTexture.prototype.isDataTexture = true;\n \n const _offsetMatrix = /*@__PURE__*/ new Matrix4();\n const _identityMatrix = /*@__PURE__*/ new Matrix4();\n \n class Skeleton {\n \n\t constructor( bones = [], boneInverses = [] ) {\n \n\t\t this.uuid = generateUUID();\n \n\t\t this.bones = bones.slice( 0 );\n\t\t this.boneInverses = boneInverses;\n\t\t this.boneMatrices = null;\n \n\t\t this.boneTexture = null;\n\t\t this.boneTextureSize = 0;\n \n\t\t this.frame = - 1;\n \n\t\t this.init();\n \n\t }\n \n\t init() {\n \n\t\t const bones = this.bones;\n\t\t const boneInverses = this.boneInverses;\n \n\t\t this.boneMatrices = new Float32Array( bones.length * 16 );\n \n\t\t // calculate inverse bone matrices if necessary\n \n\t\t if ( boneInverses.length === 0 ) {\n \n\t\t\t this.calculateInverses();\n \n\t\t } else {\n \n\t\t\t // handle special case\n \n\t\t\t if ( bones.length !== boneInverses.length ) {\n \n\t\t\t\t console.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n \n\t\t\t\t this.boneInverses = [];\n \n\t\t\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n\t\t\t\t\t this.boneInverses.push( new Matrix4() );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t calculateInverses() {\n \n\t\t this.boneInverses.length = 0;\n \n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n\t\t\t const inverse = new Matrix4();\n \n\t\t\t if ( this.bones[ i ] ) {\n \n\t\t\t\t inverse.copy( this.bones[ i ].matrixWorld ).invert();\n \n\t\t\t }\n \n\t\t\t this.boneInverses.push( inverse );\n \n\t\t }\n \n\t }\n \n\t pose() {\n \n\t\t // recover the bind-time world matrices\n \n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n\t\t\t const bone = this.bones[ i ];\n \n\t\t\t if ( bone ) {\n \n\t\t\t\t bone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n \n\t\t\t }\n \n\t\t }\n \n\t\t // compute the local matrices, positions, rotations and scales\n \n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n\t\t\t const bone = this.bones[ i ];\n \n\t\t\t if ( bone ) {\n \n\t\t\t\t if ( bone.parent && bone.parent.isBone ) {\n \n\t\t\t\t\t bone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\t bone.matrix.multiply( bone.matrixWorld );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t bone.matrix.copy( bone.matrixWorld );\n \n\t\t\t\t }\n \n\t\t\t\t bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t update() {\n \n\t\t const bones = this.bones;\n\t\t const boneInverses = this.boneInverses;\n\t\t const boneMatrices = this.boneMatrices;\n\t\t const boneTexture = this.boneTexture;\n \n\t\t // flatten bone matrices to array\n \n\t\t for ( let i = 0, il = bones.length; i < il; i ++ ) {\n \n\t\t\t // compute the offset between the current and the original transform\n \n\t\t\t const matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n \n\t\t\t _offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t _offsetMatrix.toArray( boneMatrices, i * 16 );\n \n\t\t }\n \n\t\t if ( boneTexture !== null ) {\n \n\t\t\t boneTexture.needsUpdate = true;\n \n\t\t }\n \n\t }\n \n\t clone() {\n \n\t\t return new Skeleton( this.bones, this.boneInverses );\n \n\t }\n \n\t computeBoneTexture() {\n \n\t\t // layout (1 matrix = 4 pixels)\n\t\t //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n \n\t\t let size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t size = ceilPowerOfTwo( size );\n\t\t size = Math.max( size, 4 );\n \n\t\t const boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t boneMatrices.set( this.boneMatrices ); // copy current values\n \n\t\t const boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n \n\t\t this.boneMatrices = boneMatrices;\n\t\t this.boneTexture = boneTexture;\n\t\t this.boneTextureSize = size;\n \n\t\t return this;\n \n\t }\n \n\t getBoneByName( name ) {\n \n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n \n\t\t\t const bone = this.bones[ i ];\n \n\t\t\t if ( bone.name === name ) {\n \n\t\t\t\t return bone;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return undefined;\n \n\t }\n \n\t dispose( ) {\n \n\t\t if ( this.boneTexture !== null ) {\n \n\t\t\t this.boneTexture.dispose();\n \n\t\t\t this.boneTexture = null;\n \n\t\t }\n \n\t }\n \n\t fromJSON( json, bones ) {\n \n\t\t this.uuid = json.uuid;\n \n\t\t for ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n \n\t\t\t const uuid = json.bones[ i ];\n\t\t\t let bone = bones[ uuid ];\n \n\t\t\t if ( bone === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\t bone = new Bone();\n \n\t\t\t }\n \n\t\t\t this.bones.push( bone );\n\t\t\t this.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n \n\t\t }\n \n\t\t this.init();\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = {\n\t\t\t metadata: {\n\t\t\t\t version: 4.5,\n\t\t\t\t type: 'Skeleton',\n\t\t\t\t generator: 'Skeleton.toJSON'\n\t\t\t },\n\t\t\t bones: [],\n\t\t\t boneInverses: []\n\t\t };\n \n\t\t data.uuid = this.uuid;\n \n\t\t const bones = this.bones;\n\t\t const boneInverses = this.boneInverses;\n \n\t\t for ( let i = 0, l = bones.length; i < l; i ++ ) {\n \n\t\t\t const bone = bones[ i ];\n\t\t\t data.bones.push( bone.uuid );\n \n\t\t\t const boneInverse = boneInverses[ i ];\n\t\t\t data.boneInverses.push( boneInverse.toArray() );\n \n\t\t }\n \n\t\t return data;\n \n\t }\n \n }\n \n const _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\n const _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n \n const _instanceIntersects = [];\n \n const _mesh = /*@__PURE__*/ new Mesh();\n \n class InstancedMesh extends Mesh {\n \n\t constructor( geometry, material, count ) {\n \n\t\t super( geometry, material );\n \n\t\t this.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\t this.instanceColor = null;\n \n\t\t this.count = count;\n \n\t\t this.frustumCulled = false;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.instanceMatrix.copy( source.instanceMatrix );\n \n\t\t if ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n \n\t\t this.count = source.count;\n \n\t\t return this;\n \n\t }\n \n\t getColorAt( index, color ) {\n \n\t\t color.fromArray( this.instanceColor.array, index * 3 );\n \n\t }\n \n\t getMatrixAt( index, matrix ) {\n \n\t\t matrix.fromArray( this.instanceMatrix.array, index * 16 );\n \n\t }\n \n\t raycast( raycaster, intersects ) {\n \n\t\t const matrixWorld = this.matrixWorld;\n\t\t const raycastTimes = this.count;\n \n\t\t _mesh.geometry = this.geometry;\n\t\t _mesh.material = this.material;\n \n\t\t if ( _mesh.material === undefined ) return;\n \n\t\t for ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n \n\t\t\t // calculate the world matrix for each instance\n \n\t\t\t this.getMatrixAt( instanceId, _instanceLocalMatrix );\n \n\t\t\t _instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n \n\t\t\t // the mesh represents this single instance\n \n\t\t\t _mesh.matrixWorld = _instanceWorldMatrix;\n \n\t\t\t _mesh.raycast( raycaster, _instanceIntersects );\n \n\t\t\t // process the result of raycast\n \n\t\t\t for ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n \n\t\t\t\t const intersect = _instanceIntersects[ i ];\n\t\t\t\t intersect.instanceId = instanceId;\n\t\t\t\t intersect.object = this;\n\t\t\t\t intersects.push( intersect );\n \n\t\t\t }\n \n\t\t\t _instanceIntersects.length = 0;\n \n\t\t }\n \n\t }\n \n\t setColorAt( index, color ) {\n \n\t\t if ( this.instanceColor === null ) {\n \n\t\t\t this.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );\n \n\t\t }\n \n\t\t color.toArray( this.instanceColor.array, index * 3 );\n \n\t }\n \n\t setMatrixAt( index, matrix ) {\n \n\t\t matrix.toArray( this.instanceMatrix.array, index * 16 );\n \n\t }\n \n\t updateMorphTargets() {\n \n\t }\n \n\t dispose() {\n \n\t\t this.dispatchEvent( { type: 'dispose' } );\n \n\t }\n \n }\n \n InstancedMesh.prototype.isInstancedMesh = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  opacity: <float>,\n  *\n  *  linewidth: <float>,\n  *  linecap: \"round\",\n  *  linejoin: \"round\"\n  * }\n  */\n \n class LineBasicMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'LineBasicMaterial';\n \n\t\t this.color = new Color( 0xffffff );\n \n\t\t this.linewidth = 1;\n\t\t this.linecap = 'round';\n\t\t this.linejoin = 'round';\n \n\t\t this.morphTargets = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n \n\t\t this.linewidth = source.linewidth;\n\t\t this.linecap = source.linecap;\n\t\t this.linejoin = source.linejoin;\n \n\t\t this.morphTargets = source.morphTargets;\n \n\t\t return this;\n \n\t }\n \n }\n \n LineBasicMaterial.prototype.isLineBasicMaterial = true;\n \n const _start$1 = /*@__PURE__*/ new Vector3();\n const _end$1 = /*@__PURE__*/ new Vector3();\n const _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\n const _ray$1 = /*@__PURE__*/ new Ray();\n const _sphere$1 = /*@__PURE__*/ new Sphere();\n \n class Line extends Object3D {\n \n\t constructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n \n\t\t super();\n \n\t\t this.type = 'Line';\n \n\t\t this.geometry = geometry;\n\t\t this.material = material;\n \n\t\t this.updateMorphTargets();\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.material = source.material;\n\t\t this.geometry = source.geometry;\n \n\t\t return this;\n \n\t }\n \n\t computeLineDistances() {\n \n\t\t const geometry = this.geometry;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t // we assume non-indexed geometry\n \n\t\t\t if ( geometry.index === null ) {\n \n\t\t\t\t const positionAttribute = geometry.attributes.position;\n\t\t\t\t const lineDistances = [ 0 ];\n \n\t\t\t\t for ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n \n\t\t\t\t\t _start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t _end$1.fromBufferAttribute( positionAttribute, i );\n \n\t\t\t\t\t lineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t lineDistances[ i ] += _start$1.distanceTo( _end$1 );\n \n\t\t\t\t }\n \n\t\t\t\t geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n \n\t\t\t } else {\n \n\t\t\t\t console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n \n\t\t\t }\n \n\t\t } else if ( geometry.isGeometry ) {\n \n\t\t\t console.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t raycast( raycaster, intersects ) {\n \n\t\t const geometry = this.geometry;\n\t\t const matrixWorld = this.matrixWorld;\n\t\t const threshold = raycaster.params.Line.threshold;\n\t\t const drawRange = geometry.drawRange;\n \n\t\t // Checking boundingSphere distance to ray\n \n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n\t\t _sphere$1.copy( geometry.boundingSphere );\n\t\t _sphere$1.applyMatrix4( matrixWorld );\n\t\t _sphere$1.radius += threshold;\n \n\t\t if ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n \n\t\t //\n \n\t\t _inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t _ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n \n\t\t const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t const localThresholdSq = localThreshold * localThreshold;\n \n\t\t const vStart = new Vector3();\n\t\t const vEnd = new Vector3();\n\t\t const interSegment = new Vector3();\n\t\t const interRay = new Vector3();\n\t\t const step = this.isLineSegments ? 2 : 1;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t const index = geometry.index;\n\t\t\t const attributes = geometry.attributes;\n\t\t\t const positionAttribute = attributes.position;\n \n\t\t\t if ( index !== null ) {\n \n\t\t\t\t const start = Math.max( 0, drawRange.start );\n\t\t\t\t const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t for ( let i = start, l = end - 1; i < l; i += step ) {\n \n\t\t\t\t\t const a = index.getX( i );\n\t\t\t\t\t const b = index.getX( i + 1 );\n \n\t\t\t\t\t vStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\t vEnd.fromBufferAttribute( positionAttribute, b );\n \n\t\t\t\t\t const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n \n\t\t\t\t\t if ( distSq > localThresholdSq ) continue;\n \n\t\t\t\t\t interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n \n\t\t\t\t\t const distance = raycaster.ray.origin.distanceTo( interRay );\n \n\t\t\t\t\t if ( distance < raycaster.near || distance > raycaster.far ) continue;\n \n\t\t\t\t\t intersects.push( {\n \n\t\t\t\t\t\t distance: distance,\n\t\t\t\t\t\t // What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t // point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t point: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t index: i,\n\t\t\t\t\t\t face: null,\n\t\t\t\t\t\t faceIndex: null,\n\t\t\t\t\t\t object: this\n \n\t\t\t\t\t } );\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t const start = Math.max( 0, drawRange.start );\n\t\t\t\t const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t for ( let i = start, l = end - 1; i < l; i += step ) {\n \n\t\t\t\t\t vStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t vEnd.fromBufferAttribute( positionAttribute, i + 1 );\n \n\t\t\t\t\t const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n \n\t\t\t\t\t if ( distSq > localThresholdSq ) continue;\n \n\t\t\t\t\t interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n \n\t\t\t\t\t const distance = raycaster.ray.origin.distanceTo( interRay );\n \n\t\t\t\t\t if ( distance < raycaster.near || distance > raycaster.far ) continue;\n \n\t\t\t\t\t intersects.push( {\n \n\t\t\t\t\t\t distance: distance,\n\t\t\t\t\t\t // What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t // point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t point: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t index: i,\n\t\t\t\t\t\t face: null,\n\t\t\t\t\t\t faceIndex: null,\n\t\t\t\t\t\t object: this\n \n\t\t\t\t\t } );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else if ( geometry.isGeometry ) {\n \n\t\t\t console.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t }\n \n\t }\n \n\t updateMorphTargets() {\n \n\t\t const geometry = this.geometry;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t const morphAttributes = geometry.morphAttributes;\n\t\t\t const keys = Object.keys( morphAttributes );\n \n\t\t\t if ( keys.length > 0 ) {\n \n\t\t\t\t const morphAttribute = morphAttributes[ keys[ 0 ] ];\n \n\t\t\t\t if ( morphAttribute !== undefined ) {\n \n\t\t\t\t\t this.morphTargetInfluences = [];\n\t\t\t\t\t this.morphTargetDictionary = {};\n \n\t\t\t\t\t for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n \n\t\t\t\t\t\t const name = morphAttribute[ m ].name || String( m );\n \n\t\t\t\t\t\t this.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t this.morphTargetDictionary[ name ] = m;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t const morphTargets = geometry.morphTargets;\n \n\t\t\t if ( morphTargets !== undefined && morphTargets.length > 0 ) {\n \n\t\t\t\t console.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n }\n \n Line.prototype.isLine = true;\n \n const _start = /*@__PURE__*/ new Vector3();\n const _end = /*@__PURE__*/ new Vector3();\n \n class LineSegments extends Line {\n \n\t constructor( geometry, material ) {\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'LineSegments';\n \n\t }\n \n\t computeLineDistances() {\n \n\t\t const geometry = this.geometry;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t // we assume non-indexed geometry\n \n\t\t\t if ( geometry.index === null ) {\n \n\t\t\t\t const positionAttribute = geometry.attributes.position;\n\t\t\t\t const lineDistances = [];\n \n\t\t\t\t for ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n \n\t\t\t\t\t _start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t _end.fromBufferAttribute( positionAttribute, i + 1 );\n \n\t\t\t\t\t lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t lineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n \n\t\t\t\t }\n \n\t\t\t\t geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n \n\t\t\t } else {\n \n\t\t\t\t console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n \n\t\t\t }\n \n\t\t } else if ( geometry.isGeometry ) {\n \n\t\t\t console.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n }\n \n LineSegments.prototype.isLineSegments = true;\n \n class LineLoop extends Line {\n \n\t constructor( geometry, material ) {\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'LineLoop';\n \n\t }\n \n }\n \n LineLoop.prototype.isLineLoop = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  opacity: <float>,\n  *  map: new THREE.Texture( <Image> ),\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  size: <float>,\n  *  sizeAttenuation: <bool>\n  *\n  *  morphTargets: <bool>\n  * }\n  */\n \n class PointsMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'PointsMaterial';\n \n\t\t this.color = new Color( 0xffffff );\n \n\t\t this.map = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.size = 1;\n\t\t this.sizeAttenuation = true;\n \n\t\t this.morphTargets = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n \n\t\t this.map = source.map;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.size = source.size;\n\t\t this.sizeAttenuation = source.sizeAttenuation;\n \n\t\t this.morphTargets = source.morphTargets;\n \n\t\t return this;\n \n\t }\n \n }\n \n PointsMaterial.prototype.isPointsMaterial = true;\n \n const _inverseMatrix = /*@__PURE__*/ new Matrix4();\n const _ray = /*@__PURE__*/ new Ray();\n const _sphere = /*@__PURE__*/ new Sphere();\n const _position$2 = /*@__PURE__*/ new Vector3();\n \n class Points extends Object3D {\n \n\t constructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n \n\t\t super();\n \n\t\t this.type = 'Points';\n \n\t\t this.geometry = geometry;\n\t\t this.material = material;\n \n\t\t this.updateMorphTargets();\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.material = source.material;\n\t\t this.geometry = source.geometry;\n \n\t\t return this;\n \n\t }\n \n\t raycast( raycaster, intersects ) {\n \n\t\t const geometry = this.geometry;\n\t\t const matrixWorld = this.matrixWorld;\n\t\t const threshold = raycaster.params.Points.threshold;\n\t\t const drawRange = geometry.drawRange;\n \n\t\t // Checking boundingSphere distance to ray\n \n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n \n\t\t _sphere.copy( geometry.boundingSphere );\n\t\t _sphere.applyMatrix4( matrixWorld );\n\t\t _sphere.radius += threshold;\n \n\t\t if ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n \n\t\t //\n \n\t\t _inverseMatrix.copy( matrixWorld ).invert();\n\t\t _ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n \n\t\t const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t const localThresholdSq = localThreshold * localThreshold;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t const index = geometry.index;\n\t\t\t const attributes = geometry.attributes;\n\t\t\t const positionAttribute = attributes.position;\n \n\t\t\t if ( index !== null ) {\n \n\t\t\t\t const start = Math.max( 0, drawRange.start );\n\t\t\t\t const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t for ( let i = start, il = end; i < il; i ++ ) {\n \n\t\t\t\t\t const a = index.getX( i );\n \n\t\t\t\t\t _position$2.fromBufferAttribute( positionAttribute, a );\n \n\t\t\t\t\t testPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t const start = Math.max( 0, drawRange.start );\n\t\t\t\t const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n \n\t\t\t\t for ( let i = start, l = end; i < l; i ++ ) {\n \n\t\t\t\t\t _position$2.fromBufferAttribute( positionAttribute, i );\n \n\t\t\t\t\t testPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t console.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t }\n \n\t }\n \n\t updateMorphTargets() {\n \n\t\t const geometry = this.geometry;\n \n\t\t if ( geometry.isBufferGeometry ) {\n \n\t\t\t const morphAttributes = geometry.morphAttributes;\n\t\t\t const keys = Object.keys( morphAttributes );\n \n\t\t\t if ( keys.length > 0 ) {\n \n\t\t\t\t const morphAttribute = morphAttributes[ keys[ 0 ] ];\n \n\t\t\t\t if ( morphAttribute !== undefined ) {\n \n\t\t\t\t\t this.morphTargetInfluences = [];\n\t\t\t\t\t this.morphTargetDictionary = {};\n \n\t\t\t\t\t for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n \n\t\t\t\t\t\t const name = morphAttribute[ m ].name || String( m );\n \n\t\t\t\t\t\t this.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t this.morphTargetDictionary[ name ] = m;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t const morphTargets = geometry.morphTargets;\n \n\t\t\t if ( morphTargets !== undefined && morphTargets.length > 0 ) {\n \n\t\t\t\t console.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n }\n \n Points.prototype.isPoints = true;\n \n function testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n \n\t const rayPointDistanceSq = _ray.distanceSqToPoint( point );\n \n\t if ( rayPointDistanceSq < localThresholdSq ) {\n \n\t\t const intersectPoint = new Vector3();\n \n\t\t _ray.closestPointToPoint( point, intersectPoint );\n\t\t intersectPoint.applyMatrix4( matrixWorld );\n \n\t\t const distance = raycaster.ray.origin.distanceTo( intersectPoint );\n \n\t\t if ( distance < raycaster.near || distance > raycaster.far ) return;\n \n\t\t intersects.push( {\n \n\t\t\t distance: distance,\n\t\t\t distanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t point: intersectPoint,\n\t\t\t index: index,\n\t\t\t face: null,\n\t\t\t object: object\n \n\t\t } );\n \n\t }\n \n }\n \n class VideoTexture extends Texture {\n \n\t constructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n \n\t\t super( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n \n\t\t this.format = format !== undefined ? format : RGBFormat;\n \n\t\t this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n \n\t\t this.generateMipmaps = false;\n \n\t\t const scope = this;\n \n\t\t function updateVideo() {\n \n\t\t\t scope.needsUpdate = true;\n\t\t\t video.requestVideoFrameCallback( updateVideo );\n \n\t\t }\n \n\t\t if ( 'requestVideoFrameCallback' in video ) {\n \n\t\t\t video.requestVideoFrameCallback( updateVideo );\n \n\t\t }\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor( this.image ).copy( this );\n \n\t }\n \n\t update() {\n \n\t\t const video = this.image;\n\t\t const hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n \n\t\t if ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n \n\t\t\t this.needsUpdate = true;\n \n\t\t }\n \n\t }\n \n }\n \n VideoTexture.prototype.isVideoTexture = true;\n \n class CompressedTexture extends Texture {\n \n\t constructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n \n\t\t super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n \n\t\t this.image = { width: width, height: height };\n\t\t this.mipmaps = mipmaps;\n \n\t\t // no flipping for cube textures\n\t\t // (also flipping doesn't work for compressed textures )\n \n\t\t this.flipY = false;\n \n\t\t // can't generate mipmaps for compressed textures\n\t\t // mips must be embedded in DDS files\n \n\t\t this.generateMipmaps = false;\n \n\t }\n \n }\n \n CompressedTexture.prototype.isCompressedTexture = true;\n \n class CanvasTexture extends Texture {\n \n\t constructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n \n\t\t super( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n \n\t\t this.needsUpdate = true;\n \n\t }\n \n }\n \n CanvasTexture.prototype.isCanvasTexture = true;\n \n class DepthTexture extends Texture {\n \n\t constructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n \n\t\t format = format !== undefined ? format : DepthFormat;\n \n\t\t if ( format !== DepthFormat && format !== DepthStencilFormat ) {\n \n\t\t\t throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n \n\t\t }\n \n\t\t if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\t if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n \n\t\t super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n \n\t\t this.image = { width: width, height: height };\n \n\t\t this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n \n\t\t this.flipY = false;\n\t\t this.generateMipmaps\t= false;\n \n\t }\n \n \n }\n \n DepthTexture.prototype.isDepthTexture = true;\n \n class CircleGeometry extends BufferGeometry {\n \n\t constructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n\t\t super();\n \n\t\t this.type = 'CircleGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t segments: segments,\n\t\t\t thetaStart: thetaStart,\n\t\t\t thetaLength: thetaLength\n\t\t };\n \n\t\t segments = Math.max( 3, segments );\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // helper variables\n \n\t\t const vertex = new Vector3();\n\t\t const uv = new Vector2();\n \n\t\t // center point\n \n\t\t vertices.push( 0, 0, 0 );\n\t\t normals.push( 0, 0, 1 );\n\t\t uvs.push( 0.5, 0.5 );\n \n\t\t for ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n \n\t\t\t const segment = thetaStart + s / segments * thetaLength;\n \n\t\t\t // vertex\n \n\t\t\t vertex.x = radius * Math.cos( segment );\n\t\t\t vertex.y = radius * Math.sin( segment );\n \n\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t // normal\n \n\t\t\t normals.push( 0, 0, 1 );\n \n\t\t\t // uvs\n \n\t\t\t uv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\t uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n \n\t\t\t uvs.push( uv.x, uv.y );\n \n\t\t }\n \n\t\t // indices\n \n\t\t for ( let i = 1; i <= segments; i ++ ) {\n \n\t\t\t indices.push( i, i + 1, 0 );\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t }\n \n }\n \n class CylinderGeometry extends BufferGeometry {\n \n\t constructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n\t\t super();\n\t\t this.type = 'CylinderGeometry';\n \n\t\t this.parameters = {\n\t\t\t radiusTop: radiusTop,\n\t\t\t radiusBottom: radiusBottom,\n\t\t\t height: height,\n\t\t\t radialSegments: radialSegments,\n\t\t\t heightSegments: heightSegments,\n\t\t\t openEnded: openEnded,\n\t\t\t thetaStart: thetaStart,\n\t\t\t thetaLength: thetaLength\n\t\t };\n \n\t\t const scope = this;\n \n\t\t radialSegments = Math.floor( radialSegments );\n\t\t heightSegments = Math.floor( heightSegments );\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // helper variables\n \n\t\t let index = 0;\n\t\t const indexArray = [];\n\t\t const halfHeight = height / 2;\n\t\t let groupStart = 0;\n \n\t\t // generate geometry\n \n\t\t generateTorso();\n \n\t\t if ( openEnded === false ) {\n \n\t\t\t if ( radiusTop > 0 ) generateCap( true );\n\t\t\t if ( radiusBottom > 0 ) generateCap( false );\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t\t function generateTorso() {\n \n\t\t\t const normal = new Vector3();\n\t\t\t const vertex = new Vector3();\n \n\t\t\t let groupCount = 0;\n \n\t\t\t // this will be used to calculate the normal\n\t\t\t const slope = ( radiusBottom - radiusTop ) / height;\n \n\t\t\t // generate vertices, normals and uvs\n \n\t\t\t for ( let y = 0; y <= heightSegments; y ++ ) {\n \n\t\t\t\t const indexRow = [];\n \n\t\t\t\t const v = y / heightSegments;\n \n\t\t\t\t // calculate the radius of the current row\n \n\t\t\t\t const radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n \n\t\t\t\t for ( let x = 0; x <= radialSegments; x ++ ) {\n \n\t\t\t\t\t const u = x / radialSegments;\n \n\t\t\t\t\t const theta = u * thetaLength + thetaStart;\n \n\t\t\t\t\t const sinTheta = Math.sin( theta );\n\t\t\t\t\t const cosTheta = Math.cos( theta );\n \n\t\t\t\t\t // vertex\n \n\t\t\t\t\t vertex.x = radius * sinTheta;\n\t\t\t\t\t vertex.y = - v * height + halfHeight;\n\t\t\t\t\t vertex.z = radius * cosTheta;\n\t\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t\t // normal\n \n\t\t\t\t\t normal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\t normals.push( normal.x, normal.y, normal.z );\n \n\t\t\t\t\t // uv\n \n\t\t\t\t\t uvs.push( u, 1 - v );\n \n\t\t\t\t\t // save index of vertex in respective row\n \n\t\t\t\t\t indexRow.push( index ++ );\n \n\t\t\t\t }\n \n\t\t\t\t // now save vertices of the row in our index array\n \n\t\t\t\t indexArray.push( indexRow );\n \n\t\t\t }\n \n\t\t\t // generate indices\n \n\t\t\t for ( let x = 0; x < radialSegments; x ++ ) {\n \n\t\t\t\t for ( let y = 0; y < heightSegments; y ++ ) {\n \n\t\t\t\t\t // we use the index array to access the correct indices\n \n\t\t\t\t\t const a = indexArray[ y ][ x ];\n\t\t\t\t\t const b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\t const c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\t const d = indexArray[ y ][ x + 1 ];\n \n\t\t\t\t\t // faces\n \n\t\t\t\t\t indices.push( a, b, d );\n\t\t\t\t\t indices.push( b, c, d );\n \n\t\t\t\t\t // update group counter\n \n\t\t\t\t\t groupCount += 6;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // add a group to the geometry. this will ensure multi material support\n \n\t\t\t scope.addGroup( groupStart, groupCount, 0 );\n \n\t\t\t // calculate new start value for groups\n \n\t\t\t groupStart += groupCount;\n \n\t\t }\n \n\t\t function generateCap( top ) {\n \n\t\t\t // save the index of the first center vertex\n\t\t\t const centerIndexStart = index;\n \n\t\t\t const uv = new Vector2();\n\t\t\t const vertex = new Vector3();\n \n\t\t\t let groupCount = 0;\n \n\t\t\t const radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\t const sign = ( top === true ) ? 1 : - 1;\n \n\t\t\t // first we generate the center vertex data of the cap.\n\t\t\t // because the geometry needs one set of uvs per face,\n\t\t\t // we must generate a center vertex per face/segment\n \n\t\t\t for ( let x = 1; x <= radialSegments; x ++ ) {\n \n\t\t\t\t // vertex\n \n\t\t\t\t vertices.push( 0, halfHeight * sign, 0 );\n \n\t\t\t\t // normal\n \n\t\t\t\t normals.push( 0, sign, 0 );\n \n\t\t\t\t // uv\n \n\t\t\t\t uvs.push( 0.5, 0.5 );\n \n\t\t\t\t // increase index\n \n\t\t\t\t index ++;\n \n\t\t\t }\n \n\t\t\t // save the index of the last center vertex\n\t\t\t const centerIndexEnd = index;\n \n\t\t\t // now we generate the surrounding vertices, normals and uvs\n \n\t\t\t for ( let x = 0; x <= radialSegments; x ++ ) {\n \n\t\t\t\t const u = x / radialSegments;\n\t\t\t\t const theta = u * thetaLength + thetaStart;\n \n\t\t\t\t const cosTheta = Math.cos( theta );\n\t\t\t\t const sinTheta = Math.sin( theta );\n \n\t\t\t\t // vertex\n \n\t\t\t\t vertex.x = radius * sinTheta;\n\t\t\t\t vertex.y = halfHeight * sign;\n\t\t\t\t vertex.z = radius * cosTheta;\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t // normal\n \n\t\t\t\t normals.push( 0, sign, 0 );\n \n\t\t\t\t // uv\n \n\t\t\t\t uv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\t uv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\t uvs.push( uv.x, uv.y );\n \n\t\t\t\t // increase index\n \n\t\t\t\t index ++;\n \n\t\t\t }\n \n\t\t\t // generate indices\n \n\t\t\t for ( let x = 0; x < radialSegments; x ++ ) {\n \n\t\t\t\t const c = centerIndexStart + x;\n\t\t\t\t const i = centerIndexEnd + x;\n \n\t\t\t\t if ( top === true ) {\n \n\t\t\t\t\t // face top\n \n\t\t\t\t\t indices.push( i, i + 1, c );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // face bottom\n \n\t\t\t\t\t indices.push( i + 1, i, c );\n \n\t\t\t\t }\n \n\t\t\t\t groupCount += 3;\n \n\t\t\t }\n \n\t\t\t // add a group to the geometry. this will ensure multi material support\n \n\t\t\t scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n \n\t\t\t // calculate new start value for groups\n \n\t\t\t groupStart += groupCount;\n \n\t\t }\n \n\t }\n \n }\n \n class ConeGeometry extends CylinderGeometry {\n \n\t constructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n\t\t super( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n \n\t\t this.type = 'ConeGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t height: height,\n\t\t\t radialSegments: radialSegments,\n\t\t\t heightSegments: heightSegments,\n\t\t\t openEnded: openEnded,\n\t\t\t thetaStart: thetaStart,\n\t\t\t thetaLength: thetaLength\n\t\t };\n \n\t }\n \n }\n \n class PolyhedronGeometry extends BufferGeometry {\n \n\t constructor( vertices, indices, radius = 1, detail = 0 ) {\n \n\t\t super();\n \n\t\t this.type = 'PolyhedronGeometry';\n \n\t\t this.parameters = {\n\t\t\t vertices: vertices,\n\t\t\t indices: indices,\n\t\t\t radius: radius,\n\t\t\t detail: detail\n\t\t };\n \n\t\t // default buffer data\n \n\t\t const vertexBuffer = [];\n\t\t const uvBuffer = [];\n \n\t\t // the subdivision creates the vertex buffer data\n \n\t\t subdivide( detail );\n \n\t\t // all vertices should lie on a conceptual sphere with a given radius\n \n\t\t applyRadius( radius );\n \n\t\t // finally, create the uv data\n \n\t\t generateUVs();\n \n\t\t // build non-indexed geometry\n \n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n \n\t\t if ( detail === 0 ) {\n \n\t\t\t this.computeVertexNormals(); // flat normals\n \n\t\t } else {\n \n\t\t\t this.normalizeNormals(); // smooth normals\n \n\t\t }\n \n\t\t // helper functions\n \n\t\t function subdivide( detail ) {\n \n\t\t\t const a = new Vector3();\n\t\t\t const b = new Vector3();\n\t\t\t const c = new Vector3();\n \n\t\t\t // iterate over all faces and apply a subdivison with the given detail value\n \n\t\t\t for ( let i = 0; i < indices.length; i += 3 ) {\n \n\t\t\t\t // get the vertices of the face\n \n\t\t\t\t getVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\t getVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\t getVertexByIndex( indices[ i + 2 ], c );\n \n\t\t\t\t // perform subdivision\n \n\t\t\t\t subdivideFace( a, b, c, detail );\n \n\t\t\t }\n \n\t\t }\n \n\t\t function subdivideFace( a, b, c, detail ) {\n \n\t\t\t const cols = detail + 1;\n \n\t\t\t // we use this multidimensional array as a data structure for creating the subdivision\n \n\t\t\t const v = [];\n \n\t\t\t // construct all of the vertices for this subdivision\n \n\t\t\t for ( let i = 0; i <= cols; i ++ ) {\n \n\t\t\t\t v[ i ] = [];\n \n\t\t\t\t const aj = a.clone().lerp( c, i / cols );\n\t\t\t\t const bj = b.clone().lerp( c, i / cols );\n \n\t\t\t\t const rows = cols - i;\n \n\t\t\t\t for ( let j = 0; j <= rows; j ++ ) {\n \n\t\t\t\t\t if ( j === 0 && i === cols ) {\n \n\t\t\t\t\t\t v[ i ][ j ] = aj;\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t v[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // construct all of the faces\n \n\t\t\t for ( let i = 0; i < cols; i ++ ) {\n \n\t\t\t\t for ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n \n\t\t\t\t\t const k = Math.floor( j / 2 );\n \n\t\t\t\t\t if ( j % 2 === 0 ) {\n \n\t\t\t\t\t\t pushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\t pushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\t pushVertex( v[ i ][ k ] );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t pushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\t pushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\t pushVertex( v[ i + 1 ][ k ] );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t function applyRadius( radius ) {\n \n\t\t\t const vertex = new Vector3();\n \n\t\t\t // iterate over the entire buffer and apply the radius to each vertex\n \n\t\t\t for ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n \n\t\t\t\t vertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\t vertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\t vertex.z = vertexBuffer[ i + 2 ];\n \n\t\t\t\t vertex.normalize().multiplyScalar( radius );\n \n\t\t\t\t vertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\t vertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\t vertexBuffer[ i + 2 ] = vertex.z;\n \n\t\t\t }\n \n\t\t }\n \n\t\t function generateUVs() {\n \n\t\t\t const vertex = new Vector3();\n \n\t\t\t for ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n \n\t\t\t\t vertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\t vertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\t vertex.z = vertexBuffer[ i + 2 ];\n \n\t\t\t\t const u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\t const v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\t uvBuffer.push( u, 1 - v );\n \n\t\t\t }\n \n\t\t\t correctUVs();\n \n\t\t\t correctSeam();\n \n\t\t }\n \n\t\t function correctSeam() {\n \n\t\t\t // handle case when face straddles the seam, see #3269\n \n\t\t\t for ( let i = 0; i < uvBuffer.length; i += 6 ) {\n \n\t\t\t\t // uv data of a single face\n \n\t\t\t\t const x0 = uvBuffer[ i + 0 ];\n\t\t\t\t const x1 = uvBuffer[ i + 2 ];\n\t\t\t\t const x2 = uvBuffer[ i + 4 ];\n \n\t\t\t\t const max = Math.max( x0, x1, x2 );\n\t\t\t\t const min = Math.min( x0, x1, x2 );\n \n\t\t\t\t // 0.9 is somewhat arbitrary\n \n\t\t\t\t if ( max > 0.9 && min < 0.1 ) {\n \n\t\t\t\t\t if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\t if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\t if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t function pushVertex( vertex ) {\n \n\t\t\t vertexBuffer.push( vertex.x, vertex.y, vertex.z );\n \n\t\t }\n \n\t\t function getVertexByIndex( index, vertex ) {\n \n\t\t\t const stride = index * 3;\n \n\t\t\t vertex.x = vertices[ stride + 0 ];\n\t\t\t vertex.y = vertices[ stride + 1 ];\n\t\t\t vertex.z = vertices[ stride + 2 ];\n \n\t\t }\n \n\t\t function correctUVs() {\n \n\t\t\t const a = new Vector3();\n\t\t\t const b = new Vector3();\n\t\t\t const c = new Vector3();\n \n\t\t\t const centroid = new Vector3();\n \n\t\t\t const uvA = new Vector2();\n\t\t\t const uvB = new Vector2();\n\t\t\t const uvC = new Vector2();\n \n\t\t\t for ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n \n\t\t\t\t a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\t b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\t c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n \n\t\t\t\t uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\t uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\t uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n \n\t\t\t\t centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n \n\t\t\t\t const azi = azimuth( centroid );\n \n\t\t\t\t correctUV( uvA, j + 0, a, azi );\n\t\t\t\t correctUV( uvB, j + 2, b, azi );\n\t\t\t\t correctUV( uvC, j + 4, c, azi );\n \n\t\t\t }\n \n\t\t }\n \n\t\t function correctUV( uv, stride, vector, azimuth ) {\n \n\t\t\t if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n \n\t\t\t\t uvBuffer[ stride ] = uv.x - 1;\n \n\t\t\t }\n \n\t\t\t if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n \n\t\t\t\t uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n \n\t\t\t }\n \n\t\t }\n \n\t\t // Angle around the Y axis, counter-clockwise when looking from above.\n \n\t\t function azimuth( vector ) {\n \n\t\t\t return Math.atan2( vector.z, - vector.x );\n \n\t\t }\n \n \n\t\t // Angle above the XZ plane.\n \n\t\t function inclination( vector ) {\n \n\t\t\t return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n \n\t\t }\n \n\t }\n \n }\n \n class DodecahedronGeometry extends PolyhedronGeometry {\n \n\t constructor( radius = 1, detail = 0 ) {\n \n\t\t const t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\t const r = 1 / t;\n \n\t\t const vertices = [\n \n\t\t\t // (±1, ±1, ±1)\n\t\t\t - 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t - 1, 1, - 1, - 1, 1, 1,\n\t\t\t 1, - 1, - 1, 1, - 1, 1,\n\t\t\t 1, 1, - 1, 1, 1, 1,\n \n\t\t\t // (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t, 0, - r, t,\n\t\t\t 0, r, - t, 0, r, t,\n \n\t\t\t // (±1/φ, ±φ, 0)\n\t\t\t - r, - t, 0, - r, t, 0,\n\t\t\t r, - t, 0, r, t, 0,\n \n\t\t\t // (±φ, 0, ±1/φ)\n\t\t\t - t, 0, - r, t, 0, - r,\n\t\t\t - t, 0, r, t, 0, r\n\t\t ];\n \n\t\t const indices = [\n\t\t\t 3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t 7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t 17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t 8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t 0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t 6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t 2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t 18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t 4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t 11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t 19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t 1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t ];\n \n\t\t super( vertices, indices, radius, detail );\n \n\t\t this.type = 'DodecahedronGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t detail: detail\n\t\t };\n \n\t }\n \n }\n \n const _v0 = new Vector3();\n const _v1$1 = new Vector3();\n const _normal = new Vector3();\n const _triangle = new Triangle();\n \n class EdgesGeometry extends BufferGeometry {\n \n\t constructor( geometry, thresholdAngle ) {\n \n\t\t super();\n \n\t\t this.type = 'EdgesGeometry';\n \n\t\t this.parameters = {\n\t\t\t thresholdAngle: thresholdAngle\n\t\t };\n \n\t\t thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n \n\t\t if ( geometry.isGeometry === true ) {\n \n\t\t\t console.error( 'THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t const precisionPoints = 4;\n\t\t const precision = Math.pow( 10, precisionPoints );\n\t\t const thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n \n\t\t const indexAttr = geometry.getIndex();\n\t\t const positionAttr = geometry.getAttribute( 'position' );\n\t\t const indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n \n\t\t const indexArr = [ 0, 0, 0 ];\n\t\t const vertKeys = [ 'a', 'b', 'c' ];\n\t\t const hashes = new Array( 3 );\n \n\t\t const edgeData = {};\n\t\t const vertices = [];\n\t\t for ( let i = 0; i < indexCount; i += 3 ) {\n \n\t\t\t if ( indexAttr ) {\n \n\t\t\t\t indexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t indexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t indexArr[ 2 ] = indexAttr.getX( i + 2 );\n \n\t\t\t } else {\n \n\t\t\t\t indexArr[ 0 ] = i;\n\t\t\t\t indexArr[ 1 ] = i + 1;\n\t\t\t\t indexArr[ 2 ] = i + 2;\n \n\t\t\t }\n \n\t\t\t const { a, b, c } = _triangle;\n\t\t\t a.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t b.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t c.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t _triangle.getNormal( _normal );\n \n\t\t\t // create hashes for the edge from the vertices\n\t\t\t hashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t hashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t hashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n \n\t\t\t // skip degenerate triangles\n\t\t\t if ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n \n\t\t\t\t continue;\n \n\t\t\t }\n \n\t\t\t // iterate over every edge\n\t\t\t for ( let j = 0; j < 3; j ++ ) {\n \n\t\t\t\t // get the first and next vertex making up the edge\n\t\t\t\t const jNext = ( j + 1 ) % 3;\n\t\t\t\t const vecHash0 = hashes[ j ];\n\t\t\t\t const vecHash1 = hashes[ jNext ];\n\t\t\t\t const v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t const v1 = _triangle[ vertKeys[ jNext ] ];\n \n\t\t\t\t const hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t const reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n \n\t\t\t\t if ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n \n\t\t\t\t\t // if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t // it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t if ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n \n\t\t\t\t\t\t vertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t vertices.push( v1.x, v1.y, v1.z );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t edgeData[ reverseHash ] = null;\n \n\t\t\t\t } else if ( ! ( hash in edgeData ) ) {\n \n\t\t\t\t\t // if we've already got an edge here then skip adding a new one\n\t\t\t\t\t edgeData[ hash ] = {\n \n\t\t\t\t\t\t index0: indexArr[ j ],\n\t\t\t\t\t\t index1: indexArr[ jNext ],\n\t\t\t\t\t\t normal: _normal.clone(),\n \n\t\t\t\t\t };\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t // iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t for ( const key in edgeData ) {\n \n\t\t\t if ( edgeData[ key ] ) {\n \n\t\t\t\t const { index0, index1 } = edgeData[ key ];\n\t\t\t\t _v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t _v1$1.fromBufferAttribute( positionAttr, index1 );\n \n\t\t\t\t vertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t vertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n \n\t\t\t }\n \n\t\t }\n \n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n \n\t }\n \n }\n \n /**\n  * Port from https://github.com/mapbox/earcut (v2.2.2)\n  */\n \n const Earcut = {\n \n\t triangulate: function ( data, holeIndices, dim = 2 ) {\n \n\t\t const hasHoles = holeIndices && holeIndices.length;\n\t\t const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\t let outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\t const triangles = [];\n \n\t\t if ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n \n\t\t let minX, minY, maxX, maxY, x, y, invSize;\n \n\t\t if ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n \n\t\t // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\t if ( data.length > 80 * dim ) {\n \n\t\t\t minX = maxX = data[ 0 ];\n\t\t\t minY = maxY = data[ 1 ];\n \n\t\t\t for ( let i = dim; i < outerLen; i += dim ) {\n \n\t\t\t\t x = data[ i ];\n\t\t\t\t y = data[ i + 1 ];\n\t\t\t\t if ( x < minX ) minX = x;\n\t\t\t\t if ( y < minY ) minY = y;\n\t\t\t\t if ( x > maxX ) maxX = x;\n\t\t\t\t if ( y > maxY ) maxY = y;\n \n\t\t\t }\n \n\t\t\t // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\t invSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t invSize = invSize !== 0 ? 1 / invSize : 0;\n \n\t\t }\n \n\t\t earcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n \n\t\t return triangles;\n \n\t }\n \n };\n \n // create a circular doubly linked list from polygon points in the specified winding order\n function linkedList( data, start, end, dim, clockwise ) {\n \n\t let i, last;\n \n\t if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n \n\t\t for ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n \n\t } else {\n \n\t\t for ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n \n\t }\n \n\t if ( last && equals( last, last.next ) ) {\n \n\t\t removeNode( last );\n\t\t last = last.next;\n \n\t }\n \n\t return last;\n \n }\n \n // eliminate colinear or duplicate points\n function filterPoints( start, end ) {\n \n\t if ( ! start ) return start;\n\t if ( ! end ) end = start;\n \n\t let p = start,\n\t\t again;\n\t do {\n \n\t\t again = false;\n \n\t\t if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n \n\t\t\t removeNode( p );\n\t\t\t p = end = p.prev;\n\t\t\t if ( p === p.next ) break;\n\t\t\t again = true;\n \n\t\t } else {\n \n\t\t\t p = p.next;\n \n\t\t }\n \n\t } while ( again || p !== end );\n \n\t return end;\n \n }\n \n // main ear slicing loop which triangulates a polygon (given as a linked list)\n function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n \n\t if ( ! ear ) return;\n \n\t // interlink polygon nodes in z-order\n\t if ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n \n\t let stop = ear,\n\t\t prev, next;\n \n\t // iterate through ears, slicing them one by one\n\t while ( ear.prev !== ear.next ) {\n \n\t\t prev = ear.prev;\n\t\t next = ear.next;\n \n\t\t if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n \n\t\t\t // cut off the triangle\n\t\t\t triangles.push( prev.i / dim );\n\t\t\t triangles.push( ear.i / dim );\n\t\t\t triangles.push( next.i / dim );\n \n\t\t\t removeNode( ear );\n \n\t\t\t // skipping the next vertex leads to less sliver triangles\n\t\t\t ear = next.next;\n\t\t\t stop = next.next;\n \n\t\t\t continue;\n \n\t\t }\n \n\t\t ear = next;\n \n\t\t // if we looped through the whole remaining polygon and can't find any more ears\n\t\t if ( ear === stop ) {\n \n\t\t\t // try filtering points and slicing again\n\t\t\t if ( ! pass ) {\n \n\t\t\t\t earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n \n\t\t\t\t // if this didn't work, try curing all small self-intersections locally\n \n\t\t\t } else if ( pass === 1 ) {\n \n\t\t\t\t ear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\t earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n \n\t\t\t\t // as a last resort, try splitting the remaining polygon into two\n \n\t\t\t } else if ( pass === 2 ) {\n \n\t\t\t\t splitEarcut( ear, triangles, dim, minX, minY, invSize );\n \n\t\t\t }\n \n\t\t\t break;\n \n\t\t }\n \n\t }\n \n }\n \n // check whether a polygon node forms a valid ear with adjacent nodes\n function isEar( ear ) {\n \n\t const a = ear.prev,\n\t\t b = ear,\n\t\t c = ear.next;\n \n\t if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n \n\t // now make sure we don't have other points inside the potential ear\n\t let p = ear.next.next;\n \n\t while ( p !== ear.prev ) {\n \n\t\t if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t area( p.prev, p, p.next ) >= 0 ) return false;\n\t\t p = p.next;\n \n\t }\n \n\t return true;\n \n }\n \n function isEarHashed( ear, minX, minY, invSize ) {\n \n\t const a = ear.prev,\n\t\t b = ear,\n\t\t c = ear.next;\n \n\t if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n \n\t // triangle bbox; min & max are calculated like this for speed\n\t const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\t minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\t maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\t maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n \n\t // z-order range for the current triangle bbox;\n\t const minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\t maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n \n\t let p = ear.prevZ,\n\t\t n = ear.nextZ;\n \n\t // look for points inside the triangle in both directions\n\t while ( p && p.z >= minZ && n && n.z <= maxZ ) {\n \n\t\t if ( p !== ear.prev && p !== ear.next &&\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t area( p.prev, p, p.next ) >= 0 ) return false;\n\t\t p = p.prevZ;\n \n\t\t if ( n !== ear.prev && n !== ear.next &&\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t area( n.prev, n, n.next ) >= 0 ) return false;\n\t\t n = n.nextZ;\n \n\t }\n \n\t // look for remaining points in decreasing z-order\n\t while ( p && p.z >= minZ ) {\n \n\t\t if ( p !== ear.prev && p !== ear.next &&\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t area( p.prev, p, p.next ) >= 0 ) return false;\n\t\t p = p.prevZ;\n \n\t }\n \n\t // look for remaining points in increasing z-order\n\t while ( n && n.z <= maxZ ) {\n \n\t\t if ( n !== ear.prev && n !== ear.next &&\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t area( n.prev, n, n.next ) >= 0 ) return false;\n\t\t n = n.nextZ;\n \n\t }\n \n\t return true;\n \n }\n \n // go through all polygon nodes and cure small local self-intersections\n function cureLocalIntersections( start, triangles, dim ) {\n \n\t let p = start;\n\t do {\n \n\t\t const a = p.prev,\n\t\t\t b = p.next.next;\n \n\t\t if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n \n\t\t\t triangles.push( a.i / dim );\n\t\t\t triangles.push( p.i / dim );\n\t\t\t triangles.push( b.i / dim );\n \n\t\t\t // remove two nodes involved\n\t\t\t removeNode( p );\n\t\t\t removeNode( p.next );\n \n\t\t\t p = start = b;\n \n\t\t }\n \n\t\t p = p.next;\n \n\t } while ( p !== start );\n \n\t return filterPoints( p );\n \n }\n \n // try splitting polygon into two and triangulate them independently\n function splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n \n\t // look for a valid diagonal that divides the polygon into two\n\t let a = start;\n\t do {\n \n\t\t let b = a.next.next;\n\t\t while ( b !== a.prev ) {\n \n\t\t\t if ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n \n\t\t\t\t // split the polygon in two by the diagonal\n\t\t\t\t let c = splitPolygon( a, b );\n \n\t\t\t\t // filter colinear points around the cuts\n\t\t\t\t a = filterPoints( a, a.next );\n\t\t\t\t c = filterPoints( c, c.next );\n \n\t\t\t\t // run earcut on each half\n\t\t\t\t earcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\t earcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\t return;\n \n\t\t\t }\n \n\t\t\t b = b.next;\n \n\t\t }\n \n\t\t a = a.next;\n \n\t } while ( a !== start );\n \n }\n \n // link every hole into the outer loop, producing a single-ring polygon without holes\n function eliminateHoles( data, holeIndices, outerNode, dim ) {\n \n\t const queue = [];\n\t let i, len, start, end, list;\n \n\t for ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n \n\t\t start = holeIndices[ i ] * dim;\n\t\t end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t list = linkedList( data, start, end, dim, false );\n\t\t if ( list === list.next ) list.steiner = true;\n\t\t queue.push( getLeftmost( list ) );\n \n\t }\n \n\t queue.sort( compareX );\n \n\t // process holes from left to right\n\t for ( i = 0; i < queue.length; i ++ ) {\n \n\t\t eliminateHole( queue[ i ], outerNode );\n\t\t outerNode = filterPoints( outerNode, outerNode.next );\n \n\t }\n \n\t return outerNode;\n \n }\n \n function compareX( a, b ) {\n \n\t return a.x - b.x;\n \n }\n \n // find a bridge between vertices that connects hole with an outer ring and and link it\n function eliminateHole( hole, outerNode ) {\n \n\t outerNode = findHoleBridge( hole, outerNode );\n\t if ( outerNode ) {\n \n\t\t const b = splitPolygon( outerNode, hole );\n \n\t\t // filter collinear points around the cuts\n\t\t filterPoints( outerNode, outerNode.next );\n\t\t filterPoints( b, b.next );\n \n\t }\n \n }\n \n // David Eberly's algorithm for finding a bridge between hole and outer polygon\n function findHoleBridge( hole, outerNode ) {\n \n\t let p = outerNode;\n\t const hx = hole.x;\n\t const hy = hole.y;\n\t let qx = - Infinity, m;\n \n\t // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t // segment's endpoint with lesser x will be potential connection point\n\t do {\n \n\t\t if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n \n\t\t\t const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\t if ( x <= hx && x > qx ) {\n \n\t\t\t\t qx = x;\n\t\t\t\t if ( x === hx ) {\n \n\t\t\t\t\t if ( hy === p.y ) return p;\n\t\t\t\t\t if ( hy === p.next.y ) return p.next;\n \n\t\t\t\t }\n \n\t\t\t\t m = p.x < p.next.x ? p : p.next;\n \n\t\t\t }\n \n\t\t }\n \n\t\t p = p.next;\n \n\t } while ( p !== outerNode );\n \n\t if ( ! m ) return null;\n \n\t if ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n \n\t // look for points inside the triangle of hole point, segment intersection and endpoint;\n\t // if there are no points found, we have a valid connection;\n\t // otherwise choose the point of the minimum angle with the ray as connection point\n \n\t const stop = m,\n\t\t mx = m.x,\n\t\t my = m.y;\n\t let tanMin = Infinity, tan;\n \n\t p = m;\n \n\t do {\n \n\t\t if ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n \n\t\t\t tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n \n\t\t\t if ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n \n\t\t\t\t m = p;\n\t\t\t\t tanMin = tan;\n \n\t\t\t }\n \n\t\t }\n \n\t\t p = p.next;\n \n\t } while ( p !== stop );\n \n\t return m;\n \n }\n \n // whether sector in vertex m contains sector in vertex p in the same coordinates\n function sectorContainsSector( m, p ) {\n \n\t return area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n \n }\n \n // interlink polygon nodes in z-order\n function indexCurve( start, minX, minY, invSize ) {\n \n\t let p = start;\n\t do {\n \n\t\t if ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\t p.prevZ = p.prev;\n\t\t p.nextZ = p.next;\n\t\t p = p.next;\n \n\t } while ( p !== start );\n \n\t p.prevZ.nextZ = null;\n\t p.prevZ = null;\n \n\t sortLinked( p );\n \n }\n \n // Simon Tatham's linked list merge sort algorithm\n // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n function sortLinked( list ) {\n \n\t let i, p, q, e, tail, numMerges, pSize, qSize,\n\t\t inSize = 1;\n \n\t do {\n \n\t\t p = list;\n\t\t list = null;\n\t\t tail = null;\n\t\t numMerges = 0;\n \n\t\t while ( p ) {\n \n\t\t\t numMerges ++;\n\t\t\t q = p;\n\t\t\t pSize = 0;\n\t\t\t for ( i = 0; i < inSize; i ++ ) {\n \n\t\t\t\t pSize ++;\n\t\t\t\t q = q.nextZ;\n\t\t\t\t if ( ! q ) break;\n \n\t\t\t }\n \n\t\t\t qSize = inSize;\n \n\t\t\t while ( pSize > 0 || ( qSize > 0 && q ) ) {\n \n\t\t\t\t if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n \n\t\t\t\t\t e = p;\n\t\t\t\t\t p = p.nextZ;\n\t\t\t\t\t pSize --;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t e = q;\n\t\t\t\t\t q = q.nextZ;\n\t\t\t\t\t qSize --;\n \n\t\t\t\t }\n \n\t\t\t\t if ( tail ) tail.nextZ = e;\n\t\t\t\t else list = e;\n \n\t\t\t\t e.prevZ = tail;\n\t\t\t\t tail = e;\n \n\t\t\t }\n \n\t\t\t p = q;\n \n\t\t }\n \n\t\t tail.nextZ = null;\n\t\t inSize *= 2;\n \n\t } while ( numMerges > 1 );\n \n\t return list;\n \n }\n \n // z-order of a point given coords and inverse of the longer side of data bbox\n function zOrder( x, y, minX, minY, invSize ) {\n \n\t // coords are transformed into non-negative 15-bit integer range\n\t x = 32767 * ( x - minX ) * invSize;\n\t y = 32767 * ( y - minY ) * invSize;\n \n\t x = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t x = ( x | ( x << 2 ) ) & 0x33333333;\n\t x = ( x | ( x << 1 ) ) & 0x55555555;\n \n\t y = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t y = ( y | ( y << 2 ) ) & 0x33333333;\n\t y = ( y | ( y << 1 ) ) & 0x55555555;\n \n\t return x | ( y << 1 );\n \n }\n \n // find the leftmost node of a polygon ring\n function getLeftmost( start ) {\n \n\t let p = start,\n\t\t leftmost = start;\n\t do {\n \n\t\t if ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\t p = p.next;\n \n\t } while ( p !== start );\n \n\t return leftmost;\n \n }\n \n // check if a point lies within a convex triangle\n function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n \n\t return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n \n }\n \n // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n function isValidDiagonal( a, b ) {\n \n\t return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\t equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n \n }\n \n // signed area of a triangle\n function area( p, q, r ) {\n \n\t return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n \n }\n \n // check if two points are equal\n function equals( p1, p2 ) {\n \n\t return p1.x === p2.x && p1.y === p2.y;\n \n }\n \n // check if two segments intersect\n function intersects( p1, q1, p2, q2 ) {\n \n\t const o1 = sign( area( p1, q1, p2 ) );\n\t const o2 = sign( area( p1, q1, q2 ) );\n\t const o3 = sign( area( p2, q2, p1 ) );\n\t const o4 = sign( area( p2, q2, q1 ) );\n \n\t if ( o1 !== o2 && o3 !== o4 ) return true; // general case\n \n\t if ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\t if ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\t if ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\t if ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n \n\t return false;\n \n }\n \n // for collinear points p, q, r, check if point q lies on segment pr\n function onSegment( p, q, r ) {\n \n\t return q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n \n }\n \n function sign( num ) {\n \n\t return num > 0 ? 1 : num < 0 ? - 1 : 0;\n \n }\n \n // check if a polygon diagonal intersects any polygon segments\n function intersectsPolygon( a, b ) {\n \n\t let p = a;\n\t do {\n \n\t\t if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t intersects( p, p.next, a, b ) ) return true;\n\t\t p = p.next;\n \n\t } while ( p !== a );\n \n\t return false;\n \n }\n \n // check if a polygon diagonal is locally inside the polygon\n function locallyInside( a, b ) {\n \n\t return area( a.prev, a, a.next ) < 0 ?\n\t\t area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n \n }\n \n // check if the middle point of a polygon diagonal is inside the polygon\n function middleInside( a, b ) {\n \n\t let p = a,\n\t\t inside = false;\n\t const px = ( a.x + b.x ) / 2,\n\t\t py = ( a.y + b.y ) / 2;\n\t do {\n \n\t\t if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\t inside = ! inside;\n\t\t p = p.next;\n \n\t } while ( p !== a );\n \n\t return inside;\n \n }\n \n // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n function splitPolygon( a, b ) {\n \n\t const a2 = new Node( a.i, a.x, a.y ),\n\t\t b2 = new Node( b.i, b.x, b.y ),\n\t\t an = a.next,\n\t\t bp = b.prev;\n \n\t a.next = b;\n\t b.prev = a;\n \n\t a2.next = an;\n\t an.prev = a2;\n \n\t b2.next = a2;\n\t a2.prev = b2;\n \n\t bp.next = b2;\n\t b2.prev = bp;\n \n\t return b2;\n \n }\n \n // create a node and optionally link it with previous one (in a circular doubly linked list)\n function insertNode( i, x, y, last ) {\n \n\t const p = new Node( i, x, y );\n \n\t if ( ! last ) {\n \n\t\t p.prev = p;\n\t\t p.next = p;\n \n\t } else {\n \n\t\t p.next = last.next;\n\t\t p.prev = last;\n\t\t last.next.prev = p;\n\t\t last.next = p;\n \n\t }\n \n\t return p;\n \n }\n \n function removeNode( p ) {\n \n\t p.next.prev = p.prev;\n\t p.prev.next = p.next;\n \n\t if ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\t if ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n \n }\n \n function Node( i, x, y ) {\n \n\t // vertex index in coordinates array\n\t this.i = i;\n \n\t // vertex coordinates\n\t this.x = x;\n\t this.y = y;\n \n\t // previous and next vertex nodes in a polygon ring\n\t this.prev = null;\n\t this.next = null;\n \n\t // z-order curve value\n\t this.z = null;\n \n\t // previous and next nodes in z-order\n\t this.prevZ = null;\n\t this.nextZ = null;\n \n\t // indicates whether this is a steiner point\n\t this.steiner = false;\n \n }\n \n function signedArea( data, start, end, dim ) {\n \n\t let sum = 0;\n\t for ( let i = start, j = end - dim; i < end; i += dim ) {\n \n\t\t sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t j = i;\n \n\t }\n \n\t return sum;\n \n }\n \n class ShapeUtils {\n \n\t // calculate area of the contour polygon\n \n\t static area( contour ) {\n \n\t\t const n = contour.length;\n\t\t let a = 0.0;\n \n\t\t for ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n \n\t\t\t a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n \n\t\t }\n \n\t\t return a * 0.5;\n \n\t }\n \n\t static isClockWise( pts ) {\n \n\t\t return ShapeUtils.area( pts ) < 0;\n \n\t }\n \n\t static triangulateShape( contour, holes ) {\n \n\t\t const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t const holeIndices = []; // array of hole indices\n\t\t const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n \n\t\t removeDupEndPts( contour );\n\t\t addContour( vertices, contour );\n \n\t\t //\n \n\t\t let holeIndex = contour.length;\n \n\t\t holes.forEach( removeDupEndPts );\n \n\t\t for ( let i = 0; i < holes.length; i ++ ) {\n \n\t\t\t holeIndices.push( holeIndex );\n\t\t\t holeIndex += holes[ i ].length;\n\t\t\t addContour( vertices, holes[ i ] );\n \n\t\t }\n \n\t\t //\n \n\t\t const triangles = Earcut.triangulate( vertices, holeIndices );\n \n\t\t //\n \n\t\t for ( let i = 0; i < triangles.length; i += 3 ) {\n \n\t\t\t faces.push( triangles.slice( i, i + 3 ) );\n \n\t\t }\n \n\t\t return faces;\n \n\t }\n \n }\n \n function removeDupEndPts( points ) {\n \n\t const l = points.length;\n \n\t if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n \n\t\t points.pop();\n \n\t }\n \n }\n \n function addContour( vertices, contour ) {\n \n\t for ( let i = 0; i < contour.length; i ++ ) {\n \n\t\t vertices.push( contour[ i ].x );\n\t\t vertices.push( contour[ i ].y );\n \n\t }\n \n }\n \n /**\n  * Creates extruded geometry from a path shape.\n  *\n  * parameters = {\n  *\n  *  curveSegments: <int>, // number of points on the curves\n  *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n  *  depth: <float>, // Depth to extrude the shape\n  *\n  *  bevelEnabled: <bool>, // turn on bevel\n  *  bevelThickness: <float>, // how deep into the original shape bevel goes\n  *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n  *  bevelOffset: <float>, // how far from shape outline does bevel start\n  *  bevelSegments: <int>, // number of bevel layers\n  *\n  *  extrudePath: <THREE.Curve> // curve to extrude shape along\n  *\n  *  UVGenerator: <Object> // object that provides UV generator functions\n  *\n  * }\n  */\n \n class ExtrudeGeometry extends BufferGeometry {\n \n\t constructor( shapes, options ) {\n \n\t\t super();\n \n\t\t this.type = 'ExtrudeGeometry';\n \n\t\t this.parameters = {\n\t\t\t shapes: shapes,\n\t\t\t options: options\n\t\t };\n \n\t\t shapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n \n\t\t const scope = this;\n \n\t\t const verticesArray = [];\n\t\t const uvArray = [];\n \n\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n\t\t\t const shape = shapes[ i ];\n\t\t\t addShape( shape );\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n \n\t\t this.computeVertexNormals();\n \n\t\t // functions\n \n\t\t function addShape( shape ) {\n \n\t\t\t const placeholder = [];\n \n\t\t\t // options\n \n\t\t\t const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t const steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t let depth = options.depth !== undefined ? options.depth : 100;\n \n\t\t\t let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\t let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\t let bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n \n\t\t\t const extrudePath = options.extrudePath;\n \n\t\t\t const uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n \n\t\t\t // deprecated options\n \n\t\t\t if ( options.amount !== undefined ) {\n \n\t\t\t\t console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\t depth = options.amount;\n \n\t\t\t }\n \n\t\t\t //\n \n\t\t\t let extrudePts, extrudeByPath = false;\n\t\t\t let splineTube, binormal, normal, position2;\n \n\t\t\t if ( extrudePath ) {\n \n\t\t\t\t extrudePts = extrudePath.getSpacedPoints( steps );\n \n\t\t\t\t extrudeByPath = true;\n\t\t\t\t bevelEnabled = false; // bevels not supported for path extrusion\n \n\t\t\t\t // SETUP TNB variables\n \n\t\t\t\t // TODO1 - have a .isClosed in spline?\n \n\t\t\t\t splineTube = extrudePath.computeFrenetFrames( steps, false );\n \n\t\t\t\t // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n \n\t\t\t\t binormal = new Vector3();\n\t\t\t\t normal = new Vector3();\n\t\t\t\t position2 = new Vector3();\n \n\t\t\t }\n \n\t\t\t // Safeguards if bevels are not enabled\n \n\t\t\t if ( ! bevelEnabled ) {\n \n\t\t\t\t bevelSegments = 0;\n\t\t\t\t bevelThickness = 0;\n\t\t\t\t bevelSize = 0;\n\t\t\t\t bevelOffset = 0;\n \n\t\t\t }\n \n\t\t\t // Variables initialization\n \n\t\t\t const shapePoints = shape.extractPoints( curveSegments );\n \n\t\t\t let vertices = shapePoints.shape;\n\t\t\t const holes = shapePoints.holes;\n \n\t\t\t const reverse = ! ShapeUtils.isClockWise( vertices );\n \n\t\t\t if ( reverse ) {\n \n\t\t\t\t vertices = vertices.reverse();\n \n\t\t\t\t // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n \n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n\t\t\t\t\t const ahole = holes[ h ];\n \n\t\t\t\t\t if ( ShapeUtils.isClockWise( ahole ) ) {\n \n\t\t\t\t\t\t holes[ h ] = ahole.reverse();\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n \n\t\t\t const faces = ShapeUtils.triangulateShape( vertices, holes );\n \n\t\t\t /* Vertices */\n \n\t\t\t const contour = vertices; // vertices has all points but contour has only points of circumference\n \n\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n\t\t\t\t const ahole = holes[ h ];\n \n\t\t\t\t vertices = vertices.concat( ahole );\n \n\t\t\t }\n \n \n\t\t\t function scalePt2( pt, vec, size ) {\n \n\t\t\t\t if ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n \n\t\t\t\t return vec.clone().multiplyScalar( size ).add( pt );\n \n\t\t\t }\n \n\t\t\t const vlen = vertices.length, flen = faces.length;\n \n \n\t\t\t // Find directions for point movement\n \n \n\t\t\t function getBevelVec( inPt, inPrev, inNext ) {\n \n\t\t\t\t // computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t //   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t // if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t //\n\t\t\t\t // inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t //  adjacent edges of inPt at a distance of 1 unit on the left side.\n \n\t\t\t\t let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n \n\t\t\t\t // good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t // http://geomalgorithms.com/a05-_intersect-1.html\n \n\t\t\t\t const v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t v_prev_y = inPt.y - inPrev.y;\n\t\t\t\t const v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t v_next_y = inNext.y - inPt.y;\n \n\t\t\t\t const v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n \n\t\t\t\t // check for collinear edges\n\t\t\t\t const collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n \n\t\t\t\t if ( Math.abs( collinear0 ) > Number.EPSILON ) {\n \n\t\t\t\t\t // not collinear\n \n\t\t\t\t\t // length of vectors for normalizing\n \n\t\t\t\t\t const v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\t const v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n \n\t\t\t\t\t // shift adjacent points by unit vectors to the left\n \n\t\t\t\t\t const ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\t const ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n \n\t\t\t\t\t const ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\t const ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n \n\t\t\t\t\t // scaling factor for v_prev to intersection point\n \n\t\t\t\t\t const sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t ( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n \n\t\t\t\t\t // vector from inPt to intersection point\n \n\t\t\t\t\t v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\t v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n \n\t\t\t\t\t // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t //  but prevent crazy spikes\n\t\t\t\t\t const v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\t if ( v_trans_lensq <= 2 ) {\n \n\t\t\t\t\t\t return new Vector2( v_trans_x, v_trans_y );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t shrink_by = Math.sqrt( v_trans_lensq / 2 );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // handle special case of collinear edges\n \n\t\t\t\t\t let direction_eq = false; // assumes: opposite\n \n\t\t\t\t\t if ( v_prev_x > Number.EPSILON ) {\n \n\t\t\t\t\t\t if ( v_next_x > Number.EPSILON ) {\n \n\t\t\t\t\t\t\t direction_eq = true;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t if ( v_prev_x < - Number.EPSILON ) {\n \n\t\t\t\t\t\t\t if ( v_next_x < - Number.EPSILON ) {\n \n\t\t\t\t\t\t\t\t direction_eq = true;\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n \n\t\t\t\t\t\t\t\t direction_eq = true;\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( direction_eq ) {\n \n\t\t\t\t\t\t // console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t v_trans_x = - v_prev_y;\n\t\t\t\t\t\t v_trans_y = v_prev_x;\n\t\t\t\t\t\t shrink_by = Math.sqrt( v_prev_lensq );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t // console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t v_trans_x = v_prev_x;\n\t\t\t\t\t\t v_trans_y = v_prev_y;\n\t\t\t\t\t\t shrink_by = Math.sqrt( v_prev_lensq / 2 );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n \n\t\t\t }\n \n \n\t\t\t const contourMovements = [];\n \n\t\t\t for ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n \n\t\t\t\t if ( j === il ) j = 0;\n\t\t\t\t if ( k === il ) k = 0;\n \n\t\t\t\t //  (j)---(i)---(k)\n\t\t\t\t // console.log('i,j,k', i, j , k)\n \n\t\t\t\t contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n \n\t\t\t }\n \n\t\t\t const holesMovements = [];\n\t\t\t let oneHoleMovements, verticesMovements = contourMovements.concat();\n \n\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n\t\t\t\t const ahole = holes[ h ];\n \n\t\t\t\t oneHoleMovements = [];\n \n\t\t\t\t for ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n \n\t\t\t\t\t if ( j === il ) j = 0;\n\t\t\t\t\t if ( k === il ) k = 0;\n \n\t\t\t\t\t //  (j)---(i)---(k)\n\t\t\t\t\t oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n \n\t\t\t\t }\n \n\t\t\t\t holesMovements.push( oneHoleMovements );\n\t\t\t\t verticesMovements = verticesMovements.concat( oneHoleMovements );\n \n\t\t\t }\n \n \n\t\t\t // Loop bevelSegments, 1 for the front, 1 for the back\n \n\t\t\t for ( let b = 0; b < bevelSegments; b ++ ) {\n \n\t\t\t\t //for ( b = bevelSegments; b > 0; b -- ) {\n \n\t\t\t\t const t = b / bevelSegments;\n\t\t\t\t const z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\t const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n \n\t\t\t\t // contract shape\n \n\t\t\t\t for ( let i = 0, il = contour.length; i < il; i ++ ) {\n \n\t\t\t\t\t const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n \n\t\t\t\t\t v( vert.x, vert.y, - z );\n \n\t\t\t\t }\n \n\t\t\t\t // expand holes\n \n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n\t\t\t\t\t const ahole = holes[ h ];\n\t\t\t\t\t oneHoleMovements = holesMovements[ h ];\n \n\t\t\t\t\t for ( let i = 0, il = ahole.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n \n\t\t\t\t\t\t v( vert.x, vert.y, - z );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t const bs = bevelSize + bevelOffset;\n \n\t\t\t // Back facing vertices\n \n\t\t\t for ( let i = 0; i < vlen; i ++ ) {\n \n\t\t\t\t const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n \n\t\t\t\t if ( ! extrudeByPath ) {\n \n\t\t\t\t\t v( vert.x, vert.y, 0 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n \n\t\t\t\t\t normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\t binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n \n\t\t\t\t\t position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n \n\t\t\t\t\t v( position2.x, position2.y, position2.z );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // Add stepped vertices...\n\t\t\t // Including front facing vertices\n \n\t\t\t for ( let s = 1; s <= steps; s ++ ) {\n \n\t\t\t\t for ( let i = 0; i < vlen; i ++ ) {\n \n\t\t\t\t\t const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n \n\t\t\t\t\t if ( ! extrudeByPath ) {\n \n\t\t\t\t\t\t v( vert.x, vert.y, depth / steps * s );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n \n\t\t\t\t\t\t normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\t binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n \n\t\t\t\t\t\t position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n \n\t\t\t\t\t\t v( position2.x, position2.y, position2.z );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n \n\t\t\t // Add bevel segments planes\n \n\t\t\t //for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\t for ( let b = bevelSegments - 1; b >= 0; b -- ) {\n \n\t\t\t\t const t = b / bevelSegments;\n\t\t\t\t const z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\t const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n \n\t\t\t\t // contract shape\n \n\t\t\t\t for ( let i = 0, il = contour.length; i < il; i ++ ) {\n \n\t\t\t\t\t const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\t v( vert.x, vert.y, depth + z );\n \n\t\t\t\t }\n \n\t\t\t\t // expand holes\n \n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n\t\t\t\t\t const ahole = holes[ h ];\n\t\t\t\t\t oneHoleMovements = holesMovements[ h ];\n \n\t\t\t\t\t for ( let i = 0, il = ahole.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n \n\t\t\t\t\t\t if ( ! extrudeByPath ) {\n \n\t\t\t\t\t\t\t v( vert.x, vert.y, depth + z );\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t /* Faces */\n \n\t\t\t // Top and bottom faces\n \n\t\t\t buildLidFaces();\n \n\t\t\t // Sides faces\n \n\t\t\t buildSideFaces();\n \n \n\t\t\t /////  Internal functions\n \n\t\t\t function buildLidFaces() {\n \n\t\t\t\t const start = verticesArray.length / 3;\n \n\t\t\t\t if ( bevelEnabled ) {\n \n\t\t\t\t\t let layer = 0; // steps + 1\n\t\t\t\t\t let offset = vlen * layer;\n \n\t\t\t\t\t // Bottom faces\n \n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\n \n\t\t\t\t\t\t const face = faces[ i ];\n\t\t\t\t\t\t f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t layer = steps + bevelSegments * 2;\n\t\t\t\t\t offset = vlen * layer;\n \n\t\t\t\t\t // Top faces\n \n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\n \n\t\t\t\t\t\t const face = faces[ i ];\n\t\t\t\t\t\t f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // Bottom faces\n \n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\n \n\t\t\t\t\t\t const face = faces[ i ];\n\t\t\t\t\t\t f3( face[ 2 ], face[ 1 ], face[ 0 ] );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t // Top faces\n \n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\n \n\t\t\t\t\t\t const face = faces[ i ];\n\t\t\t\t\t\t f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t scope.addGroup( start, verticesArray.length / 3 - start, 0 );\n \n\t\t\t }\n \n\t\t\t // Create faces for the z-sides of the shape\n \n\t\t\t function buildSideFaces() {\n \n\t\t\t\t const start = verticesArray.length / 3;\n\t\t\t\t let layeroffset = 0;\n\t\t\t\t sidewalls( contour, layeroffset );\n\t\t\t\t layeroffset += contour.length;\n \n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n \n\t\t\t\t\t const ahole = holes[ h ];\n\t\t\t\t\t sidewalls( ahole, layeroffset );\n \n\t\t\t\t\t //, true\n\t\t\t\t\t layeroffset += ahole.length;\n \n\t\t\t\t }\n \n \n\t\t\t\t scope.addGroup( start, verticesArray.length / 3 - start, 1 );\n \n \n\t\t\t }\n \n\t\t\t function sidewalls( contour, layeroffset ) {\n \n\t\t\t\t let i = contour.length;\n \n\t\t\t\t while ( -- i >= 0 ) {\n \n\t\t\t\t\t const j = i;\n\t\t\t\t\t let k = i - 1;\n\t\t\t\t\t if ( k < 0 ) k = contour.length - 1;\n \n\t\t\t\t\t //console.log('b', i,j, i-1, k,vertices.length);\n \n\t\t\t\t\t for ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n \n\t\t\t\t\t\t const slen1 = vlen * s;\n\t\t\t\t\t\t const slen2 = vlen * ( s + 1 );\n \n\t\t\t\t\t\t const a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t b = layeroffset + k + slen1,\n\t\t\t\t\t\t\t c = layeroffset + k + slen2,\n\t\t\t\t\t\t\t d = layeroffset + j + slen2;\n \n\t\t\t\t\t\t f4( a, b, c, d );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t function v( x, y, z ) {\n \n\t\t\t\t placeholder.push( x );\n\t\t\t\t placeholder.push( y );\n\t\t\t\t placeholder.push( z );\n \n\t\t\t }\n \n \n\t\t\t function f3( a, b, c ) {\n \n\t\t\t\t addVertex( a );\n\t\t\t\t addVertex( b );\n\t\t\t\t addVertex( c );\n \n\t\t\t\t const nextIndex = verticesArray.length / 3;\n\t\t\t\t const uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n \n\t\t\t\t addUV( uvs[ 0 ] );\n\t\t\t\t addUV( uvs[ 1 ] );\n\t\t\t\t addUV( uvs[ 2 ] );\n \n\t\t\t }\n \n\t\t\t function f4( a, b, c, d ) {\n \n\t\t\t\t addVertex( a );\n\t\t\t\t addVertex( b );\n\t\t\t\t addVertex( d );\n \n\t\t\t\t addVertex( b );\n\t\t\t\t addVertex( c );\n\t\t\t\t addVertex( d );\n \n \n\t\t\t\t const nextIndex = verticesArray.length / 3;\n\t\t\t\t const uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n \n\t\t\t\t addUV( uvs[ 0 ] );\n\t\t\t\t addUV( uvs[ 1 ] );\n\t\t\t\t addUV( uvs[ 3 ] );\n \n\t\t\t\t addUV( uvs[ 1 ] );\n\t\t\t\t addUV( uvs[ 2 ] );\n\t\t\t\t addUV( uvs[ 3 ] );\n \n\t\t\t }\n \n\t\t\t function addVertex( index ) {\n \n\t\t\t\t verticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\t verticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\t verticesArray.push( placeholder[ index * 3 + 2 ] );\n \n\t\t\t }\n \n \n\t\t\t function addUV( vector2 ) {\n \n\t\t\t\t uvArray.push( vector2.x );\n\t\t\t\t uvArray.push( vector2.y );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t const shapes = this.parameters.shapes;\n\t\t const options = this.parameters.options;\n \n\t\t return toJSON$1( shapes, options, data );\n \n\t }\n \n }\n \n const WorldUVGenerator = {\n \n\t generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n \n\t\t const a_x = vertices[ indexA * 3 ];\n\t\t const a_y = vertices[ indexA * 3 + 1 ];\n\t\t const b_x = vertices[ indexB * 3 ];\n\t\t const b_y = vertices[ indexB * 3 + 1 ];\n\t\t const c_x = vertices[ indexC * 3 ];\n\t\t const c_y = vertices[ indexC * 3 + 1 ];\n \n\t\t return [\n\t\t\t new Vector2( a_x, a_y ),\n\t\t\t new Vector2( b_x, b_y ),\n\t\t\t new Vector2( c_x, c_y )\n\t\t ];\n \n\t },\n \n\t generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n \n\t\t const a_x = vertices[ indexA * 3 ];\n\t\t const a_y = vertices[ indexA * 3 + 1 ];\n\t\t const a_z = vertices[ indexA * 3 + 2 ];\n\t\t const b_x = vertices[ indexB * 3 ];\n\t\t const b_y = vertices[ indexB * 3 + 1 ];\n\t\t const b_z = vertices[ indexB * 3 + 2 ];\n\t\t const c_x = vertices[ indexC * 3 ];\n\t\t const c_y = vertices[ indexC * 3 + 1 ];\n\t\t const c_z = vertices[ indexC * 3 + 2 ];\n\t\t const d_x = vertices[ indexD * 3 ];\n\t\t const d_y = vertices[ indexD * 3 + 1 ];\n\t\t const d_z = vertices[ indexD * 3 + 2 ];\n \n\t\t if ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n \n\t\t\t return [\n\t\t\t\t new Vector2( a_x, 1 - a_z ),\n\t\t\t\t new Vector2( b_x, 1 - b_z ),\n\t\t\t\t new Vector2( c_x, 1 - c_z ),\n\t\t\t\t new Vector2( d_x, 1 - d_z )\n\t\t\t ];\n \n\t\t } else {\n \n\t\t\t return [\n\t\t\t\t new Vector2( a_y, 1 - a_z ),\n\t\t\t\t new Vector2( b_y, 1 - b_z ),\n\t\t\t\t new Vector2( c_y, 1 - c_z ),\n\t\t\t\t new Vector2( d_y, 1 - d_z )\n\t\t\t ];\n \n\t\t }\n \n\t }\n \n };\n \n function toJSON$1( shapes, options, data ) {\n \n\t data.shapes = [];\n \n\t if ( Array.isArray( shapes ) ) {\n \n\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n\t\t\t const shape = shapes[ i ];\n \n\t\t\t data.shapes.push( shape.uuid );\n \n\t\t }\n \n\t } else {\n \n\t\t data.shapes.push( shapes.uuid );\n \n\t }\n \n\t if ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n \n\t return data;\n \n }\n \n class IcosahedronGeometry extends PolyhedronGeometry {\n \n\t constructor( radius = 1, detail = 0 ) {\n \n\t\t const t = ( 1 + Math.sqrt( 5 ) ) / 2;\n \n\t\t const vertices = [\n\t\t\t - 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t ];\n \n\t\t const indices = [\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t ];\n \n\t\t super( vertices, indices, radius, detail );\n \n\t\t this.type = 'IcosahedronGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t detail: detail\n\t\t };\n \n\t }\n \n }\n \n class LatheGeometry extends BufferGeometry {\n \n\t constructor( points, segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n \n\t\t super();\n \n\t\t this.type = 'LatheGeometry';\n \n\t\t this.parameters = {\n\t\t\t points: points,\n\t\t\t segments: segments,\n\t\t\t phiStart: phiStart,\n\t\t\t phiLength: phiLength\n\t\t };\n \n\t\t segments = Math.floor( segments );\n \n\t\t // clamp phiLength so it's in range of [ 0, 2PI ]\n \n\t\t phiLength = clamp( phiLength, 0, Math.PI * 2 );\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const uvs = [];\n \n\t\t // helper variables\n \n\t\t const inverseSegments = 1.0 / segments;\n\t\t const vertex = new Vector3();\n\t\t const uv = new Vector2();\n \n\t\t // generate vertices and uvs\n \n\t\t for ( let i = 0; i <= segments; i ++ ) {\n \n\t\t\t const phi = phiStart + i * inverseSegments * phiLength;\n \n\t\t\t const sin = Math.sin( phi );\n\t\t\t const cos = Math.cos( phi );\n \n\t\t\t for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n \n\t\t\t\t // vertex\n \n\t\t\t\t vertex.x = points[ j ].x * sin;\n\t\t\t\t vertex.y = points[ j ].y;\n\t\t\t\t vertex.z = points[ j ].x * cos;\n \n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t // uv\n \n\t\t\t\t uv.x = i / segments;\n\t\t\t\t uv.y = j / ( points.length - 1 );\n \n\t\t\t\t uvs.push( uv.x, uv.y );\n \n \n\t\t\t }\n \n\t\t }\n \n\t\t // indices\n \n\t\t for ( let i = 0; i < segments; i ++ ) {\n \n\t\t\t for ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n \n\t\t\t\t const base = j + i * points.length;\n \n\t\t\t\t const a = base;\n\t\t\t\t const b = base + points.length;\n\t\t\t\t const c = base + points.length + 1;\n\t\t\t\t const d = base + 1;\n \n\t\t\t\t // faces\n \n\t\t\t\t indices.push( a, b, d );\n\t\t\t\t indices.push( b, c, d );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t\t // generate normals\n \n\t\t this.computeVertexNormals();\n \n\t\t // if the geometry is closed, we need to average the normals along the seam.\n\t\t // because the corresponding vertices are identical (but still have different UVs).\n \n\t\t if ( phiLength === Math.PI * 2 ) {\n \n\t\t\t const normals = this.attributes.normal.array;\n\t\t\t const n1 = new Vector3();\n\t\t\t const n2 = new Vector3();\n\t\t\t const n = new Vector3();\n \n\t\t\t // this is the buffer offset for the last line of vertices\n \n\t\t\t const base = segments * points.length * 3;\n \n\t\t\t for ( let i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n \n\t\t\t\t // select the normal of the vertex in the first line\n \n\t\t\t\t n1.x = normals[ j + 0 ];\n\t\t\t\t n1.y = normals[ j + 1 ];\n\t\t\t\t n1.z = normals[ j + 2 ];\n \n\t\t\t\t // select the normal of the vertex in the last line\n \n\t\t\t\t n2.x = normals[ base + j + 0 ];\n\t\t\t\t n2.y = normals[ base + j + 1 ];\n\t\t\t\t n2.z = normals[ base + j + 2 ];\n \n\t\t\t\t // average normals\n \n\t\t\t\t n.addVectors( n1, n2 ).normalize();\n \n\t\t\t\t // assign the new values to both normals\n \n\t\t\t\t normals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\t normals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\t normals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n }\n \n class OctahedronGeometry extends PolyhedronGeometry {\n \n\t constructor( radius = 1, detail = 0 ) {\n \n\t\t const vertices = [\n\t\t\t 1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t 0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t ];\n \n\t\t const indices = [\n\t\t\t 0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t 0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t 1, 3, 4,\t1, 4, 2\n\t\t ];\n \n\t\t super( vertices, indices, radius, detail );\n \n\t\t this.type = 'OctahedronGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t detail: detail\n\t\t };\n \n\t }\n \n }\n \n /**\n  * Parametric Surfaces Geometry\n  * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n  */\n \n class ParametricGeometry extends BufferGeometry {\n \n\t constructor( func, slices, stacks ) {\n \n\t\t super();\n \n\t\t this.type = 'ParametricGeometry';\n \n\t\t this.parameters = {\n\t\t\t func: func,\n\t\t\t slices: slices,\n\t\t\t stacks: stacks\n\t\t };\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t const EPS = 0.00001;\n \n\t\t const normal = new Vector3();\n \n\t\t const p0 = new Vector3(), p1 = new Vector3();\n\t\t const pu = new Vector3(), pv = new Vector3();\n \n\t\t if ( func.length < 3 ) {\n \n\t\t\t console.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n \n\t\t }\n \n\t\t // generate vertices, normals and uvs\n \n\t\t const sliceCount = slices + 1;\n \n\t\t for ( let i = 0; i <= stacks; i ++ ) {\n \n\t\t\t const v = i / stacks;\n \n\t\t\t for ( let j = 0; j <= slices; j ++ ) {\n \n\t\t\t\t const u = j / slices;\n \n\t\t\t\t // vertex\n \n\t\t\t\t func( u, v, p0 );\n\t\t\t\t vertices.push( p0.x, p0.y, p0.z );\n \n\t\t\t\t // normal\n \n\t\t\t\t // approximate tangent vectors via finite differences\n \n\t\t\t\t if ( u - EPS >= 0 ) {\n \n\t\t\t\t\t func( u - EPS, v, p1 );\n\t\t\t\t\t pu.subVectors( p0, p1 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t func( u + EPS, v, p1 );\n\t\t\t\t\t pu.subVectors( p1, p0 );\n \n\t\t\t\t }\n \n\t\t\t\t if ( v - EPS >= 0 ) {\n \n\t\t\t\t\t func( u, v - EPS, p1 );\n\t\t\t\t\t pv.subVectors( p0, p1 );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t func( u, v + EPS, p1 );\n\t\t\t\t\t pv.subVectors( p1, p0 );\n \n\t\t\t\t }\n \n\t\t\t\t // cross product of tangent vectors returns surface normal\n \n\t\t\t\t normal.crossVectors( pu, pv ).normalize();\n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\n \n\t\t\t\t // uv\n \n\t\t\t\t uvs.push( u, v );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // generate indices\n \n\t\t for ( let i = 0; i < stacks; i ++ ) {\n \n\t\t\t for ( let j = 0; j < slices; j ++ ) {\n \n\t\t\t\t const a = i * sliceCount + j;\n\t\t\t\t const b = i * sliceCount + j + 1;\n\t\t\t\t const c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\t const d = ( i + 1 ) * sliceCount + j;\n \n\t\t\t\t // faces one and two\n \n\t\t\t\t indices.push( a, b, d );\n\t\t\t\t indices.push( b, c, d );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t }\n \n }\n \n class RingGeometry extends BufferGeometry {\n \n\t constructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n \n\t\t super();\n \n\t\t this.type = 'RingGeometry';\n \n\t\t this.parameters = {\n\t\t\t innerRadius: innerRadius,\n\t\t\t outerRadius: outerRadius,\n\t\t\t thetaSegments: thetaSegments,\n\t\t\t phiSegments: phiSegments,\n\t\t\t thetaStart: thetaStart,\n\t\t\t thetaLength: thetaLength\n\t\t };\n \n\t\t thetaSegments = Math.max( 3, thetaSegments );\n\t\t phiSegments = Math.max( 1, phiSegments );\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // some helper variables\n \n\t\t let radius = innerRadius;\n\t\t const radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\t const vertex = new Vector3();\n\t\t const uv = new Vector2();\n \n\t\t // generate vertices, normals and uvs\n \n\t\t for ( let j = 0; j <= phiSegments; j ++ ) {\n \n\t\t\t for ( let i = 0; i <= thetaSegments; i ++ ) {\n \n\t\t\t\t // values are generate from the inside of the ring to the outside\n \n\t\t\t\t const segment = thetaStart + i / thetaSegments * thetaLength;\n \n\t\t\t\t // vertex\n \n\t\t\t\t vertex.x = radius * Math.cos( segment );\n\t\t\t\t vertex.y = radius * Math.sin( segment );\n \n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t // normal\n \n\t\t\t\t normals.push( 0, 0, 1 );\n \n\t\t\t\t // uv\n \n\t\t\t\t uv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\t uv.y = ( vertex.y / outerRadius + 1 ) / 2;\n \n\t\t\t\t uvs.push( uv.x, uv.y );\n \n\t\t\t }\n \n\t\t\t // increase the radius for next row of vertices\n \n\t\t\t radius += radiusStep;\n \n\t\t }\n \n\t\t // indices\n \n\t\t for ( let j = 0; j < phiSegments; j ++ ) {\n \n\t\t\t const thetaSegmentLevel = j * ( thetaSegments + 1 );\n \n\t\t\t for ( let i = 0; i < thetaSegments; i ++ ) {\n \n\t\t\t\t const segment = i + thetaSegmentLevel;\n \n\t\t\t\t const a = segment;\n\t\t\t\t const b = segment + thetaSegments + 1;\n\t\t\t\t const c = segment + thetaSegments + 2;\n\t\t\t\t const d = segment + 1;\n \n\t\t\t\t // faces\n \n\t\t\t\t indices.push( a, b, d );\n\t\t\t\t indices.push( b, c, d );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t }\n \n }\n \n class ShapeGeometry extends BufferGeometry {\n \n\t constructor( shapes, curveSegments = 12 ) {\n \n\t\t super();\n\t\t this.type = 'ShapeGeometry';\n \n\t\t this.parameters = {\n\t\t\t shapes: shapes,\n\t\t\t curveSegments: curveSegments\n\t\t };\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // helper variables\n \n\t\t let groupStart = 0;\n\t\t let groupCount = 0;\n \n\t\t // allow single and array values for \"shapes\" parameter\n \n\t\t if ( Array.isArray( shapes ) === false ) {\n \n\t\t\t addShape( shapes );\n \n\t\t } else {\n \n\t\t\t for ( let i = 0; i < shapes.length; i ++ ) {\n \n\t\t\t\t addShape( shapes[ i ] );\n \n\t\t\t\t this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n \n\t\t\t\t groupStart += groupCount;\n\t\t\t\t groupCount = 0;\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n \n\t\t // helper functions\n \n\t\t function addShape( shape ) {\n \n\t\t\t const indexOffset = vertices.length / 3;\n\t\t\t const points = shape.extractPoints( curveSegments );\n \n\t\t\t let shapeVertices = points.shape;\n\t\t\t const shapeHoles = points.holes;\n \n\t\t\t // check direction of vertices\n \n\t\t\t if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n \n\t\t\t\t shapeVertices = shapeVertices.reverse();\n \n\t\t\t }\n \n\t\t\t for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n \n\t\t\t\t const shapeHole = shapeHoles[ i ];\n \n\t\t\t\t if ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n \n\t\t\t\t\t shapeHoles[ i ] = shapeHole.reverse();\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t const faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n \n\t\t\t // join vertices of inner and outer paths to a single array\n \n\t\t\t for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n \n\t\t\t\t const shapeHole = shapeHoles[ i ];\n\t\t\t\t shapeVertices = shapeVertices.concat( shapeHole );\n \n\t\t\t }\n \n\t\t\t // vertices, normals, uvs\n \n\t\t\t for ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n \n\t\t\t\t const vertex = shapeVertices[ i ];\n \n\t\t\t\t vertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\t normals.push( 0, 0, 1 );\n\t\t\t\t uvs.push( vertex.x, vertex.y ); // world uvs\n \n\t\t\t }\n \n\t\t\t // incides\n \n\t\t\t for ( let i = 0, l = faces.length; i < l; i ++ ) {\n \n\t\t\t\t const face = faces[ i ];\n \n\t\t\t\t const a = face[ 0 ] + indexOffset;\n\t\t\t\t const b = face[ 1 ] + indexOffset;\n\t\t\t\t const c = face[ 2 ] + indexOffset;\n \n\t\t\t\t indices.push( a, b, c );\n\t\t\t\t groupCount += 3;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t const shapes = this.parameters.shapes;\n \n\t\t return toJSON( shapes, data );\n \n\t }\n \n }\n \n function toJSON( shapes, data ) {\n \n\t data.shapes = [];\n \n\t if ( Array.isArray( shapes ) ) {\n \n\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\n \n\t\t\t const shape = shapes[ i ];\n \n\t\t\t data.shapes.push( shape.uuid );\n \n\t\t }\n \n\t } else {\n \n\t\t data.shapes.push( shapes.uuid );\n \n\t }\n \n\t return data;\n \n }\n \n class SphereGeometry extends BufferGeometry {\n \n\t constructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n \n\t\t super();\n\t\t this.type = 'SphereGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t widthSegments: widthSegments,\n\t\t\t heightSegments: heightSegments,\n\t\t\t phiStart: phiStart,\n\t\t\t phiLength: phiLength,\n\t\t\t thetaStart: thetaStart,\n\t\t\t thetaLength: thetaLength\n\t\t };\n \n\t\t widthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\t heightSegments = Math.max( 2, Math.floor( heightSegments ) );\n \n\t\t const thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n \n\t\t let index = 0;\n\t\t const grid = [];\n \n\t\t const vertex = new Vector3();\n\t\t const normal = new Vector3();\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // generate vertices, normals and uvs\n \n\t\t for ( let iy = 0; iy <= heightSegments; iy ++ ) {\n \n\t\t\t const verticesRow = [];\n \n\t\t\t const v = iy / heightSegments;\n \n\t\t\t // special case for the poles\n \n\t\t\t let uOffset = 0;\n \n\t\t\t if ( iy == 0 && thetaStart == 0 ) {\n \n\t\t\t\t uOffset = 0.5 / widthSegments;\n \n\t\t\t } else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n \n\t\t\t\t uOffset = - 0.5 / widthSegments;\n \n\t\t\t }\n \n\t\t\t for ( let ix = 0; ix <= widthSegments; ix ++ ) {\n \n\t\t\t\t const u = ix / widthSegments;\n \n\t\t\t\t // vertex\n \n\t\t\t\t vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\t vertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\t vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n \n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t // normal\n \n\t\t\t\t normal.copy( vertex ).normalize();\n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\n \n\t\t\t\t // uv\n \n\t\t\t\t uvs.push( u + uOffset, 1 - v );\n \n\t\t\t\t verticesRow.push( index ++ );\n \n\t\t\t }\n \n\t\t\t grid.push( verticesRow );\n \n\t\t }\n \n\t\t // indices\n \n\t\t for ( let iy = 0; iy < heightSegments; iy ++ ) {\n \n\t\t\t for ( let ix = 0; ix < widthSegments; ix ++ ) {\n \n\t\t\t\t const a = grid[ iy ][ ix + 1 ];\n\t\t\t\t const b = grid[ iy ][ ix ];\n\t\t\t\t const c = grid[ iy + 1 ][ ix ];\n\t\t\t\t const d = grid[ iy + 1 ][ ix + 1 ];\n \n\t\t\t\t if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\t if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t }\n \n }\n \n class TetrahedronGeometry extends PolyhedronGeometry {\n \n\t constructor( radius = 1, detail = 0 ) {\n \n\t\t const vertices = [\n\t\t\t 1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t ];\n \n\t\t const indices = [\n\t\t\t 2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t ];\n \n\t\t super( vertices, indices, radius, detail );\n \n\t\t this.type = 'TetrahedronGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t detail: detail\n\t\t };\n \n\t }\n \n }\n \n /**\n  * Text = 3D Text\n  *\n  * parameters = {\n  *  font: <THREE.Font>, // font\n  *\n  *  size: <float>, // size of the text\n  *  height: <float>, // thickness to extrude text\n  *  curveSegments: <int>, // number of points on the curves\n  *\n  *  bevelEnabled: <bool>, // turn on bevel\n  *  bevelThickness: <float>, // how deep into text bevel goes\n  *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n  *  bevelOffset: <float> // how far from text outline does bevel start\n  * }\n  */\n \n class TextGeometry extends ExtrudeGeometry {\n \n\t constructor( text, parameters = {} ) {\n \n\t\t const font = parameters.font;\n \n\t\t if ( ! ( font && font.isFont ) ) {\n \n\t\t\t console.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\t return new BufferGeometry();\n \n\t\t }\n \n\t\t const shapes = font.generateShapes( text, parameters.size );\n \n\t\t // translate parameters to ExtrudeGeometry API\n \n\t\t parameters.depth = parameters.height !== undefined ? parameters.height : 50;\n \n\t\t // defaults\n \n\t\t if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\t if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\t if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n \n\t\t super( shapes, parameters );\n \n\t\t this.type = 'TextGeometry';\n \n\t }\n \n }\n \n class TorusGeometry extends BufferGeometry {\n \n\t constructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n \n\t\t super();\n\t\t this.type = 'TorusGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t tube: tube,\n\t\t\t radialSegments: radialSegments,\n\t\t\t tubularSegments: tubularSegments,\n\t\t\t arc: arc\n\t\t };\n \n\t\t radialSegments = Math.floor( radialSegments );\n\t\t tubularSegments = Math.floor( tubularSegments );\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // helper variables\n \n\t\t const center = new Vector3();\n\t\t const vertex = new Vector3();\n\t\t const normal = new Vector3();\n \n\t\t // generate vertices, normals and uvs\n \n\t\t for ( let j = 0; j <= radialSegments; j ++ ) {\n \n\t\t\t for ( let i = 0; i <= tubularSegments; i ++ ) {\n \n\t\t\t\t const u = i / tubularSegments * arc;\n\t\t\t\t const v = j / radialSegments * Math.PI * 2;\n \n\t\t\t\t // vertex\n \n\t\t\t\t vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\t vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\t vertex.z = tube * Math.sin( v );\n \n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t // normal\n \n\t\t\t\t center.x = radius * Math.cos( u );\n\t\t\t\t center.y = radius * Math.sin( u );\n\t\t\t\t normal.subVectors( vertex, center ).normalize();\n \n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\n \n\t\t\t\t // uv\n \n\t\t\t\t uvs.push( i / tubularSegments );\n\t\t\t\t uvs.push( j / radialSegments );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // generate indices\n \n\t\t for ( let j = 1; j <= radialSegments; j ++ ) {\n \n\t\t\t for ( let i = 1; i <= tubularSegments; i ++ ) {\n \n\t\t\t\t // indices\n \n\t\t\t\t const a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\t const b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\t const c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\t const d = ( tubularSegments + 1 ) * j + i;\n \n\t\t\t\t // faces\n \n\t\t\t\t indices.push( a, b, d );\n\t\t\t\t indices.push( b, c, d );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t }\n \n }\n \n class TorusKnotGeometry extends BufferGeometry {\n \n\t constructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n \n\t\t super();\n\t\t this.type = 'TorusKnotGeometry';\n \n\t\t this.parameters = {\n\t\t\t radius: radius,\n\t\t\t tube: tube,\n\t\t\t tubularSegments: tubularSegments,\n\t\t\t radialSegments: radialSegments,\n\t\t\t p: p,\n\t\t\t q: q\n\t\t };\n \n\t\t tubularSegments = Math.floor( tubularSegments );\n\t\t radialSegments = Math.floor( radialSegments );\n \n\t\t // buffers\n \n\t\t const indices = [];\n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n \n\t\t // helper variables\n \n\t\t const vertex = new Vector3();\n\t\t const normal = new Vector3();\n \n\t\t const P1 = new Vector3();\n\t\t const P2 = new Vector3();\n \n\t\t const B = new Vector3();\n\t\t const T = new Vector3();\n\t\t const N = new Vector3();\n \n\t\t // generate vertices, normals and uvs\n \n\t\t for ( let i = 0; i <= tubularSegments; ++ i ) {\n \n\t\t\t // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n \n\t\t\t const u = i / tubularSegments * p * Math.PI * 2;\n \n\t\t\t // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n \n\t\t\t calculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\t calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n \n\t\t\t // calculate orthonormal basis\n \n\t\t\t T.subVectors( P2, P1 );\n\t\t\t N.addVectors( P2, P1 );\n\t\t\t B.crossVectors( T, N );\n\t\t\t N.crossVectors( B, T );\n \n\t\t\t // normalize B, N. T can be ignored, we don't use it\n \n\t\t\t B.normalize();\n\t\t\t N.normalize();\n \n\t\t\t for ( let j = 0; j <= radialSegments; ++ j ) {\n \n\t\t\t\t // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n \n\t\t\t\t const v = j / radialSegments * Math.PI * 2;\n\t\t\t\t const cx = - tube * Math.cos( v );\n\t\t\t\t const cy = tube * Math.sin( v );\n \n\t\t\t\t // now calculate the final vertex position.\n\t\t\t\t // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n \n\t\t\t\t vertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\t vertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\t vertex.z = P1.z + ( cx * N.z + cy * B.z );\n \n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n \n\t\t\t\t normal.subVectors( vertex, P1 ).normalize();\n \n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\n \n\t\t\t\t // uv\n \n\t\t\t\t uvs.push( i / tubularSegments );\n\t\t\t\t uvs.push( j / radialSegments );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // generate indices\n \n\t\t for ( let j = 1; j <= tubularSegments; j ++ ) {\n \n\t\t\t for ( let i = 1; i <= radialSegments; i ++ ) {\n \n\t\t\t\t // indices\n \n\t\t\t\t const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t const b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t const c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t const d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n \n\t\t\t\t // faces\n \n\t\t\t\t indices.push( a, b, d );\n\t\t\t\t indices.push( b, c, d );\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t\t // this function calculates the current position on the torus curve\n \n\t\t function calculatePositionOnCurve( u, p, q, radius, position ) {\n \n\t\t\t const cu = Math.cos( u );\n\t\t\t const su = Math.sin( u );\n\t\t\t const quOverP = q / p * u;\n\t\t\t const cs = Math.cos( quOverP );\n \n\t\t\t position.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\t position.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\t position.z = radius * Math.sin( quOverP ) * 0.5;\n \n\t\t }\n \n\t }\n \n }\n \n class TubeGeometry extends BufferGeometry {\n \n\t constructor( path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n \n\t\t super();\n\t\t this.type = 'TubeGeometry';\n \n\t\t this.parameters = {\n\t\t\t path: path,\n\t\t\t tubularSegments: tubularSegments,\n\t\t\t radius: radius,\n\t\t\t radialSegments: radialSegments,\n\t\t\t closed: closed\n\t\t };\n \n\t\t const frames = path.computeFrenetFrames( tubularSegments, closed );\n \n\t\t // expose internals\n \n\t\t this.tangents = frames.tangents;\n\t\t this.normals = frames.normals;\n\t\t this.binormals = frames.binormals;\n \n\t\t // helper variables\n \n\t\t const vertex = new Vector3();\n\t\t const normal = new Vector3();\n\t\t const uv = new Vector2();\n\t\t let P = new Vector3();\n \n\t\t // buffer\n \n\t\t const vertices = [];\n\t\t const normals = [];\n\t\t const uvs = [];\n\t\t const indices = [];\n \n\t\t // create buffer data\n \n\t\t generateBufferData();\n \n\t\t // build geometry\n \n\t\t this.setIndex( indices );\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n \n\t\t // functions\n \n\t\t function generateBufferData() {\n \n\t\t\t for ( let i = 0; i < tubularSegments; i ++ ) {\n \n\t\t\t\t generateSegment( i );\n \n\t\t\t }\n \n\t\t\t // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t // at the regular position on the given path\n\t\t\t //\n\t\t\t // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n \n\t\t\t generateSegment( ( closed === false ) ? tubularSegments : 0 );\n \n\t\t\t // uvs are generated in a separate function.\n\t\t\t // this makes it easy compute correct values for closed geometries\n \n\t\t\t generateUVs();\n \n\t\t\t // finally create faces\n \n\t\t\t generateIndices();\n \n\t\t }\n \n\t\t function generateSegment( i ) {\n \n\t\t\t // we use getPointAt to sample evenly distributed points from the given path\n \n\t\t\t P = path.getPointAt( i / tubularSegments, P );\n \n\t\t\t // retrieve corresponding normal and binormal\n \n\t\t\t const N = frames.normals[ i ];\n\t\t\t const B = frames.binormals[ i ];\n \n\t\t\t // generate normals and vertices for the current segment\n \n\t\t\t for ( let j = 0; j <= radialSegments; j ++ ) {\n \n\t\t\t\t const v = j / radialSegments * Math.PI * 2;\n \n\t\t\t\t const sin = Math.sin( v );\n\t\t\t\t const cos = - Math.cos( v );\n \n\t\t\t\t // normal\n \n\t\t\t\t normal.x = ( cos * N.x + sin * B.x );\n\t\t\t\t normal.y = ( cos * N.y + sin * B.y );\n\t\t\t\t normal.z = ( cos * N.z + sin * B.z );\n\t\t\t\t normal.normalize();\n \n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\n \n\t\t\t\t // vertex\n \n\t\t\t\t vertex.x = P.x + radius * normal.x;\n\t\t\t\t vertex.y = P.y + radius * normal.y;\n\t\t\t\t vertex.z = P.z + radius * normal.z;\n \n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t }\n \n\t\t }\n \n\t\t function generateIndices() {\n \n\t\t\t for ( let j = 1; j <= tubularSegments; j ++ ) {\n \n\t\t\t\t for ( let i = 1; i <= radialSegments; i ++ ) {\n \n\t\t\t\t\t const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\t const b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\t const c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\t const d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n \n\t\t\t\t\t // faces\n \n\t\t\t\t\t indices.push( a, b, d );\n\t\t\t\t\t indices.push( b, c, d );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t function generateUVs() {\n \n\t\t\t for ( let i = 0; i <= tubularSegments; i ++ ) {\n \n\t\t\t\t for ( let j = 0; j <= radialSegments; j ++ ) {\n \n\t\t\t\t\t uv.x = i / tubularSegments;\n\t\t\t\t\t uv.y = j / radialSegments;\n \n\t\t\t\t\t uvs.push( uv.x, uv.y );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.path = this.parameters.path.toJSON();\n \n\t\t return data;\n \n\t }\n \n }\n \n class WireframeGeometry extends BufferGeometry {\n \n\t constructor( geometry ) {\n \n\t\t super();\n\t\t this.type = 'WireframeGeometry';\n \n\t\t if ( geometry.isGeometry === true ) {\n \n\t\t\t console.error( 'THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t // buffer\n \n\t\t const vertices = [];\n \n\t\t // helper variables\n \n\t\t const edge = [ 0, 0 ], edges = {};\n \n\t\t const vertex = new Vector3();\n \n\t\t if ( geometry.index !== null ) {\n \n\t\t\t // indexed BufferGeometry\n \n\t\t\t const position = geometry.attributes.position;\n\t\t\t const indices = geometry.index;\n\t\t\t let groups = geometry.groups;\n \n\t\t\t if ( groups.length === 0 ) {\n \n\t\t\t\t groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n \n\t\t\t }\n \n\t\t\t // create a data structure that contains all eges without duplicates\n \n\t\t\t for ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n \n\t\t\t\t const group = groups[ o ];\n \n\t\t\t\t const start = group.start;\n\t\t\t\t const count = group.count;\n \n\t\t\t\t for ( let i = start, l = ( start + count ); i < l; i += 3 ) {\n \n\t\t\t\t\t for ( let j = 0; j < 3; j ++ ) {\n \n\t\t\t\t\t\t const edge1 = indices.getX( i + j );\n\t\t\t\t\t\t const edge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t edge[ 1 ] = Math.max( edge1, edge2 );\n \n\t\t\t\t\t\t const key = edge[ 0 ] + ',' + edge[ 1 ];\n \n\t\t\t\t\t\t if ( edges[ key ] === undefined ) {\n \n\t\t\t\t\t\t\t edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // generate vertices\n \n\t\t\t for ( const key in edges ) {\n \n\t\t\t\t const e = edges[ key ];\n \n\t\t\t\t vertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t vertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t // non-indexed BufferGeometry\n \n\t\t\t const position = geometry.attributes.position;\n \n\t\t\t for ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n \n\t\t\t\t for ( let j = 0; j < 3; j ++ ) {\n \n\t\t\t\t\t // three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n \n\t\t\t\t\t const index1 = 3 * i + j;\n\t\t\t\t\t vertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t\t const index2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t vertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t // build geometry\n \n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n \n\t }\n \n }\n \n var Geometries = /*#__PURE__*/Object.freeze({\n\t __proto__: null,\n\t BoxGeometry: BoxGeometry,\n\t BoxBufferGeometry: BoxGeometry,\n\t CircleGeometry: CircleGeometry,\n\t CircleBufferGeometry: CircleGeometry,\n\t ConeGeometry: ConeGeometry,\n\t ConeBufferGeometry: ConeGeometry,\n\t CylinderGeometry: CylinderGeometry,\n\t CylinderBufferGeometry: CylinderGeometry,\n\t DodecahedronGeometry: DodecahedronGeometry,\n\t DodecahedronBufferGeometry: DodecahedronGeometry,\n\t EdgesGeometry: EdgesGeometry,\n\t ExtrudeGeometry: ExtrudeGeometry,\n\t ExtrudeBufferGeometry: ExtrudeGeometry,\n\t IcosahedronGeometry: IcosahedronGeometry,\n\t IcosahedronBufferGeometry: IcosahedronGeometry,\n\t LatheGeometry: LatheGeometry,\n\t LatheBufferGeometry: LatheGeometry,\n\t OctahedronGeometry: OctahedronGeometry,\n\t OctahedronBufferGeometry: OctahedronGeometry,\n\t ParametricGeometry: ParametricGeometry,\n\t ParametricBufferGeometry: ParametricGeometry,\n\t PlaneGeometry: PlaneGeometry,\n\t PlaneBufferGeometry: PlaneGeometry,\n\t PolyhedronGeometry: PolyhedronGeometry,\n\t PolyhedronBufferGeometry: PolyhedronGeometry,\n\t RingGeometry: RingGeometry,\n\t RingBufferGeometry: RingGeometry,\n\t ShapeGeometry: ShapeGeometry,\n\t ShapeBufferGeometry: ShapeGeometry,\n\t SphereGeometry: SphereGeometry,\n\t SphereBufferGeometry: SphereGeometry,\n\t TetrahedronGeometry: TetrahedronGeometry,\n\t TetrahedronBufferGeometry: TetrahedronGeometry,\n\t TextGeometry: TextGeometry,\n\t TextBufferGeometry: TextGeometry,\n\t TorusGeometry: TorusGeometry,\n\t TorusBufferGeometry: TorusGeometry,\n\t TorusKnotGeometry: TorusKnotGeometry,\n\t TorusKnotBufferGeometry: TorusKnotGeometry,\n\t TubeGeometry: TubeGeometry,\n\t TubeBufferGeometry: TubeGeometry,\n\t WireframeGeometry: WireframeGeometry\n });\n \n /**\n  * parameters = {\n  *  color: <THREE.Color>\n  * }\n  */\n \n class ShadowMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'ShadowMaterial';\n \n\t\t this.color = new Color( 0x000000 );\n\t\t this.transparent = true;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n \n\t\t return this;\n \n\t }\n \n }\n \n ShadowMaterial.prototype.isShadowMaterial = true;\n \n class RawShaderMaterial extends ShaderMaterial {\n \n\t constructor( parameters ) {\n \n\t\t super( parameters );\n \n\t\t this.type = 'RawShaderMaterial';\n \n\t }\n \n }\n \n RawShaderMaterial.prototype.isRawShaderMaterial = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  roughness: <float>,\n  *  metalness: <float>,\n  *  opacity: <float>,\n  *\n  *  map: new THREE.Texture( <Image> ),\n  *\n  *  lightMap: new THREE.Texture( <Image> ),\n  *  lightMapIntensity: <float>\n  *\n  *  aoMap: new THREE.Texture( <Image> ),\n  *  aoMapIntensity: <float>\n  *\n  *  emissive: <hex>,\n  *  emissiveIntensity: <float>\n  *  emissiveMap: new THREE.Texture( <Image> ),\n  *\n  *  bumpMap: new THREE.Texture( <Image> ),\n  *  bumpScale: <float>,\n  *\n  *  normalMap: new THREE.Texture( <Image> ),\n  *  normalMapType: THREE.TangentSpaceNormalMap,\n  *  normalScale: <Vector2>,\n  *\n  *  displacementMap: new THREE.Texture( <Image> ),\n  *  displacementScale: <float>,\n  *  displacementBias: <float>,\n  *\n  *  roughnessMap: new THREE.Texture( <Image> ),\n  *\n  *  metalnessMap: new THREE.Texture( <Image> ),\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n  *  envMapIntensity: <float>\n  *\n  *  refractionRatio: <float>,\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>,\n  *\n  *  morphTargets: <bool>,\n  *  morphNormals: <bool>,\n  *\n  *  flatShading: <bool>\n  * }\n  */\n \n class MeshStandardMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.defines = { 'STANDARD': '' };\n \n\t\t this.type = 'MeshStandardMaterial';\n \n\t\t this.color = new Color( 0xffffff ); // diffuse\n\t\t this.roughness = 1.0;\n\t\t this.metalness = 0.0;\n \n\t\t this.map = null;\n \n\t\t this.lightMap = null;\n\t\t this.lightMapIntensity = 1.0;\n \n\t\t this.aoMap = null;\n\t\t this.aoMapIntensity = 1.0;\n \n\t\t this.emissive = new Color( 0x000000 );\n\t\t this.emissiveIntensity = 1.0;\n\t\t this.emissiveMap = null;\n \n\t\t this.bumpMap = null;\n\t\t this.bumpScale = 1;\n \n\t\t this.normalMap = null;\n\t\t this.normalMapType = TangentSpaceNormalMap;\n\t\t this.normalScale = new Vector2( 1, 1 );\n \n\t\t this.displacementMap = null;\n\t\t this.displacementScale = 1;\n\t\t this.displacementBias = 0;\n \n\t\t this.roughnessMap = null;\n \n\t\t this.metalnessMap = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.envMap = null;\n\t\t this.envMapIntensity = 1.0;\n \n\t\t this.refractionRatio = 0.98;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n\t\t this.wireframeLinecap = 'round';\n\t\t this.wireframeLinejoin = 'round';\n \n\t\t this.morphTargets = false;\n\t\t this.morphNormals = false;\n \n\t\t this.flatShading = false;\n \n\t\t this.vertexTangents = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.defines = { 'STANDARD': '' };\n \n\t\t this.color.copy( source.color );\n\t\t this.roughness = source.roughness;\n\t\t this.metalness = source.metalness;\n \n\t\t this.map = source.map;\n \n\t\t this.lightMap = source.lightMap;\n\t\t this.lightMapIntensity = source.lightMapIntensity;\n \n\t\t this.aoMap = source.aoMap;\n\t\t this.aoMapIntensity = source.aoMapIntensity;\n \n\t\t this.emissive.copy( source.emissive );\n\t\t this.emissiveMap = source.emissiveMap;\n\t\t this.emissiveIntensity = source.emissiveIntensity;\n \n\t\t this.bumpMap = source.bumpMap;\n\t\t this.bumpScale = source.bumpScale;\n \n\t\t this.normalMap = source.normalMap;\n\t\t this.normalMapType = source.normalMapType;\n\t\t this.normalScale.copy( source.normalScale );\n \n\t\t this.displacementMap = source.displacementMap;\n\t\t this.displacementScale = source.displacementScale;\n\t\t this.displacementBias = source.displacementBias;\n \n\t\t this.roughnessMap = source.roughnessMap;\n \n\t\t this.metalnessMap = source.metalnessMap;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.envMap = source.envMap;\n\t\t this.envMapIntensity = source.envMapIntensity;\n \n\t\t this.refractionRatio = source.refractionRatio;\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n\t\t this.wireframeLinecap = source.wireframeLinecap;\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\n \n\t\t this.morphTargets = source.morphTargets;\n\t\t this.morphNormals = source.morphNormals;\n \n\t\t this.flatShading = source.flatShading;\n \n\t\t this.vertexTangents = source.vertexTangents;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n \n /**\n  * parameters = {\n  *  clearcoat: <float>,\n  *  clearcoatMap: new THREE.Texture( <Image> ),\n  *  clearcoatRoughness: <float>,\n  *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n  *  clearcoatNormalScale: <Vector2>,\n  *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n  *\n  *  reflectivity: <float>,\n  *  ior: <float>,\n  *\n  *  sheen: <Color>,\n  *\n  *  transmission: <float>,\n  *  transmissionMap: new THREE.Texture( <Image> ),\n  *\n  *  thickness: <float>,\n  *  thicknessMap: new THREE.Texture( <Image> ),\n  *  attenuationDistance: <float>,\n  *  attenuationColor: <Color>\n  * }\n  */\n \n class MeshPhysicalMaterial extends MeshStandardMaterial {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.defines = {\n \n\t\t\t 'STANDARD': '',\n\t\t\t 'PHYSICAL': ''\n \n\t\t };\n \n\t\t this.type = 'MeshPhysicalMaterial';\n \n\t\t this.clearcoat = 0.0;\n\t\t this.clearcoatMap = null;\n\t\t this.clearcoatRoughness = 0.0;\n\t\t this.clearcoatRoughnessMap = null;\n\t\t this.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\t this.clearcoatNormalMap = null;\n \n\t\t this.reflectivity = 0.5; // maps to F0 = 0.04\n \n\t\t Object.defineProperty( this, 'ior', {\n\t\t\t get: function () {\n \n\t\t\t\t return ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );\n \n\t\t\t },\n\t\t\t set: function ( ior ) {\n \n\t\t\t\t this.reflectivity = clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );\n \n\t\t\t }\n\t\t } );\n \n\t\t this.sheen = null; // null will disable sheen bsdf\n \n\t\t this.transmission = 0.0;\n\t\t this.transmissionMap = null;\n \n\t\t this.thickness = 0.01;\n\t\t this.thicknessMap = null;\n\t\t this.attenuationDistance = 0.0;\n\t\t this.attenuationColor = new Color( 1, 1, 1 );\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.defines = {\n \n\t\t\t 'STANDARD': '',\n\t\t\t 'PHYSICAL': ''\n \n\t\t };\n \n\t\t this.clearcoat = source.clearcoat;\n\t\t this.clearcoatMap = source.clearcoatMap;\n\t\t this.clearcoatRoughness = source.clearcoatRoughness;\n\t\t this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t this.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t this.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n \n\t\t this.reflectivity = source.reflectivity;\n \n\t\t if ( source.sheen ) {\n \n\t\t\t this.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n \n\t\t } else {\n \n\t\t\t this.sheen = null;\n \n\t\t }\n \n\t\t this.transmission = source.transmission;\n\t\t this.transmissionMap = source.transmissionMap;\n \n\t\t this.thickness = source.thickness;\n\t\t this.thicknessMap = source.thicknessMap;\n\t\t this.attenuationDistance = source.attenuationDistance;\n\t\t this.attenuationColor.copy( source.attenuationColor );\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  specular: <hex>,\n  *  shininess: <float>,\n  *  opacity: <float>,\n  *\n  *  map: new THREE.Texture( <Image> ),\n  *\n  *  lightMap: new THREE.Texture( <Image> ),\n  *  lightMapIntensity: <float>\n  *\n  *  aoMap: new THREE.Texture( <Image> ),\n  *  aoMapIntensity: <float>\n  *\n  *  emissive: <hex>,\n  *  emissiveIntensity: <float>\n  *  emissiveMap: new THREE.Texture( <Image> ),\n  *\n  *  bumpMap: new THREE.Texture( <Image> ),\n  *  bumpScale: <float>,\n  *\n  *  normalMap: new THREE.Texture( <Image> ),\n  *  normalMapType: THREE.TangentSpaceNormalMap,\n  *  normalScale: <Vector2>,\n  *\n  *  displacementMap: new THREE.Texture( <Image> ),\n  *  displacementScale: <float>,\n  *  displacementBias: <float>,\n  *\n  *  specularMap: new THREE.Texture( <Image> ),\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n  *  combine: THREE.MultiplyOperation,\n  *  reflectivity: <float>,\n  *  refractionRatio: <float>,\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>,\n  *\n  *  morphTargets: <bool>,\n  *  morphNormals: <bool>,\n  *\n  *  flatShading: <bool>\n  * }\n  */\n \n class MeshPhongMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'MeshPhongMaterial';\n \n\t\t this.color = new Color( 0xffffff ); // diffuse\n\t\t this.specular = new Color( 0x111111 );\n\t\t this.shininess = 30;\n \n\t\t this.map = null;\n \n\t\t this.lightMap = null;\n\t\t this.lightMapIntensity = 1.0;\n \n\t\t this.aoMap = null;\n\t\t this.aoMapIntensity = 1.0;\n \n\t\t this.emissive = new Color( 0x000000 );\n\t\t this.emissiveIntensity = 1.0;\n\t\t this.emissiveMap = null;\n \n\t\t this.bumpMap = null;\n\t\t this.bumpScale = 1;\n \n\t\t this.normalMap = null;\n\t\t this.normalMapType = TangentSpaceNormalMap;\n\t\t this.normalScale = new Vector2( 1, 1 );\n \n\t\t this.displacementMap = null;\n\t\t this.displacementScale = 1;\n\t\t this.displacementBias = 0;\n \n\t\t this.specularMap = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.envMap = null;\n\t\t this.combine = MultiplyOperation;\n\t\t this.reflectivity = 1;\n\t\t this.refractionRatio = 0.98;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n\t\t this.wireframeLinecap = 'round';\n\t\t this.wireframeLinejoin = 'round';\n \n\t\t this.morphTargets = false;\n\t\t this.morphNormals = false;\n \n\t\t this.flatShading = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n\t\t this.specular.copy( source.specular );\n\t\t this.shininess = source.shininess;\n \n\t\t this.map = source.map;\n \n\t\t this.lightMap = source.lightMap;\n\t\t this.lightMapIntensity = source.lightMapIntensity;\n \n\t\t this.aoMap = source.aoMap;\n\t\t this.aoMapIntensity = source.aoMapIntensity;\n \n\t\t this.emissive.copy( source.emissive );\n\t\t this.emissiveMap = source.emissiveMap;\n\t\t this.emissiveIntensity = source.emissiveIntensity;\n \n\t\t this.bumpMap = source.bumpMap;\n\t\t this.bumpScale = source.bumpScale;\n \n\t\t this.normalMap = source.normalMap;\n\t\t this.normalMapType = source.normalMapType;\n\t\t this.normalScale.copy( source.normalScale );\n \n\t\t this.displacementMap = source.displacementMap;\n\t\t this.displacementScale = source.displacementScale;\n\t\t this.displacementBias = source.displacementBias;\n \n\t\t this.specularMap = source.specularMap;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.envMap = source.envMap;\n\t\t this.combine = source.combine;\n\t\t this.reflectivity = source.reflectivity;\n\t\t this.refractionRatio = source.refractionRatio;\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n\t\t this.wireframeLinecap = source.wireframeLinecap;\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\n \n\t\t this.morphTargets = source.morphTargets;\n\t\t this.morphNormals = source.morphNormals;\n \n\t\t this.flatShading = source.flatShading;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *\n  *  map: new THREE.Texture( <Image> ),\n  *  gradientMap: new THREE.Texture( <Image> ),\n  *\n  *  lightMap: new THREE.Texture( <Image> ),\n  *  lightMapIntensity: <float>\n  *\n  *  aoMap: new THREE.Texture( <Image> ),\n  *  aoMapIntensity: <float>\n  *\n  *  emissive: <hex>,\n  *  emissiveIntensity: <float>\n  *  emissiveMap: new THREE.Texture( <Image> ),\n  *\n  *  bumpMap: new THREE.Texture( <Image> ),\n  *  bumpScale: <float>,\n  *\n  *  normalMap: new THREE.Texture( <Image> ),\n  *  normalMapType: THREE.TangentSpaceNormalMap,\n  *  normalScale: <Vector2>,\n  *\n  *  displacementMap: new THREE.Texture( <Image> ),\n  *  displacementScale: <float>,\n  *  displacementBias: <float>,\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>,\n  *\n  *  morphTargets: <bool>,\n  *  morphNormals: <bool>\n  * }\n  */\n \n class MeshToonMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.defines = { 'TOON': '' };\n \n\t\t this.type = 'MeshToonMaterial';\n \n\t\t this.color = new Color( 0xffffff );\n \n\t\t this.map = null;\n\t\t this.gradientMap = null;\n \n\t\t this.lightMap = null;\n\t\t this.lightMapIntensity = 1.0;\n \n\t\t this.aoMap = null;\n\t\t this.aoMapIntensity = 1.0;\n \n\t\t this.emissive = new Color( 0x000000 );\n\t\t this.emissiveIntensity = 1.0;\n\t\t this.emissiveMap = null;\n \n\t\t this.bumpMap = null;\n\t\t this.bumpScale = 1;\n \n\t\t this.normalMap = null;\n\t\t this.normalMapType = TangentSpaceNormalMap;\n\t\t this.normalScale = new Vector2( 1, 1 );\n \n\t\t this.displacementMap = null;\n\t\t this.displacementScale = 1;\n\t\t this.displacementBias = 0;\n \n\t\t this.alphaMap = null;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n\t\t this.wireframeLinecap = 'round';\n\t\t this.wireframeLinejoin = 'round';\n \n\t\t this.morphTargets = false;\n\t\t this.morphNormals = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n \n\t\t this.map = source.map;\n\t\t this.gradientMap = source.gradientMap;\n \n\t\t this.lightMap = source.lightMap;\n\t\t this.lightMapIntensity = source.lightMapIntensity;\n \n\t\t this.aoMap = source.aoMap;\n\t\t this.aoMapIntensity = source.aoMapIntensity;\n \n\t\t this.emissive.copy( source.emissive );\n\t\t this.emissiveMap = source.emissiveMap;\n\t\t this.emissiveIntensity = source.emissiveIntensity;\n \n\t\t this.bumpMap = source.bumpMap;\n\t\t this.bumpScale = source.bumpScale;\n \n\t\t this.normalMap = source.normalMap;\n\t\t this.normalMapType = source.normalMapType;\n\t\t this.normalScale.copy( source.normalScale );\n \n\t\t this.displacementMap = source.displacementMap;\n\t\t this.displacementScale = source.displacementScale;\n\t\t this.displacementBias = source.displacementBias;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n\t\t this.wireframeLinecap = source.wireframeLinecap;\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\n \n\t\t this.morphTargets = source.morphTargets;\n\t\t this.morphNormals = source.morphNormals;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshToonMaterial.prototype.isMeshToonMaterial = true;\n \n /**\n  * parameters = {\n  *  opacity: <float>,\n  *\n  *  bumpMap: new THREE.Texture( <Image> ),\n  *  bumpScale: <float>,\n  *\n  *  normalMap: new THREE.Texture( <Image> ),\n  *  normalMapType: THREE.TangentSpaceNormalMap,\n  *  normalScale: <Vector2>,\n  *\n  *  displacementMap: new THREE.Texture( <Image> ),\n  *  displacementScale: <float>,\n  *  displacementBias: <float>,\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>\n  *\n  *  morphTargets: <bool>,\n  *  morphNormals: <bool>,\n  *\n  *  flatShading: <bool>\n  * }\n  */\n \n class MeshNormalMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'MeshNormalMaterial';\n \n\t\t this.bumpMap = null;\n\t\t this.bumpScale = 1;\n \n\t\t this.normalMap = null;\n\t\t this.normalMapType = TangentSpaceNormalMap;\n\t\t this.normalScale = new Vector2( 1, 1 );\n \n\t\t this.displacementMap = null;\n\t\t this.displacementScale = 1;\n\t\t this.displacementBias = 0;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n \n\t\t this.fog = false;\n \n\t\t this.morphTargets = false;\n\t\t this.morphNormals = false;\n \n\t\t this.flatShading = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.bumpMap = source.bumpMap;\n\t\t this.bumpScale = source.bumpScale;\n \n\t\t this.normalMap = source.normalMap;\n\t\t this.normalMapType = source.normalMapType;\n\t\t this.normalScale.copy( source.normalScale );\n \n\t\t this.displacementMap = source.displacementMap;\n\t\t this.displacementScale = source.displacementScale;\n\t\t this.displacementBias = source.displacementBias;\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n \n\t\t this.morphTargets = source.morphTargets;\n\t\t this.morphNormals = source.morphNormals;\n \n\t\t this.flatShading = source.flatShading;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  opacity: <float>,\n  *\n  *  map: new THREE.Texture( <Image> ),\n  *\n  *  lightMap: new THREE.Texture( <Image> ),\n  *  lightMapIntensity: <float>\n  *\n  *  aoMap: new THREE.Texture( <Image> ),\n  *  aoMapIntensity: <float>\n  *\n  *  emissive: <hex>,\n  *  emissiveIntensity: <float>\n  *  emissiveMap: new THREE.Texture( <Image> ),\n  *\n  *  specularMap: new THREE.Texture( <Image> ),\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n  *  combine: THREE.Multiply,\n  *  reflectivity: <float>,\n  *  refractionRatio: <float>,\n  *\n  *  wireframe: <boolean>,\n  *  wireframeLinewidth: <float>,\n  *\n  *  morphTargets: <bool>,\n  *  morphNormals: <bool>\n  * }\n  */\n \n class MeshLambertMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'MeshLambertMaterial';\n \n\t\t this.color = new Color( 0xffffff ); // diffuse\n \n\t\t this.map = null;\n \n\t\t this.lightMap = null;\n\t\t this.lightMapIntensity = 1.0;\n \n\t\t this.aoMap = null;\n\t\t this.aoMapIntensity = 1.0;\n \n\t\t this.emissive = new Color( 0x000000 );\n\t\t this.emissiveIntensity = 1.0;\n\t\t this.emissiveMap = null;\n \n\t\t this.specularMap = null;\n \n\t\t this.alphaMap = null;\n \n\t\t this.envMap = null;\n\t\t this.combine = MultiplyOperation;\n\t\t this.reflectivity = 1;\n\t\t this.refractionRatio = 0.98;\n \n\t\t this.wireframe = false;\n\t\t this.wireframeLinewidth = 1;\n\t\t this.wireframeLinecap = 'round';\n\t\t this.wireframeLinejoin = 'round';\n \n\t\t this.morphTargets = false;\n\t\t this.morphNormals = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n \n\t\t this.map = source.map;\n \n\t\t this.lightMap = source.lightMap;\n\t\t this.lightMapIntensity = source.lightMapIntensity;\n \n\t\t this.aoMap = source.aoMap;\n\t\t this.aoMapIntensity = source.aoMapIntensity;\n \n\t\t this.emissive.copy( source.emissive );\n\t\t this.emissiveMap = source.emissiveMap;\n\t\t this.emissiveIntensity = source.emissiveIntensity;\n \n\t\t this.specularMap = source.specularMap;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.envMap = source.envMap;\n\t\t this.combine = source.combine;\n\t\t this.reflectivity = source.reflectivity;\n\t\t this.refractionRatio = source.refractionRatio;\n \n\t\t this.wireframe = source.wireframe;\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\n\t\t this.wireframeLinecap = source.wireframeLinecap;\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\n \n\t\t this.morphTargets = source.morphTargets;\n\t\t this.morphNormals = source.morphNormals;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  opacity: <float>,\n  *\n  *  matcap: new THREE.Texture( <Image> ),\n  *\n  *  map: new THREE.Texture( <Image> ),\n  *\n  *  bumpMap: new THREE.Texture( <Image> ),\n  *  bumpScale: <float>,\n  *\n  *  normalMap: new THREE.Texture( <Image> ),\n  *  normalMapType: THREE.TangentSpaceNormalMap,\n  *  normalScale: <Vector2>,\n  *\n  *  displacementMap: new THREE.Texture( <Image> ),\n  *  displacementScale: <float>,\n  *  displacementBias: <float>,\n  *\n  *  alphaMap: new THREE.Texture( <Image> ),\n  *\n  *  morphTargets: <bool>,\n  *  morphNormals: <bool>\n  *\n  *  flatShading: <bool>\n  * }\n  */\n \n class MeshMatcapMaterial extends Material {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.defines = { 'MATCAP': '' };\n \n\t\t this.type = 'MeshMatcapMaterial';\n \n\t\t this.color = new Color( 0xffffff ); // diffuse\n \n\t\t this.matcap = null;\n \n\t\t this.map = null;\n \n\t\t this.bumpMap = null;\n\t\t this.bumpScale = 1;\n \n\t\t this.normalMap = null;\n\t\t this.normalMapType = TangentSpaceNormalMap;\n\t\t this.normalScale = new Vector2( 1, 1 );\n \n\t\t this.displacementMap = null;\n\t\t this.displacementScale = 1;\n\t\t this.displacementBias = 0;\n \n\t\t this.alphaMap = null;\n \n\t\t this.morphTargets = false;\n\t\t this.morphNormals = false;\n \n\t\t this.flatShading = false;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.defines = { 'MATCAP': '' };\n \n\t\t this.color.copy( source.color );\n \n\t\t this.matcap = source.matcap;\n \n\t\t this.map = source.map;\n \n\t\t this.bumpMap = source.bumpMap;\n\t\t this.bumpScale = source.bumpScale;\n \n\t\t this.normalMap = source.normalMap;\n\t\t this.normalMapType = source.normalMapType;\n\t\t this.normalScale.copy( source.normalScale );\n \n\t\t this.displacementMap = source.displacementMap;\n\t\t this.displacementScale = source.displacementScale;\n\t\t this.displacementBias = source.displacementBias;\n \n\t\t this.alphaMap = source.alphaMap;\n \n\t\t this.morphTargets = source.morphTargets;\n\t\t this.morphNormals = source.morphNormals;\n \n\t\t this.flatShading = source.flatShading;\n \n\t\t return this;\n \n\t }\n \n }\n \n MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n \n /**\n  * parameters = {\n  *  color: <hex>,\n  *  opacity: <float>,\n  *\n  *  linewidth: <float>,\n  *\n  *  scale: <float>,\n  *  dashSize: <float>,\n  *  gapSize: <float>\n  * }\n  */\n \n class LineDashedMaterial extends LineBasicMaterial {\n \n\t constructor( parameters ) {\n \n\t\t super();\n \n\t\t this.type = 'LineDashedMaterial';\n \n\t\t this.scale = 1;\n\t\t this.dashSize = 3;\n\t\t this.gapSize = 1;\n \n\t\t this.setValues( parameters );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.scale = source.scale;\n\t\t this.dashSize = source.dashSize;\n\t\t this.gapSize = source.gapSize;\n \n\t\t return this;\n \n\t }\n \n }\n \n LineDashedMaterial.prototype.isLineDashedMaterial = true;\n \n var Materials = /*#__PURE__*/Object.freeze({\n\t __proto__: null,\n\t ShadowMaterial: ShadowMaterial,\n\t SpriteMaterial: SpriteMaterial,\n\t RawShaderMaterial: RawShaderMaterial,\n\t ShaderMaterial: ShaderMaterial,\n\t PointsMaterial: PointsMaterial,\n\t MeshPhysicalMaterial: MeshPhysicalMaterial,\n\t MeshStandardMaterial: MeshStandardMaterial,\n\t MeshPhongMaterial: MeshPhongMaterial,\n\t MeshToonMaterial: MeshToonMaterial,\n\t MeshNormalMaterial: MeshNormalMaterial,\n\t MeshLambertMaterial: MeshLambertMaterial,\n\t MeshDepthMaterial: MeshDepthMaterial,\n\t MeshDistanceMaterial: MeshDistanceMaterial,\n\t MeshBasicMaterial: MeshBasicMaterial,\n\t MeshMatcapMaterial: MeshMatcapMaterial,\n\t LineDashedMaterial: LineDashedMaterial,\n\t LineBasicMaterial: LineBasicMaterial,\n\t Material: Material\n });\n \n const AnimationUtils = {\n \n\t // same as Array.prototype.slice, but also works on typed arrays\n\t arraySlice: function ( array, from, to ) {\n \n\t\t if ( AnimationUtils.isTypedArray( array ) ) {\n \n\t\t\t // in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t // but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n \n\t\t }\n \n\t\t return array.slice( from, to );\n \n\t },\n \n\t // converts an array to a specific type\n\t convertArray: function ( array, type, forceClone ) {\n \n\t\t if ( ! array || // let 'undefined' and 'null' pass\n\t\t\t ! forceClone && array.constructor === type ) return array;\n \n\t\t if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n \n\t\t\t return new type( array ); // create typed array\n \n\t\t }\n \n\t\t return Array.prototype.slice.call( array ); // create Array\n \n\t },\n \n\t isTypedArray: function ( object ) {\n \n\t\t return ArrayBuffer.isView( object ) &&\n\t\t\t ! ( object instanceof DataView );\n \n\t },\n \n\t // returns an array by which times and values can be sorted\n\t getKeyframeOrder: function ( times ) {\n \n\t\t function compareTime( i, j ) {\n \n\t\t\t return times[ i ] - times[ j ];\n \n\t\t }\n \n\t\t const n = times.length;\n\t\t const result = new Array( n );\n\t\t for ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n \n\t\t result.sort( compareTime );\n \n\t\t return result;\n \n\t },\n \n\t // uses the array previously returned by 'getKeyframeOrder' to sort data\n\t sortedArray: function ( values, stride, order ) {\n \n\t\t const nValues = values.length;\n\t\t const result = new values.constructor( nValues );\n \n\t\t for ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n \n\t\t\t const srcOffset = order[ i ] * stride;\n \n\t\t\t for ( let j = 0; j !== stride; ++ j ) {\n \n\t\t\t\t result[ dstOffset ++ ] = values[ srcOffset + j ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t return result;\n \n\t },\n \n\t // function for parsing AOS keyframe formats\n\t flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n \n\t\t let i = 1, key = jsonKeys[ 0 ];\n \n\t\t while ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n \n\t\t\t key = jsonKeys[ i ++ ];\n \n\t\t }\n \n\t\t if ( key === undefined ) return; // no data\n \n\t\t let value = key[ valuePropertyName ];\n\t\t if ( value === undefined ) return; // no data\n \n\t\t if ( Array.isArray( value ) ) {\n \n\t\t\t do {\n \n\t\t\t\t value = key[ valuePropertyName ];\n \n\t\t\t\t if ( value !== undefined ) {\n \n\t\t\t\t\t times.push( key.time );\n\t\t\t\t\t values.push.apply( values, value ); // push all elements\n \n\t\t\t\t }\n \n\t\t\t\t key = jsonKeys[ i ++ ];\n \n\t\t\t } while ( key !== undefined );\n \n\t\t } else if ( value.toArray !== undefined ) {\n \n\t\t\t // ...assume THREE.Math-ish\n \n\t\t\t do {\n \n\t\t\t\t value = key[ valuePropertyName ];\n \n\t\t\t\t if ( value !== undefined ) {\n \n\t\t\t\t\t times.push( key.time );\n\t\t\t\t\t value.toArray( values, values.length );\n \n\t\t\t\t }\n \n\t\t\t\t key = jsonKeys[ i ++ ];\n \n\t\t\t } while ( key !== undefined );\n \n\t\t } else {\n \n\t\t\t // otherwise push as-is\n \n\t\t\t do {\n \n\t\t\t\t value = key[ valuePropertyName ];\n \n\t\t\t\t if ( value !== undefined ) {\n \n\t\t\t\t\t times.push( key.time );\n\t\t\t\t\t values.push( value );\n \n\t\t\t\t }\n \n\t\t\t\t key = jsonKeys[ i ++ ];\n \n\t\t\t } while ( key !== undefined );\n \n\t\t }\n \n\t },\n \n\t subclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n \n\t\t const clip = sourceClip.clone();\n \n\t\t clip.name = name;\n \n\t\t const tracks = [];\n \n\t\t for ( let i = 0; i < clip.tracks.length; ++ i ) {\n \n\t\t\t const track = clip.tracks[ i ];\n\t\t\t const valueSize = track.getValueSize();\n \n\t\t\t const times = [];\n\t\t\t const values = [];\n \n\t\t\t for ( let j = 0; j < track.times.length; ++ j ) {\n \n\t\t\t\t const frame = track.times[ j ] * fps;\n \n\t\t\t\t if ( frame < startFrame || frame >= endFrame ) continue;\n \n\t\t\t\t times.push( track.times[ j ] );\n \n\t\t\t\t for ( let k = 0; k < valueSize; ++ k ) {\n \n\t\t\t\t\t values.push( track.values[ j * valueSize + k ] );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( times.length === 0 ) continue;\n \n\t\t\t track.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\t track.values = AnimationUtils.convertArray( values, track.values.constructor );\n \n\t\t\t tracks.push( track );\n \n\t\t }\n \n\t\t clip.tracks = tracks;\n \n\t\t // find minimum .times value across all tracks in the trimmed clip\n \n\t\t let minStartTime = Infinity;\n \n\t\t for ( let i = 0; i < clip.tracks.length; ++ i ) {\n \n\t\t\t if ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n \n\t\t\t\t minStartTime = clip.tracks[ i ].times[ 0 ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t // shift all tracks such that clip begins at t=0\n \n\t\t for ( let i = 0; i < clip.tracks.length; ++ i ) {\n \n\t\t\t clip.tracks[ i ].shift( - 1 * minStartTime );\n \n\t\t }\n \n\t\t clip.resetDuration();\n \n\t\t return clip;\n \n\t },\n \n\t makeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n \n\t\t if ( fps <= 0 ) fps = 30;\n \n\t\t const numTracks = referenceClip.tracks.length;\n\t\t const referenceTime = referenceFrame / fps;\n \n\t\t // Make each track's values relative to the values at the reference frame\n\t\t for ( let i = 0; i < numTracks; ++ i ) {\n \n\t\t\t const referenceTrack = referenceClip.tracks[ i ];\n\t\t\t const referenceTrackType = referenceTrack.ValueTypeName;\n \n\t\t\t // Skip this track if it's non-numeric\n\t\t\t if ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n \n\t\t\t // Find the track in the target clip whose name and type matches the reference track\n\t\t\t const targetTrack = targetClip.tracks.find( function ( track ) {\n \n\t\t\t\t return track.name === referenceTrack.name\n\t\t\t\t\t && track.ValueTypeName === referenceTrackType;\n \n\t\t\t } );\n \n\t\t\t if ( targetTrack === undefined ) continue;\n \n\t\t\t let referenceOffset = 0;\n\t\t\t const referenceValueSize = referenceTrack.getValueSize();\n \n\t\t\t if ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n \n\t\t\t\t referenceOffset = referenceValueSize / 3;\n \n\t\t\t }\n \n\t\t\t let targetOffset = 0;\n\t\t\t const targetValueSize = targetTrack.getValueSize();\n \n\t\t\t if ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n \n\t\t\t\t targetOffset = targetValueSize / 3;\n \n\t\t\t }\n \n\t\t\t const lastIndex = referenceTrack.times.length - 1;\n\t\t\t let referenceValue;\n \n\t\t\t // Find the value to subtract out of the track\n\t\t\t if ( referenceTime <= referenceTrack.times[ 0 ] ) {\n \n\t\t\t\t // Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t const startIndex = referenceOffset;\n\t\t\t\t const endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n \n\t\t\t } else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n \n\t\t\t\t // Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t const startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\t const endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\t referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n \n\t\t\t } else {\n \n\t\t\t\t // Interpolate to the reference value\n\t\t\t\t const interpolant = referenceTrack.createInterpolant();\n\t\t\t\t const startIndex = referenceOffset;\n\t\t\t\t const endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t interpolant.evaluate( referenceTime );\n\t\t\t\t referenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n \n\t\t\t }\n \n\t\t\t // Conjugate the quaternion\n\t\t\t if ( referenceTrackType === 'quaternion' ) {\n \n\t\t\t\t const referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\t referenceQuat.toArray( referenceValue );\n \n\t\t\t }\n \n\t\t\t // Subtract the reference value from all of the track values\n \n\t\t\t const numTimes = targetTrack.times.length;\n\t\t\t for ( let j = 0; j < numTimes; ++ j ) {\n \n\t\t\t\t const valueStart = j * targetValueSize + targetOffset;\n \n\t\t\t\t if ( referenceTrackType === 'quaternion' ) {\n \n\t\t\t\t\t // Multiply the conjugate for quaternion track types\n\t\t\t\t\t Quaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\t targetTrack.values,\n\t\t\t\t\t\t valueStart,\n\t\t\t\t\t\t referenceValue,\n\t\t\t\t\t\t 0,\n\t\t\t\t\t\t targetTrack.values,\n\t\t\t\t\t\t valueStart\n\t\t\t\t\t );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t const valueEnd = targetValueSize - targetOffset * 2;\n \n\t\t\t\t\t // Subtract each value for all other numeric track types\n\t\t\t\t\t for ( let k = 0; k < valueEnd; ++ k ) {\n \n\t\t\t\t\t\t targetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t targetClip.blendMode = AdditiveAnimationBlendMode;\n \n\t\t return targetClip;\n \n\t }\n \n };\n \n /**\n  * Abstract base class of interpolants over parametric samples.\n  *\n  * The parameter domain is one dimensional, typically the time or a path\n  * along a curve defined by the data.\n  *\n  * The sample values can have any dimensionality and derived classes may\n  * apply special interpretations to the data.\n  *\n  * This class provides the interval seek in a Template Method, deferring\n  * the actual interpolation to derived classes.\n  *\n  * Time complexity is O(1) for linear access crossing at most two points\n  * and O(log N) for random access, where N is the number of positions.\n  *\n  * References:\n  *\n  * \t\thttp://www.oodesign.com/template-method-pattern.html\n  *\n  */\n \n class Interpolant {\n \n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n\t\t this.parameterPositions = parameterPositions;\n\t\t this._cachedIndex = 0;\n \n\t\t this.resultBuffer = resultBuffer !== undefined ?\n\t\t\t resultBuffer : new sampleValues.constructor( sampleSize );\n\t\t this.sampleValues = sampleValues;\n\t\t this.valueSize = sampleSize;\n \n\t\t this.settings = null;\n\t\t this.DefaultSettings_ = {};\n \n\t }\n \n\t evaluate( t ) {\n \n\t\t const pp = this.parameterPositions;\n\t\t let i1 = this._cachedIndex,\n\t\t\t t1 = pp[ i1 ],\n\t\t\t t0 = pp[ i1 - 1 ];\n \n\t\t validate_interval: {\n \n\t\t\t seek: {\n \n\t\t\t\t let right;\n \n\t\t\t\t linear_scan: {\n \n\t\t\t\t\t //- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t //- slower code:\n\t\t\t\t\t //-\n\t\t\t\t\t //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t forward_scan: if ( ! ( t < t1 ) ) {\n \n\t\t\t\t\t\t for ( let giveUpAt = i1 + 2; ; ) {\n \n\t\t\t\t\t\t\t if ( t1 === undefined ) {\n \n\t\t\t\t\t\t\t\t if ( t < t0 ) break forward_scan;\n \n\t\t\t\t\t\t\t\t // after end\n \n\t\t\t\t\t\t\t\t i1 = pp.length;\n\t\t\t\t\t\t\t\t this._cachedIndex = i1;\n\t\t\t\t\t\t\t\t return this.afterEnd_( i1 - 1, t, t0 );\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t\t if ( i1 === giveUpAt ) break; // this loop\n \n\t\t\t\t\t\t\t t0 = t1;\n\t\t\t\t\t\t\t t1 = pp[ ++ i1 ];\n \n\t\t\t\t\t\t\t if ( t < t1 ) {\n \n\t\t\t\t\t\t\t\t // we have arrived at the sought interval\n\t\t\t\t\t\t\t\t break seek;\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t // prepare binary search on the right side of the index\n\t\t\t\t\t\t right = pp.length;\n\t\t\t\t\t\t break linear_scan;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t //- slower code:\n\t\t\t\t\t //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t if ( ! ( t >= t0 ) ) {\n \n\t\t\t\t\t\t // looping?\n \n\t\t\t\t\t\t const t1global = pp[ 1 ];\n \n\t\t\t\t\t\t if ( t < t1global ) {\n \n\t\t\t\t\t\t\t i1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t t0 = t1global;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t // linear reverse scan\n \n\t\t\t\t\t\t for ( let giveUpAt = i1 - 2; ; ) {\n \n\t\t\t\t\t\t\t if ( t0 === undefined ) {\n \n\t\t\t\t\t\t\t\t // before start\n \n\t\t\t\t\t\t\t\t this._cachedIndex = 0;\n\t\t\t\t\t\t\t\t return this.beforeStart_( 0, t, t1 );\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t\t if ( i1 === giveUpAt ) break; // this loop\n \n\t\t\t\t\t\t\t t1 = t0;\n\t\t\t\t\t\t\t t0 = pp[ -- i1 - 1 ];\n \n\t\t\t\t\t\t\t if ( t >= t0 ) {\n \n\t\t\t\t\t\t\t\t // we have arrived at the sought interval\n\t\t\t\t\t\t\t\t break seek;\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t // prepare binary search on the left side of the index\n\t\t\t\t\t\t right = i1;\n\t\t\t\t\t\t i1 = 0;\n\t\t\t\t\t\t break linear_scan;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t // the interval is valid\n \n\t\t\t\t\t break validate_interval;\n \n\t\t\t\t } // linear scan\n \n\t\t\t\t // binary search\n \n\t\t\t\t while ( i1 < right ) {\n \n\t\t\t\t\t const mid = ( i1 + right ) >>> 1;\n \n\t\t\t\t\t if ( t < pp[ mid ] ) {\n \n\t\t\t\t\t\t right = mid;\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t i1 = mid + 1;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t t1 = pp[ i1 ];\n\t\t\t\t t0 = pp[ i1 - 1 ];\n \n\t\t\t\t // check boundary cases, again\n \n\t\t\t\t if ( t0 === undefined ) {\n \n\t\t\t\t\t this._cachedIndex = 0;\n\t\t\t\t\t return this.beforeStart_( 0, t, t1 );\n \n\t\t\t\t }\n \n\t\t\t\t if ( t1 === undefined ) {\n \n\t\t\t\t\t i1 = pp.length;\n\t\t\t\t\t this._cachedIndex = i1;\n\t\t\t\t\t return this.afterEnd_( i1 - 1, t0, t );\n \n\t\t\t\t }\n \n\t\t\t } // seek\n \n\t\t\t this._cachedIndex = i1;\n \n\t\t\t this.intervalChanged_( i1, t0, t1 );\n \n\t\t } // validate_interval\n \n\t\t return this.interpolate_( i1, t0, t, t1 );\n \n\t }\n \n\t getSettings_() {\n \n\t\t return this.settings || this.DefaultSettings_;\n \n\t }\n \n\t copySampleValue_( index ) {\n \n\t\t // copies a sample value to the result buffer\n \n\t\t const result = this.resultBuffer,\n\t\t\t values = this.sampleValues,\n\t\t\t stride = this.valueSize,\n\t\t\t offset = index * stride;\n \n\t\t for ( let i = 0; i !== stride; ++ i ) {\n \n\t\t\t result[ i ] = values[ offset + i ];\n \n\t\t }\n \n\t\t return result;\n \n\t }\n \n\t // Template methods for derived classes:\n \n\t interpolate_( /* i1, t0, t, t1 */ ) {\n \n\t\t throw new Error( 'call to abstract method' );\n\t\t // implementations shall return this.resultBuffer\n \n\t }\n \n\t intervalChanged_( /* i1, t0, t1 */ ) {\n \n\t\t // empty\n \n\t }\n \n }\n \n // ALIAS DEFINITIONS\n \n Interpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n Interpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n \n /**\n  * Fast and simple cubic spline interpolant.\n  *\n  * It was derived from a Hermitian construction setting the first derivative\n  * at each sample position to the linear slope between neighboring positions\n  * over their parameter interval.\n  */\n \n class CubicInterpolant extends Interpolant {\n \n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n\t\t this._weightPrev = - 0;\n\t\t this._offsetPrev = - 0;\n\t\t this._weightNext = - 0;\n\t\t this._offsetNext = - 0;\n \n\t\t this.DefaultSettings_ = {\n \n\t\t\t endingStart: ZeroCurvatureEnding,\n\t\t\t endingEnd: ZeroCurvatureEnding\n \n\t\t };\n \n\t }\n \n\t intervalChanged_( i1, t0, t1 ) {\n \n\t\t const pp = this.parameterPositions;\n\t\t let iPrev = i1 - 2,\n\t\t\t iNext = i1 + 1,\n \n\t\t\t tPrev = pp[ iPrev ],\n\t\t\t tNext = pp[ iNext ];\n \n\t\t if ( tPrev === undefined ) {\n \n\t\t\t switch ( this.getSettings_().endingStart ) {\n \n\t\t\t\t case ZeroSlopeEnding:\n \n\t\t\t\t\t // f'(t0) = 0\n\t\t\t\t\t iPrev = i1;\n\t\t\t\t\t tPrev = 2 * t0 - t1;\n \n\t\t\t\t\t break;\n \n\t\t\t\t case WrapAroundEnding:\n \n\t\t\t\t\t // use the other end of the curve\n\t\t\t\t\t iPrev = pp.length - 2;\n\t\t\t\t\t tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n \n\t\t\t\t\t break;\n \n\t\t\t\t default: // ZeroCurvatureEnding\n \n\t\t\t\t\t // f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t iPrev = i1;\n\t\t\t\t\t tPrev = t1;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( tNext === undefined ) {\n \n\t\t\t switch ( this.getSettings_().endingEnd ) {\n \n\t\t\t\t case ZeroSlopeEnding:\n \n\t\t\t\t\t // f'(tN) = 0\n\t\t\t\t\t iNext = i1;\n\t\t\t\t\t tNext = 2 * t1 - t0;\n \n\t\t\t\t\t break;\n \n\t\t\t\t case WrapAroundEnding:\n \n\t\t\t\t\t // use the other end of the curve\n\t\t\t\t\t iNext = 1;\n\t\t\t\t\t tNext = t1 + pp[ 1 ] - pp[ 0 ];\n \n\t\t\t\t\t break;\n \n\t\t\t\t default: // ZeroCurvatureEnding\n \n\t\t\t\t\t // f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t iNext = i1 - 1;\n\t\t\t\t\t tNext = t0;\n \n\t\t\t }\n \n\t\t }\n \n\t\t const halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t stride = this.valueSize;\n \n\t\t this._weightPrev = halfDt / ( t0 - tPrev );\n\t\t this._weightNext = halfDt / ( tNext - t1 );\n\t\t this._offsetPrev = iPrev * stride;\n\t\t this._offsetNext = iNext * stride;\n \n\t }\n \n\t interpolate_( i1, t0, t, t1 ) {\n \n\t\t const result = this.resultBuffer,\n\t\t\t values = this.sampleValues,\n\t\t\t stride = this.valueSize,\n \n\t\t\t o1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t oP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t wP = this._weightPrev,\twN = this._weightNext,\n \n\t\t\t p = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t pp = p * p,\n\t\t\t ppp = pp * p;\n \n\t\t // evaluate polynomials\n \n\t\t const sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t const s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t const s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t const sN = wN * ppp - wN * pp;\n \n\t\t // combine data linearly\n \n\t\t for ( let i = 0; i !== stride; ++ i ) {\n \n\t\t\t result[ i ] =\n\t\t\t\t\t sP * values[ oP + i ] +\n\t\t\t\t\t s0 * values[ o0 + i ] +\n\t\t\t\t\t s1 * values[ o1 + i ] +\n\t\t\t\t\t sN * values[ oN + i ];\n \n\t\t }\n \n\t\t return result;\n \n\t }\n \n }\n \n class LinearInterpolant extends Interpolant {\n \n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n\t }\n \n\t interpolate_( i1, t0, t, t1 ) {\n \n\t\t const result = this.resultBuffer,\n\t\t\t values = this.sampleValues,\n\t\t\t stride = this.valueSize,\n \n\t\t\t offset1 = i1 * stride,\n\t\t\t offset0 = offset1 - stride,\n \n\t\t\t weight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t weight0 = 1 - weight1;\n \n\t\t for ( let i = 0; i !== stride; ++ i ) {\n \n\t\t\t result[ i ] =\n\t\t\t\t\t values[ offset0 + i ] * weight0 +\n\t\t\t\t\t values[ offset1 + i ] * weight1;\n \n\t\t }\n \n\t\t return result;\n \n\t }\n \n }\n \n /**\n  *\n  * Interpolant that evaluates to the sample value at the position preceeding\n  * the parameter.\n  */\n \n class DiscreteInterpolant extends Interpolant {\n \n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n\t }\n \n\t interpolate_( i1 /*, t0, t, t1 */ ) {\n \n\t\t return this.copySampleValue_( i1 - 1 );\n \n\t }\n \n }\n \n class KeyframeTrack {\n \n\t constructor( name, times, values, interpolation ) {\n \n\t\t if ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\t if ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n \n\t\t this.name = name;\n \n\t\t this.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\t this.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n \n\t\t this.setInterpolation( interpolation || this.DefaultInterpolation );\n \n\t }\n \n\t // Serialization (in static context, because of constructor invocation\n\t // and automatic invocation of .toJSON):\n \n\t static toJSON( track ) {\n \n\t\t const trackType = track.constructor;\n \n\t\t let json;\n \n\t\t // derived classes can define a static toJSON method\n\t\t if ( trackType.toJSON !== this.toJSON ) {\n \n\t\t\t json = trackType.toJSON( track );\n \n\t\t } else {\n \n\t\t\t // by default, we assume the data can be serialized as-is\n\t\t\t json = {\n \n\t\t\t\t 'name': track.name,\n\t\t\t\t 'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t 'values': AnimationUtils.convertArray( track.values, Array )\n \n\t\t\t };\n \n\t\t\t const interpolation = track.getInterpolation();\n \n\t\t\t if ( interpolation !== track.DefaultInterpolation ) {\n \n\t\t\t\t json.interpolation = interpolation;\n \n\t\t\t }\n \n\t\t }\n \n\t\t json.type = track.ValueTypeName; // mandatory\n \n\t\t return json;\n \n\t }\n \n\t InterpolantFactoryMethodDiscrete( result ) {\n \n\t\t return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n \n\t }\n \n\t InterpolantFactoryMethodLinear( result ) {\n \n\t\t return new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n \n\t }\n \n\t InterpolantFactoryMethodSmooth( result ) {\n \n\t\t return new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n \n\t }\n \n\t setInterpolation( interpolation ) {\n \n\t\t let factoryMethod;\n \n\t\t switch ( interpolation ) {\n \n\t\t\t case InterpolateDiscrete:\n \n\t\t\t\t factoryMethod = this.InterpolantFactoryMethodDiscrete;\n \n\t\t\t\t break;\n \n\t\t\t case InterpolateLinear:\n \n\t\t\t\t factoryMethod = this.InterpolantFactoryMethodLinear;\n \n\t\t\t\t break;\n \n\t\t\t case InterpolateSmooth:\n \n\t\t\t\t factoryMethod = this.InterpolantFactoryMethodSmooth;\n \n\t\t\t\t break;\n \n\t\t }\n \n\t\t if ( factoryMethod === undefined ) {\n \n\t\t\t const message = 'unsupported interpolation for ' +\n\t\t\t\t this.ValueTypeName + ' keyframe track named ' + this.name;\n \n\t\t\t if ( this.createInterpolant === undefined ) {\n \n\t\t\t\t // fall back to default, unless the default itself is messed up\n\t\t\t\t if ( interpolation !== this.DefaultInterpolation ) {\n \n\t\t\t\t\t this.setInterpolation( this.DefaultInterpolation );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t throw new Error( message ); // fatal, in this case\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t console.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t return this;\n \n\t\t }\n \n\t\t this.createInterpolant = factoryMethod;\n \n\t\t return this;\n \n\t }\n \n\t getInterpolation() {\n \n\t\t switch ( this.createInterpolant ) {\n \n\t\t\t case this.InterpolantFactoryMethodDiscrete:\n \n\t\t\t\t return InterpolateDiscrete;\n \n\t\t\t case this.InterpolantFactoryMethodLinear:\n \n\t\t\t\t return InterpolateLinear;\n \n\t\t\t case this.InterpolantFactoryMethodSmooth:\n \n\t\t\t\t return InterpolateSmooth;\n \n\t\t }\n \n\t }\n \n\t getValueSize() {\n \n\t\t return this.values.length / this.times.length;\n \n\t }\n \n\t // move all keyframes either forwards or backwards in time\n\t shift( timeOffset ) {\n \n\t\t if ( timeOffset !== 0.0 ) {\n \n\t\t\t const times = this.times;\n \n\t\t\t for ( let i = 0, n = times.length; i !== n; ++ i ) {\n \n\t\t\t\t times[ i ] += timeOffset;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t scale( timeScale ) {\n \n\t\t if ( timeScale !== 1.0 ) {\n \n\t\t\t const times = this.times;\n \n\t\t\t for ( let i = 0, n = times.length; i !== n; ++ i ) {\n \n\t\t\t\t times[ i ] *= timeScale;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t trim( startTime, endTime ) {\n \n\t\t const times = this.times,\n\t\t\t nKeys = times.length;\n \n\t\t let from = 0,\n\t\t\t to = nKeys - 1;\n \n\t\t while ( from !== nKeys && times[ from ] < startTime ) {\n \n\t\t\t ++ from;\n \n\t\t }\n \n\t\t while ( to !== - 1 && times[ to ] > endTime ) {\n \n\t\t\t -- to;\n \n\t\t }\n \n\t\t ++ to; // inclusive -> exclusive bound\n \n\t\t if ( from !== 0 || to !== nKeys ) {\n \n\t\t\t // empty tracks are forbidden, so keep at least one keyframe\n\t\t\t if ( from >= to ) {\n \n\t\t\t\t to = Math.max( to, 1 );\n\t\t\t\t from = to - 1;\n \n\t\t\t }\n \n\t\t\t const stride = this.getValueSize();\n\t\t\t this.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t validate() {\n \n\t\t let valid = true;\n \n\t\t const valueSize = this.getValueSize();\n\t\t if ( valueSize - Math.floor( valueSize ) !== 0 ) {\n \n\t\t\t console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t valid = false;\n \n\t\t }\n \n\t\t const times = this.times,\n\t\t\t values = this.values,\n \n\t\t\t nKeys = times.length;\n \n\t\t if ( nKeys === 0 ) {\n \n\t\t\t console.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t valid = false;\n \n\t\t }\n \n\t\t let prevTime = null;\n \n\t\t for ( let i = 0; i !== nKeys; i ++ ) {\n \n\t\t\t const currTime = times[ i ];\n \n\t\t\t if ( typeof currTime === 'number' && isNaN( currTime ) ) {\n \n\t\t\t\t console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t valid = false;\n\t\t\t\t break;\n \n\t\t\t }\n \n\t\t\t if ( prevTime !== null && prevTime > currTime ) {\n \n\t\t\t\t console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t valid = false;\n\t\t\t\t break;\n \n\t\t\t }\n \n\t\t\t prevTime = currTime;\n \n\t\t }\n \n\t\t if ( values !== undefined ) {\n \n\t\t\t if ( AnimationUtils.isTypedArray( values ) ) {\n \n\t\t\t\t for ( let i = 0, n = values.length; i !== n; ++ i ) {\n \n\t\t\t\t\t const value = values[ i ];\n \n\t\t\t\t\t if ( isNaN( value ) ) {\n \n\t\t\t\t\t\t console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t valid = false;\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t return valid;\n \n\t }\n \n\t // removes equivalent sequential keys as common in morph target sequences\n\t // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t optimize() {\n \n\t\t // times or values may be shared with other tracks, so overwriting is unsafe\n\t\t const times = AnimationUtils.arraySlice( this.times ),\n\t\t\t values = AnimationUtils.arraySlice( this.values ),\n\t\t\t stride = this.getValueSize(),\n \n\t\t\t smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n \n\t\t\t lastIndex = times.length - 1;\n \n\t\t let writeIndex = 1;\n \n\t\t for ( let i = 1; i < lastIndex; ++ i ) {\n \n\t\t\t let keep = false;\n \n\t\t\t const time = times[ i ];\n\t\t\t const timeNext = times[ i + 1 ];\n \n\t\t\t // remove adjacent keyframes scheduled at the same time\n \n\t\t\t if ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n \n\t\t\t\t if ( ! smoothInterpolation ) {\n \n\t\t\t\t\t // remove unnecessary keyframes same as their neighbors\n \n\t\t\t\t\t const offset = i * stride,\n\t\t\t\t\t\t offsetP = offset - stride,\n\t\t\t\t\t\t offsetN = offset + stride;\n \n\t\t\t\t\t for ( let j = 0; j !== stride; ++ j ) {\n \n\t\t\t\t\t\t const value = values[ offset + j ];\n \n\t\t\t\t\t\t if ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t value !== values[ offsetN + j ] ) {\n \n\t\t\t\t\t\t\t keep = true;\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t keep = true;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t // in-place compaction\n \n\t\t\t if ( keep ) {\n \n\t\t\t\t if ( i !== writeIndex ) {\n \n\t\t\t\t\t times[ writeIndex ] = times[ i ];\n \n\t\t\t\t\t const readOffset = i * stride,\n\t\t\t\t\t\t writeOffset = writeIndex * stride;\n \n\t\t\t\t\t for ( let j = 0; j !== stride; ++ j ) {\n \n\t\t\t\t\t\t values[ writeOffset + j ] = values[ readOffset + j ];\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t ++ writeIndex;\n \n\t\t\t }\n \n\t\t }\n \n\t\t // flush last keyframe (compaction looks ahead)\n \n\t\t if ( lastIndex > 0 ) {\n \n\t\t\t times[ writeIndex ] = times[ lastIndex ];\n \n\t\t\t for ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n \n\t\t\t\t values[ writeOffset + j ] = values[ readOffset + j ];\n \n\t\t\t }\n \n\t\t\t ++ writeIndex;\n \n\t\t }\n \n\t\t if ( writeIndex !== times.length ) {\n \n\t\t\t this.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n \n\t\t } else {\n \n\t\t\t this.times = times;\n\t\t\t this.values = values;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t const times = AnimationUtils.arraySlice( this.times, 0 );\n\t\t const values = AnimationUtils.arraySlice( this.values, 0 );\n \n\t\t const TypedKeyframeTrack = this.constructor;\n\t\t const track = new TypedKeyframeTrack( this.name, times, values );\n \n\t\t // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\t track.createInterpolant = this.createInterpolant;\n \n\t\t return track;\n \n\t }\n \n }\n \n KeyframeTrack.prototype.TimeBufferType = Float32Array;\n KeyframeTrack.prototype.ValueBufferType = Float32Array;\n KeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n \n /**\n  * A Track of Boolean keyframe values.\n  */\n class BooleanKeyframeTrack extends KeyframeTrack {}\n \n BooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n BooleanKeyframeTrack.prototype.ValueBufferType = Array;\n BooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n \n /**\n  * A Track of keyframe values that represent color.\n  */\n class ColorKeyframeTrack extends KeyframeTrack {}\n \n ColorKeyframeTrack.prototype.ValueTypeName = 'color';\n \n /**\n  * A Track of numeric keyframe values.\n  */\n class NumberKeyframeTrack extends KeyframeTrack {}\n \n NumberKeyframeTrack.prototype.ValueTypeName = 'number';\n \n /**\n  * Spherical linear unit quaternion interpolant.\n  */\n \n class QuaternionLinearInterpolant extends Interpolant {\n \n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n \n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\n \n\t }\n \n\t interpolate_( i1, t0, t, t1 ) {\n \n\t\t const result = this.resultBuffer,\n\t\t\t values = this.sampleValues,\n\t\t\t stride = this.valueSize,\n \n\t\t\t alpha = ( t - t0 ) / ( t1 - t0 );\n \n\t\t let offset = i1 * stride;\n \n\t\t for ( let end = offset + stride; offset !== end; offset += 4 ) {\n \n\t\t\t Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n \n\t\t }\n \n\t\t return result;\n \n\t }\n \n }\n \n /**\n  * A Track of quaternion keyframe values.\n  */\n class QuaternionKeyframeTrack extends KeyframeTrack {\n \n\t InterpolantFactoryMethodLinear( result ) {\n \n\t\t return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n \n\t }\n \n }\n \n QuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n // ValueBufferType is inherited\n QuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n \n /**\n  * A Track that interpolates Strings\n  */\n class StringKeyframeTrack extends KeyframeTrack {}\n \n StringKeyframeTrack.prototype.ValueTypeName = 'string';\n StringKeyframeTrack.prototype.ValueBufferType = Array;\n StringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n \n /**\n  * A Track of vectored keyframe values.\n  */\n class VectorKeyframeTrack extends KeyframeTrack {}\n \n VectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n \n class AnimationClip {\n \n\t constructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n \n\t\t this.name = name;\n\t\t this.tracks = tracks;\n\t\t this.duration = duration;\n\t\t this.blendMode = blendMode;\n \n\t\t this.uuid = generateUUID();\n \n\t\t // this means it should figure out its duration by scanning the tracks\n\t\t if ( this.duration < 0 ) {\n \n\t\t\t this.resetDuration();\n \n\t\t }\n \n\t }\n \n \n\t static parse( json ) {\n \n\t\t const tracks = [],\n\t\t\t jsonTracks = json.tracks,\n\t\t\t frameTime = 1.0 / ( json.fps || 1.0 );\n \n\t\t for ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n \n\t\t\t tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n \n\t\t }\n \n\t\t const clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\t clip.uuid = json.uuid;\n \n\t\t return clip;\n \n\t }\n \n\t static toJSON( clip ) {\n \n\t\t const tracks = [],\n\t\t\t clipTracks = clip.tracks;\n \n\t\t const json = {\n \n\t\t\t 'name': clip.name,\n\t\t\t 'duration': clip.duration,\n\t\t\t 'tracks': tracks,\n\t\t\t 'uuid': clip.uuid,\n\t\t\t 'blendMode': clip.blendMode\n \n\t\t };\n \n\t\t for ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n \n\t\t\t tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n \n\t\t }\n \n\t\t return json;\n \n\t }\n \n\t static CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n \n\t\t const numMorphTargets = morphTargetSequence.length;\n\t\t const tracks = [];\n \n\t\t for ( let i = 0; i < numMorphTargets; i ++ ) {\n \n\t\t\t let times = [];\n\t\t\t let values = [];\n \n\t\t\t times.push(\n\t\t\t\t ( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t i,\n\t\t\t\t ( i + 1 ) % numMorphTargets );\n \n\t\t\t values.push( 0, 1, 0 );\n \n\t\t\t const order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t times = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t values = AnimationUtils.sortedArray( values, 1, order );\n \n\t\t\t // if there is a key at the first frame, duplicate it as the\n\t\t\t // last frame as well for perfect loop.\n\t\t\t if ( ! noLoop && times[ 0 ] === 0 ) {\n \n\t\t\t\t times.push( numMorphTargets );\n\t\t\t\t values.push( values[ 0 ] );\n \n\t\t\t }\n \n\t\t\t tracks.push(\n\t\t\t\t new NumberKeyframeTrack(\n\t\t\t\t\t '.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t times, values\n\t\t\t\t ).scale( 1.0 / fps ) );\n \n\t\t }\n \n\t\t return new this( name, - 1, tracks );\n \n\t }\n \n\t static findByName( objectOrClipArray, name ) {\n \n\t\t let clipArray = objectOrClipArray;\n \n\t\t if ( ! Array.isArray( objectOrClipArray ) ) {\n \n\t\t\t const o = objectOrClipArray;\n\t\t\t clipArray = o.geometry && o.geometry.animations || o.animations;\n \n\t\t }\n \n\t\t for ( let i = 0; i < clipArray.length; i ++ ) {\n \n\t\t\t if ( clipArray[ i ].name === name ) {\n \n\t\t\t\t return clipArray[ i ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t return null;\n \n\t }\n \n\t static CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n \n\t\t const animationToMorphTargets = {};\n \n\t\t // tested with https://regex101.com/ on trick sequences\n\t\t // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t const pattern = /^([\\w-]*?)([\\d]+)$/;\n \n\t\t // sort morph target names into animation groups based\n\t\t // patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t for ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n \n\t\t\t const morphTarget = morphTargets[ i ];\n\t\t\t const parts = morphTarget.name.match( pattern );\n \n\t\t\t if ( parts && parts.length > 1 ) {\n \n\t\t\t\t const name = parts[ 1 ];\n \n\t\t\t\t let animationMorphTargets = animationToMorphTargets[ name ];\n \n\t\t\t\t if ( ! animationMorphTargets ) {\n \n\t\t\t\t\t animationToMorphTargets[ name ] = animationMorphTargets = [];\n \n\t\t\t\t }\n \n\t\t\t\t animationMorphTargets.push( morphTarget );\n \n\t\t\t }\n \n\t\t }\n \n\t\t const clips = [];\n \n\t\t for ( const name in animationToMorphTargets ) {\n \n\t\t\t clips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n \n\t\t }\n \n\t\t return clips;\n \n\t }\n \n\t // parse the animation.hierarchy format\n\t static parseAnimation( animation, bones ) {\n \n\t\t if ( ! animation ) {\n \n\t\t\t console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t return null;\n \n\t\t }\n \n\t\t const addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n \n\t\t\t // only return track if there are actually keys.\n\t\t\t if ( animationKeys.length !== 0 ) {\n \n\t\t\t\t const times = [];\n\t\t\t\t const values = [];\n \n\t\t\t\t AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n \n\t\t\t\t // empty keys are filtered out, so check again\n\t\t\t\t if ( times.length !== 0 ) {\n \n\t\t\t\t\t destTracks.push( new trackType( trackName, times, values ) );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t };\n \n\t\t const tracks = [];\n \n\t\t const clipName = animation.name || 'default';\n\t\t const fps = animation.fps || 30;\n\t\t const blendMode = animation.blendMode;\n \n\t\t // automatic length determination in AnimationClip.\n\t\t let duration = animation.length || - 1;\n \n\t\t const hierarchyTracks = animation.hierarchy || [];\n \n\t\t for ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n \n\t\t\t const animationKeys = hierarchyTracks[ h ].keys;\n \n\t\t\t // skip empty tracks\n\t\t\t if ( ! animationKeys || animationKeys.length === 0 ) continue;\n \n\t\t\t // process morph targets\n\t\t\t if ( animationKeys[ 0 ].morphTargets ) {\n \n\t\t\t\t // figure out all morph targets used in this track\n\t\t\t\t const morphTargetNames = {};\n \n\t\t\t\t let k;\n \n\t\t\t\t for ( k = 0; k < animationKeys.length; k ++ ) {\n \n\t\t\t\t\t if ( animationKeys[ k ].morphTargets ) {\n \n\t\t\t\t\t\t for ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n \n\t\t\t\t\t\t\t morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t // create a track for each morph target with all zero\n\t\t\t\t // morphTargetInfluences except for the keys in which\n\t\t\t\t // the morphTarget is named.\n\t\t\t\t for ( const morphTargetName in morphTargetNames ) {\n \n\t\t\t\t\t const times = [];\n\t\t\t\t\t const values = [];\n \n\t\t\t\t\t for ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n \n\t\t\t\t\t\t const animationKey = animationKeys[ k ];\n \n\t\t\t\t\t\t times.push( animationKey.time );\n\t\t\t\t\t\t values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n \n\t\t\t\t }\n \n\t\t\t\t duration = morphTargetNames.length * ( fps || 1.0 );\n \n\t\t\t } else {\n \n\t\t\t\t // ...assume skeletal animation\n \n\t\t\t\t const boneName = '.bones[' + bones[ h ].name + ']';\n \n\t\t\t\t addNonemptyTrack(\n\t\t\t\t\t VectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t animationKeys, 'pos', tracks );\n \n\t\t\t\t addNonemptyTrack(\n\t\t\t\t\t QuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t animationKeys, 'rot', tracks );\n \n\t\t\t\t addNonemptyTrack(\n\t\t\t\t\t VectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t animationKeys, 'scl', tracks );\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( tracks.length === 0 ) {\n \n\t\t\t return null;\n \n\t\t }\n \n\t\t const clip = new this( clipName, duration, tracks, blendMode );\n \n\t\t return clip;\n \n\t }\n \n\t resetDuration() {\n \n\t\t const tracks = this.tracks;\n\t\t let duration = 0;\n \n\t\t for ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n \n\t\t\t const track = this.tracks[ i ];\n \n\t\t\t duration = Math.max( duration, track.times[ track.times.length - 1 ] );\n \n\t\t }\n \n\t\t this.duration = duration;\n \n\t\t return this;\n \n\t }\n \n\t trim() {\n \n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n\t\t\t this.tracks[ i ].trim( 0, this.duration );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t validate() {\n \n\t\t let valid = true;\n \n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n\t\t\t valid = valid && this.tracks[ i ].validate();\n \n\t\t }\n \n\t\t return valid;\n \n\t }\n \n\t optimize() {\n \n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n\t\t\t this.tracks[ i ].optimize();\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t const tracks = [];\n \n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\n \n\t\t\t tracks.push( this.tracks[ i ].clone() );\n \n\t\t }\n \n\t\t return new this.constructor( this.name, this.duration, tracks, this.blendMode );\n \n\t }\n \n\t toJSON() {\n \n\t\t return this.constructor.toJSON( this );\n \n\t }\n \n }\n \n function getTrackTypeForValueTypeName( typeName ) {\n \n\t switch ( typeName.toLowerCase() ) {\n \n\t\t case 'scalar':\n\t\t case 'double':\n\t\t case 'float':\n\t\t case 'number':\n\t\t case 'integer':\n \n\t\t\t return NumberKeyframeTrack;\n \n\t\t case 'vector':\n\t\t case 'vector2':\n\t\t case 'vector3':\n\t\t case 'vector4':\n \n\t\t\t return VectorKeyframeTrack;\n \n\t\t case 'color':\n \n\t\t\t return ColorKeyframeTrack;\n \n\t\t case 'quaternion':\n \n\t\t\t return QuaternionKeyframeTrack;\n \n\t\t case 'bool':\n\t\t case 'boolean':\n \n\t\t\t return BooleanKeyframeTrack;\n \n\t\t case 'string':\n \n\t\t\t return StringKeyframeTrack;\n \n\t }\n \n\t throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n \n }\n \n function parseKeyframeTrack( json ) {\n \n\t if ( json.type === undefined ) {\n \n\t\t throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n \n\t }\n \n\t const trackType = getTrackTypeForValueTypeName( json.type );\n \n\t if ( json.times === undefined ) {\n \n\t\t const times = [], values = [];\n \n\t\t AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n \n\t\t json.times = times;\n\t\t json.values = values;\n \n\t }\n \n\t // derived classes can define a static parse method\n\t if ( trackType.parse !== undefined ) {\n \n\t\t return trackType.parse( json );\n \n\t } else {\n \n\t\t // by default, we assume a constructor compatible with the base\n\t\t return new trackType( json.name, json.times, json.values, json.interpolation );\n \n\t }\n \n }\n \n const Cache = {\n \n\t enabled: false,\n \n\t files: {},\n \n\t add: function ( key, file ) {\n \n\t\t if ( this.enabled === false ) return;\n \n\t\t // console.log( 'THREE.Cache', 'Adding key:', key );\n \n\t\t this.files[ key ] = file;\n \n\t },\n \n\t get: function ( key ) {\n \n\t\t if ( this.enabled === false ) return;\n \n\t\t // console.log( 'THREE.Cache', 'Checking key:', key );\n \n\t\t return this.files[ key ];\n \n\t },\n \n\t remove: function ( key ) {\n \n\t\t delete this.files[ key ];\n \n\t },\n \n\t clear: function () {\n \n\t\t this.files = {};\n \n\t }\n \n };\n \n class LoadingManager {\n \n\t constructor( onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t let isLoading = false;\n\t\t let itemsLoaded = 0;\n\t\t let itemsTotal = 0;\n\t\t let urlModifier = undefined;\n\t\t const handlers = [];\n \n\t\t // Refer to #5689 for the reason why we don't set .onStart\n\t\t // in the constructor\n \n\t\t this.onStart = undefined;\n\t\t this.onLoad = onLoad;\n\t\t this.onProgress = onProgress;\n\t\t this.onError = onError;\n \n\t\t this.itemStart = function ( url ) {\n \n\t\t\t itemsTotal ++;\n \n\t\t\t if ( isLoading === false ) {\n \n\t\t\t\t if ( scope.onStart !== undefined ) {\n \n\t\t\t\t\t scope.onStart( url, itemsLoaded, itemsTotal );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t isLoading = true;\n \n\t\t };\n \n\t\t this.itemEnd = function ( url ) {\n \n\t\t\t itemsLoaded ++;\n \n\t\t\t if ( scope.onProgress !== undefined ) {\n \n\t\t\t\t scope.onProgress( url, itemsLoaded, itemsTotal );\n \n\t\t\t }\n \n\t\t\t if ( itemsLoaded === itemsTotal ) {\n \n\t\t\t\t isLoading = false;\n \n\t\t\t\t if ( scope.onLoad !== undefined ) {\n \n\t\t\t\t\t scope.onLoad();\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t };\n \n\t\t this.itemError = function ( url ) {\n \n\t\t\t if ( scope.onError !== undefined ) {\n \n\t\t\t\t scope.onError( url );\n \n\t\t\t }\n \n\t\t };\n \n\t\t this.resolveURL = function ( url ) {\n \n\t\t\t if ( urlModifier ) {\n \n\t\t\t\t return urlModifier( url );\n \n\t\t\t }\n \n\t\t\t return url;\n \n\t\t };\n \n\t\t this.setURLModifier = function ( transform ) {\n \n\t\t\t urlModifier = transform;\n \n\t\t\t return this;\n \n\t\t };\n \n\t\t this.addHandler = function ( regex, loader ) {\n \n\t\t\t handlers.push( regex, loader );\n \n\t\t\t return this;\n \n\t\t };\n \n\t\t this.removeHandler = function ( regex ) {\n \n\t\t\t const index = handlers.indexOf( regex );\n \n\t\t\t if ( index !== - 1 ) {\n \n\t\t\t\t handlers.splice( index, 2 );\n \n\t\t\t }\n \n\t\t\t return this;\n \n\t\t };\n \n\t\t this.getHandler = function ( file ) {\n \n\t\t\t for ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n \n\t\t\t\t const regex = handlers[ i ];\n\t\t\t\t const loader = handlers[ i + 1 ];\n \n\t\t\t\t if ( regex.global ) regex.lastIndex = 0; // see #17920\n \n\t\t\t\t if ( regex.test( file ) ) {\n \n\t\t\t\t\t return loader;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t return null;\n \n\t\t };\n \n\t }\n \n }\n \n const DefaultLoadingManager = new LoadingManager();\n \n class Loader {\n \n\t constructor( manager ) {\n \n\t\t this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n \n\t\t this.crossOrigin = 'anonymous';\n\t\t this.withCredentials = false;\n\t\t this.path = '';\n\t\t this.resourcePath = '';\n\t\t this.requestHeader = {};\n \n\t }\n \n\t load( /* url, onLoad, onProgress, onError */ ) {}\n \n\t loadAsync( url, onProgress ) {\n \n\t\t const scope = this;\n \n\t\t return new Promise( function ( resolve, reject ) {\n \n\t\t\t scope.load( url, resolve, onProgress, reject );\n \n\t\t } );\n \n\t }\n \n\t parse( /* data */ ) {}\n \n\t setCrossOrigin( crossOrigin ) {\n \n\t\t this.crossOrigin = crossOrigin;\n\t\t return this;\n \n\t }\n \n\t setWithCredentials( value ) {\n \n\t\t this.withCredentials = value;\n\t\t return this;\n \n\t }\n \n\t setPath( path ) {\n \n\t\t this.path = path;\n\t\t return this;\n \n\t }\n \n\t setResourcePath( resourcePath ) {\n \n\t\t this.resourcePath = resourcePath;\n\t\t return this;\n \n\t }\n \n\t setRequestHeader( requestHeader ) {\n \n\t\t this.requestHeader = requestHeader;\n\t\t return this;\n \n\t }\n \n }\n \n const loading = {};\n \n class FileLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t if ( url === undefined ) url = '';\n \n\t\t if ( this.path !== undefined ) url = this.path + url;\n \n\t\t url = this.manager.resolveURL( url );\n \n\t\t const scope = this;\n \n\t\t const cached = Cache.get( url );\n \n\t\t if ( cached !== undefined ) {\n \n\t\t\t scope.manager.itemStart( url );\n \n\t\t\t setTimeout( function () {\n \n\t\t\t\t if ( onLoad ) onLoad( cached );\n \n\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t }, 0 );\n \n\t\t\t return cached;\n \n\t\t }\n \n\t\t // Check if request is duplicate\n \n\t\t if ( loading[ url ] !== undefined ) {\n \n\t\t\t loading[ url ].push( {\n \n\t\t\t\t onLoad: onLoad,\n\t\t\t\t onProgress: onProgress,\n\t\t\t\t onError: onError\n \n\t\t\t } );\n \n\t\t\t return;\n \n\t\t }\n \n\t\t // Check for data: URI\n\t\t const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t const dataUriRegexResult = url.match( dataUriRegex );\n\t\t let request;\n \n\t\t // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t if ( dataUriRegexResult ) {\n \n\t\t\t const mimeType = dataUriRegexResult[ 1 ];\n\t\t\t const isBase64 = !! dataUriRegexResult[ 2 ];\n \n\t\t\t let data = dataUriRegexResult[ 3 ];\n\t\t\t data = decodeURIComponent( data );\n \n\t\t\t if ( isBase64 ) data = atob( data );\n \n\t\t\t try {\n \n\t\t\t\t let response;\n\t\t\t\t const responseType = ( this.responseType || '' ).toLowerCase();\n \n\t\t\t\t switch ( responseType ) {\n \n\t\t\t\t\t case 'arraybuffer':\n\t\t\t\t\t case 'blob':\n \n\t\t\t\t\t\t const view = new Uint8Array( data.length );\n \n\t\t\t\t\t\t for ( let i = 0; i < data.length; i ++ ) {\n \n\t\t\t\t\t\t\t view[ i ] = data.charCodeAt( i );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t if ( responseType === 'blob' ) {\n \n\t\t\t\t\t\t\t response = new Blob( [ view.buffer ], { type: mimeType } );\n \n\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t response = view.buffer;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'document':\n \n\t\t\t\t\t\t const parser = new DOMParser();\n\t\t\t\t\t\t response = parser.parseFromString( data, mimeType );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'json':\n \n\t\t\t\t\t\t response = JSON.parse( data );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t default: // 'text' or other\n \n\t\t\t\t\t\t response = data;\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t }\n \n\t\t\t\t // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t setTimeout( function () {\n \n\t\t\t\t\t if ( onLoad ) onLoad( response );\n \n\t\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t\t }, 0 );\n \n\t\t\t } catch ( error ) {\n \n\t\t\t\t // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t setTimeout( function () {\n \n\t\t\t\t\t if ( onError ) onError( error );\n \n\t\t\t\t\t scope.manager.itemError( url );\n\t\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t\t }, 0 );\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t // Initialise array for duplicate requests\n \n\t\t\t loading[ url ] = [];\n \n\t\t\t loading[ url ].push( {\n \n\t\t\t\t onLoad: onLoad,\n\t\t\t\t onProgress: onProgress,\n\t\t\t\t onError: onError\n \n\t\t\t } );\n \n\t\t\t request = new XMLHttpRequest();\n \n\t\t\t request.open( 'GET', url, true );\n \n\t\t\t request.addEventListener( 'load', function ( event ) {\n \n\t\t\t\t const response = this.response;\n \n\t\t\t\t const callbacks = loading[ url ];\n \n\t\t\t\t delete loading[ url ];\n \n\t\t\t\t if ( this.status === 200 || this.status === 0 ) {\n \n\t\t\t\t\t // Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t // e.g. 'file://' or 'data://'. Handle as success.\n \n\t\t\t\t\t if ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n \n\t\t\t\t\t // Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t // error response bodies as proper responses to requests.\n\t\t\t\t\t Cache.add( url, response );\n \n\t\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t const callback = callbacks[ i ];\n\t\t\t\t\t\t if ( callback.onLoad ) callback.onLoad( response );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n\t\t\t\t\t\t const callback = callbacks[ i ];\n\t\t\t\t\t\t if ( callback.onError ) callback.onError( event );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t scope.manager.itemError( url );\n\t\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t\t }\n \n\t\t\t }, false );\n \n\t\t\t request.addEventListener( 'progress', function ( event ) {\n \n\t\t\t\t const callbacks = loading[ url ];\n \n\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n\t\t\t\t\t const callback = callbacks[ i ];\n\t\t\t\t\t if ( callback.onProgress ) callback.onProgress( event );\n \n\t\t\t\t }\n \n\t\t\t }, false );\n \n\t\t\t request.addEventListener( 'error', function ( event ) {\n \n\t\t\t\t const callbacks = loading[ url ];\n \n\t\t\t\t delete loading[ url ];\n \n\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n\t\t\t\t\t const callback = callbacks[ i ];\n\t\t\t\t\t if ( callback.onError ) callback.onError( event );\n \n\t\t\t\t }\n \n\t\t\t\t scope.manager.itemError( url );\n\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t }, false );\n \n\t\t\t request.addEventListener( 'abort', function ( event ) {\n \n\t\t\t\t const callbacks = loading[ url ];\n \n\t\t\t\t delete loading[ url ];\n \n\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n \n\t\t\t\t\t const callback = callbacks[ i ];\n\t\t\t\t\t if ( callback.onError ) callback.onError( event );\n \n\t\t\t\t }\n \n\t\t\t\t scope.manager.itemError( url );\n\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t }, false );\n \n\t\t\t if ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\t if ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n \n\t\t\t if ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n \n\t\t\t for ( const header in this.requestHeader ) {\n \n\t\t\t\t request.setRequestHeader( header, this.requestHeader[ header ] );\n \n\t\t\t }\n \n\t\t\t request.send( null );\n \n\t\t }\n \n\t\t scope.manager.itemStart( url );\n \n\t\t return request;\n \n\t }\n \n\t setResponseType( value ) {\n \n\t\t this.responseType = value;\n\t\t return this;\n \n\t }\n \n\t setMimeType( value ) {\n \n\t\t this.mimeType = value;\n\t\t return this;\n \n\t }\n \n }\n \n class AnimationLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const loader = new FileLoader( this.manager );\n\t\t loader.setPath( this.path );\n\t\t loader.setRequestHeader( this.requestHeader );\n\t\t loader.setWithCredentials( this.withCredentials );\n\t\t loader.load( url, function ( text ) {\n \n\t\t\t try {\n \n\t\t\t\t onLoad( scope.parse( JSON.parse( text ) ) );\n \n\t\t\t } catch ( e ) {\n \n\t\t\t\t if ( onError ) {\n \n\t\t\t\t\t onError( e );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.error( e );\n \n\t\t\t\t }\n \n\t\t\t\t scope.manager.itemError( url );\n \n\t\t\t }\n \n\t\t }, onProgress, onError );\n \n\t }\n \n\t parse( json ) {\n \n\t\t const animations = [];\n \n\t\t for ( let i = 0; i < json.length; i ++ ) {\n \n\t\t\t const clip = AnimationClip.parse( json[ i ] );\n \n\t\t\t animations.push( clip );\n \n\t\t }\n \n\t\t return animations;\n \n\t }\n \n }\n \n /**\n  * Abstract Base class to block based textures loader (dds, pvr, ...)\n  *\n  * Sub classes have to implement the parse() method which will be used in load().\n  */\n \n class CompressedTextureLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const images = [];\n \n\t\t const texture = new CompressedTexture();\n \n\t\t const loader = new FileLoader( this.manager );\n\t\t loader.setPath( this.path );\n\t\t loader.setResponseType( 'arraybuffer' );\n\t\t loader.setRequestHeader( this.requestHeader );\n\t\t loader.setWithCredentials( scope.withCredentials );\n \n\t\t let loaded = 0;\n \n\t\t function loadTexture( i ) {\n \n\t\t\t loader.load( url[ i ], function ( buffer ) {\n \n\t\t\t\t const texDatas = scope.parse( buffer, true );\n \n\t\t\t\t images[ i ] = {\n\t\t\t\t\t width: texDatas.width,\n\t\t\t\t\t height: texDatas.height,\n\t\t\t\t\t format: texDatas.format,\n\t\t\t\t\t mipmaps: texDatas.mipmaps\n\t\t\t\t };\n \n\t\t\t\t loaded += 1;\n \n\t\t\t\t if ( loaded === 6 ) {\n \n\t\t\t\t\t if ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n \n\t\t\t\t\t texture.image = images;\n\t\t\t\t\t texture.format = texDatas.format;\n\t\t\t\t\t texture.needsUpdate = true;\n \n\t\t\t\t\t if ( onLoad ) onLoad( texture );\n \n\t\t\t\t }\n \n\t\t\t }, onProgress, onError );\n \n\t\t }\n \n\t\t if ( Array.isArray( url ) ) {\n \n\t\t\t for ( let i = 0, il = url.length; i < il; ++ i ) {\n \n\t\t\t\t loadTexture( i );\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t // compressed cubemap texture stored in a single DDS file\n \n\t\t\t loader.load( url, function ( buffer ) {\n \n\t\t\t\t const texDatas = scope.parse( buffer, true );\n \n\t\t\t\t if ( texDatas.isCubemap ) {\n \n\t\t\t\t\t const faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n \n\t\t\t\t\t for ( let f = 0; f < faces; f ++ ) {\n \n\t\t\t\t\t\t images[ f ] = { mipmaps: [] };\n \n\t\t\t\t\t\t for ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n \n\t\t\t\t\t\t\t images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t images[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t images[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t images[ f ].height = texDatas.height;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t\t texture.image = images;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t texture.image.width = texDatas.width;\n\t\t\t\t\t texture.image.height = texDatas.height;\n\t\t\t\t\t texture.mipmaps = texDatas.mipmaps;\n \n\t\t\t\t }\n \n\t\t\t\t if ( texDatas.mipmapCount === 1 ) {\n \n\t\t\t\t\t texture.minFilter = LinearFilter;\n \n\t\t\t\t }\n \n\t\t\t\t texture.format = texDatas.format;\n\t\t\t\t texture.needsUpdate = true;\n \n\t\t\t\t if ( onLoad ) onLoad( texture );\n \n\t\t\t }, onProgress, onError );\n \n\t\t }\n \n\t\t return texture;\n \n\t }\n \n }\n \n class ImageLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t if ( this.path !== undefined ) url = this.path + url;\n \n\t\t url = this.manager.resolveURL( url );\n \n\t\t const scope = this;\n \n\t\t const cached = Cache.get( url );\n \n\t\t if ( cached !== undefined ) {\n \n\t\t\t scope.manager.itemStart( url );\n \n\t\t\t setTimeout( function () {\n \n\t\t\t\t if ( onLoad ) onLoad( cached );\n \n\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t }, 0 );\n \n\t\t\t return cached;\n \n\t\t }\n \n\t\t const image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n \n\t\t function onImageLoad() {\n \n\t\t\t image.removeEventListener( 'load', onImageLoad, false );\n\t\t\t image.removeEventListener( 'error', onImageError, false );\n \n\t\t\t Cache.add( url, this );\n \n\t\t\t if ( onLoad ) onLoad( this );\n \n\t\t\t scope.manager.itemEnd( url );\n \n\t\t }\n \n\t\t function onImageError( event ) {\n \n\t\t\t image.removeEventListener( 'load', onImageLoad, false );\n\t\t\t image.removeEventListener( 'error', onImageError, false );\n \n\t\t\t if ( onError ) onError( event );\n \n\t\t\t scope.manager.itemError( url );\n\t\t\t scope.manager.itemEnd( url );\n \n\t\t }\n \n\t\t image.addEventListener( 'load', onImageLoad, false );\n\t\t image.addEventListener( 'error', onImageError, false );\n \n\t\t if ( url.substr( 0, 5 ) !== 'data:' ) {\n \n\t\t\t if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n \n\t\t }\n \n\t\t scope.manager.itemStart( url );\n \n\t\t image.src = url;\n \n\t\t return image;\n \n\t }\n \n }\n \n class CubeTextureLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( urls, onLoad, onProgress, onError ) {\n \n\t\t const texture = new CubeTexture();\n \n\t\t const loader = new ImageLoader( this.manager );\n\t\t loader.setCrossOrigin( this.crossOrigin );\n\t\t loader.setPath( this.path );\n \n\t\t let loaded = 0;\n \n\t\t function loadTexture( i ) {\n \n\t\t\t loader.load( urls[ i ], function ( image ) {\n \n\t\t\t\t texture.images[ i ] = image;\n \n\t\t\t\t loaded ++;\n \n\t\t\t\t if ( loaded === 6 ) {\n \n\t\t\t\t\t texture.needsUpdate = true;\n \n\t\t\t\t\t if ( onLoad ) onLoad( texture );\n \n\t\t\t\t }\n \n\t\t\t }, undefined, onError );\n \n\t\t }\n \n\t\t for ( let i = 0; i < urls.length; ++ i ) {\n \n\t\t\t loadTexture( i );\n \n\t\t }\n \n\t\t return texture;\n \n\t }\n \n }\n \n /**\n  * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n  *\n  * Sub classes have to implement the parse() method which will be used in load().\n  */\n \n class DataTextureLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const texture = new DataTexture();\n \n\t\t const loader = new FileLoader( this.manager );\n\t\t loader.setResponseType( 'arraybuffer' );\n\t\t loader.setRequestHeader( this.requestHeader );\n\t\t loader.setPath( this.path );\n\t\t loader.setWithCredentials( scope.withCredentials );\n\t\t loader.load( url, function ( buffer ) {\n \n\t\t\t const texData = scope.parse( buffer );\n \n\t\t\t if ( ! texData ) return;\n \n\t\t\t if ( texData.image !== undefined ) {\n \n\t\t\t\t texture.image = texData.image;\n \n\t\t\t } else if ( texData.data !== undefined ) {\n \n\t\t\t\t texture.image.width = texData.width;\n\t\t\t\t texture.image.height = texData.height;\n\t\t\t\t texture.image.data = texData.data;\n \n\t\t\t }\n \n\t\t\t texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n \n\t\t\t texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n \n\t\t\t texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n \n\t\t\t if ( texData.encoding !== undefined ) {\n \n\t\t\t\t texture.encoding = texData.encoding;\n \n\t\t\t }\n \n\t\t\t if ( texData.flipY !== undefined ) {\n \n\t\t\t\t texture.flipY = texData.flipY;\n \n\t\t\t }\n \n\t\t\t if ( texData.format !== undefined ) {\n \n\t\t\t\t texture.format = texData.format;\n \n\t\t\t }\n \n\t\t\t if ( texData.type !== undefined ) {\n \n\t\t\t\t texture.type = texData.type;\n \n\t\t\t }\n \n\t\t\t if ( texData.mipmaps !== undefined ) {\n \n\t\t\t\t texture.mipmaps = texData.mipmaps;\n\t\t\t\t texture.minFilter = LinearMipmapLinearFilter; // presumably...\n \n\t\t\t }\n \n\t\t\t if ( texData.mipmapCount === 1 ) {\n \n\t\t\t\t texture.minFilter = LinearFilter;\n \n\t\t\t }\n \n\t\t\t if ( texData.generateMipmaps !== undefined ) {\n \n\t\t\t\t texture.generateMipmaps = texData.generateMipmaps;\n \n\t\t\t }\n \n\t\t\t texture.needsUpdate = true;\n \n\t\t\t if ( onLoad ) onLoad( texture, texData );\n \n\t\t }, onProgress, onError );\n \n \n\t\t return texture;\n \n\t }\n \n }\n \n class TextureLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const texture = new Texture();\n \n\t\t const loader = new ImageLoader( this.manager );\n\t\t loader.setCrossOrigin( this.crossOrigin );\n\t\t loader.setPath( this.path );\n \n\t\t loader.load( url, function ( image ) {\n \n\t\t\t texture.image = image;\n \n\t\t\t // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t const isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n \n\t\t\t texture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t texture.needsUpdate = true;\n \n\t\t\t if ( onLoad !== undefined ) {\n \n\t\t\t\t onLoad( texture );\n \n\t\t\t }\n \n\t\t }, onProgress, onError );\n \n\t\t return texture;\n \n\t }\n \n }\n \n /**\n  * Extensible curve object.\n  *\n  * Some common of curve methods:\n  * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n  * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n  * .getPoints(), .getSpacedPoints()\n  * .getLength()\n  * .updateArcLengths()\n  *\n  * This following curves inherit from THREE.Curve:\n  *\n  * -- 2D curves --\n  * THREE.ArcCurve\n  * THREE.CubicBezierCurve\n  * THREE.EllipseCurve\n  * THREE.LineCurve\n  * THREE.QuadraticBezierCurve\n  * THREE.SplineCurve\n  *\n  * -- 3D curves --\n  * THREE.CatmullRomCurve3\n  * THREE.CubicBezierCurve3\n  * THREE.LineCurve3\n  * THREE.QuadraticBezierCurve3\n  *\n  * A series of curves can be represented as a THREE.CurvePath.\n  *\n  **/\n \n class Curve {\n \n\t constructor() {\n \n\t\t this.type = 'Curve';\n \n\t\t this.arcLengthDivisions = 200;\n \n\t }\n \n\t // Virtual base class method to overwrite and implement in subclasses\n\t //\t- t [0 .. 1]\n \n\t getPoint( /* t, optionalTarget */ ) {\n \n\t\t console.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t return null;\n \n\t }\n \n\t // Get point at relative position in curve according to arc length\n\t // - u [0 .. 1]\n \n\t getPointAt( u, optionalTarget ) {\n \n\t\t const t = this.getUtoTmapping( u );\n\t\t return this.getPoint( t, optionalTarget );\n \n\t }\n \n\t // Get sequence of points using getPoint( t )\n \n\t getPoints( divisions = 5 ) {\n \n\t\t const points = [];\n \n\t\t for ( let d = 0; d <= divisions; d ++ ) {\n \n\t\t\t points.push( this.getPoint( d / divisions ) );\n \n\t\t }\n \n\t\t return points;\n \n\t }\n \n\t // Get sequence of points using getPointAt( u )\n \n\t getSpacedPoints( divisions = 5 ) {\n \n\t\t const points = [];\n \n\t\t for ( let d = 0; d <= divisions; d ++ ) {\n \n\t\t\t points.push( this.getPointAt( d / divisions ) );\n \n\t\t }\n \n\t\t return points;\n \n\t }\n \n\t // Get total curve arc length\n \n\t getLength() {\n \n\t\t const lengths = this.getLengths();\n\t\t return lengths[ lengths.length - 1 ];\n \n\t }\n \n\t // Get list of cumulative segment lengths\n \n\t getLengths( divisions = this.arcLengthDivisions ) {\n \n\t\t if ( this.cacheArcLengths &&\n\t\t\t ( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t ! this.needsUpdate ) {\n \n\t\t\t return this.cacheArcLengths;\n \n\t\t }\n \n\t\t this.needsUpdate = false;\n \n\t\t const cache = [];\n\t\t let current, last = this.getPoint( 0 );\n\t\t let sum = 0;\n \n\t\t cache.push( 0 );\n \n\t\t for ( let p = 1; p <= divisions; p ++ ) {\n \n\t\t\t current = this.getPoint( p / divisions );\n\t\t\t sum += current.distanceTo( last );\n\t\t\t cache.push( sum );\n\t\t\t last = current;\n \n\t\t }\n \n\t\t this.cacheArcLengths = cache;\n \n\t\t return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n \n\t }\n \n\t updateArcLengths() {\n \n\t\t this.needsUpdate = true;\n\t\t this.getLengths();\n \n\t }\n \n\t // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n \n\t getUtoTmapping( u, distance ) {\n \n\t\t const arcLengths = this.getLengths();\n \n\t\t let i = 0;\n\t\t const il = arcLengths.length;\n \n\t\t let targetArcLength; // The targeted u distance value to get\n \n\t\t if ( distance ) {\n \n\t\t\t targetArcLength = distance;\n \n\t\t } else {\n \n\t\t\t targetArcLength = u * arcLengths[ il - 1 ];\n \n\t\t }\n \n\t\t // binary search for the index with largest value smaller than target u distance\n \n\t\t let low = 0, high = il - 1, comparison;\n \n\t\t while ( low <= high ) {\n \n\t\t\t i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n \n\t\t\t comparison = arcLengths[ i ] - targetArcLength;\n \n\t\t\t if ( comparison < 0 ) {\n \n\t\t\t\t low = i + 1;\n \n\t\t\t } else if ( comparison > 0 ) {\n \n\t\t\t\t high = i - 1;\n \n\t\t\t } else {\n \n\t\t\t\t high = i;\n\t\t\t\t break;\n \n\t\t\t\t // DONE\n \n\t\t\t }\n \n\t\t }\n \n\t\t i = high;\n \n\t\t if ( arcLengths[ i ] === targetArcLength ) {\n \n\t\t\t return i / ( il - 1 );\n \n\t\t }\n \n\t\t // we could get finer grain at lengths, or use simple interpolation between two points\n \n\t\t const lengthBefore = arcLengths[ i ];\n\t\t const lengthAfter = arcLengths[ i + 1 ];\n \n\t\t const segmentLength = lengthAfter - lengthBefore;\n \n\t\t // determine where we are between the 'before' and 'after' points\n \n\t\t const segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n \n\t\t // add that fractional amount to t\n \n\t\t const t = ( i + segmentFraction ) / ( il - 1 );\n \n\t\t return t;\n \n\t }\n \n\t // Returns a unit vector tangent at t\n\t // In case any sub curve does not implement its tangent derivation,\n\t // 2 points a small delta apart will be used to find its gradient\n\t // which seems to give a reasonable approximation\n \n\t getTangent( t, optionalTarget ) {\n \n\t\t const delta = 0.0001;\n\t\t let t1 = t - delta;\n\t\t let t2 = t + delta;\n \n\t\t // Capping in case of danger\n \n\t\t if ( t1 < 0 ) t1 = 0;\n\t\t if ( t2 > 1 ) t2 = 1;\n \n\t\t const pt1 = this.getPoint( t1 );\n\t\t const pt2 = this.getPoint( t2 );\n \n\t\t const tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n \n\t\t tangent.copy( pt2 ).sub( pt1 ).normalize();\n \n\t\t return tangent;\n \n\t }\n \n\t getTangentAt( u, optionalTarget ) {\n \n\t\t const t = this.getUtoTmapping( u );\n\t\t return this.getTangent( t, optionalTarget );\n \n\t }\n \n\t computeFrenetFrames( segments, closed ) {\n \n\t\t // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n \n\t\t const normal = new Vector3();\n \n\t\t const tangents = [];\n\t\t const normals = [];\n\t\t const binormals = [];\n \n\t\t const vec = new Vector3();\n\t\t const mat = new Matrix4();\n \n\t\t // compute the tangent vectors for each segment on the curve\n \n\t\t for ( let i = 0; i <= segments; i ++ ) {\n \n\t\t\t const u = i / segments;\n \n\t\t\t tangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\t tangents[ i ].normalize();\n \n\t\t }\n \n\t\t // select an initial normal vector perpendicular to the first tangent vector,\n\t\t // and in the direction of the minimum tangent xyz component\n \n\t\t normals[ 0 ] = new Vector3();\n\t\t binormals[ 0 ] = new Vector3();\n\t\t let min = Number.MAX_VALUE;\n\t\t const tx = Math.abs( tangents[ 0 ].x );\n\t\t const ty = Math.abs( tangents[ 0 ].y );\n\t\t const tz = Math.abs( tangents[ 0 ].z );\n \n\t\t if ( tx <= min ) {\n \n\t\t\t min = tx;\n\t\t\t normal.set( 1, 0, 0 );\n \n\t\t }\n \n\t\t if ( ty <= min ) {\n \n\t\t\t min = ty;\n\t\t\t normal.set( 0, 1, 0 );\n \n\t\t }\n \n\t\t if ( tz <= min ) {\n \n\t\t\t normal.set( 0, 0, 1 );\n \n\t\t }\n \n\t\t vec.crossVectors( tangents[ 0 ], normal ).normalize();\n \n\t\t normals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n \n \n\t\t // compute the slowly-varying normal and binormal vectors for each segment on the curve\n \n\t\t for ( let i = 1; i <= segments; i ++ ) {\n \n\t\t\t normals[ i ] = normals[ i - 1 ].clone();\n \n\t\t\t binormals[ i ] = binormals[ i - 1 ].clone();\n \n\t\t\t vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n \n\t\t\t if ( vec.length() > Number.EPSILON ) {\n \n\t\t\t\t vec.normalize();\n \n\t\t\t\t const theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n \n\t\t\t\t normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n \n\t\t\t }\n \n\t\t\t binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n \n\t\t }\n \n\t\t // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n \n\t\t if ( closed === true ) {\n \n\t\t\t let theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t theta /= segments;\n \n\t\t\t if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n \n\t\t\t\t theta = - theta;\n \n\t\t\t }\n \n\t\t\t for ( let i = 1; i <= segments; i ++ ) {\n \n\t\t\t\t // twist a little...\n\t\t\t\t normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n \n\t\t\t }\n \n\t\t }\n \n\t\t return {\n\t\t\t tangents: tangents,\n\t\t\t normals: normals,\n\t\t\t binormals: binormals\n\t\t };\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.arcLengthDivisions = source.arcLengthDivisions;\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = {\n\t\t\t metadata: {\n\t\t\t\t version: 4.5,\n\t\t\t\t type: 'Curve',\n\t\t\t\t generator: 'Curve.toJSON'\n\t\t\t }\n\t\t };\n \n\t\t data.arcLengthDivisions = this.arcLengthDivisions;\n\t\t data.type = this.type;\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t this.arcLengthDivisions = json.arcLengthDivisions;\n \n\t\t return this;\n \n\t }\n \n }\n \n class EllipseCurve extends Curve {\n \n\t constructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n \n\t\t super();\n \n\t\t this.type = 'EllipseCurve';\n \n\t\t this.aX = aX;\n\t\t this.aY = aY;\n \n\t\t this.xRadius = xRadius;\n\t\t this.yRadius = yRadius;\n \n\t\t this.aStartAngle = aStartAngle;\n\t\t this.aEndAngle = aEndAngle;\n \n\t\t this.aClockwise = aClockwise;\n \n\t\t this.aRotation = aRotation;\n \n\t }\n \n\t getPoint( t, optionalTarget ) {\n \n\t\t const point = optionalTarget || new Vector2();\n \n\t\t const twoPi = Math.PI * 2;\n\t\t let deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t const samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n \n\t\t // ensures that deltaAngle is 0 .. 2 PI\n\t\t while ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\t while ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n \n\t\t if ( deltaAngle < Number.EPSILON ) {\n \n\t\t\t if ( samePoints ) {\n \n\t\t\t\t deltaAngle = 0;\n \n\t\t\t } else {\n \n\t\t\t\t deltaAngle = twoPi;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( this.aClockwise === true && ! samePoints ) {\n \n\t\t\t if ( deltaAngle === twoPi ) {\n \n\t\t\t\t deltaAngle = - twoPi;\n \n\t\t\t } else {\n \n\t\t\t\t deltaAngle = deltaAngle - twoPi;\n \n\t\t\t }\n \n\t\t }\n \n\t\t const angle = this.aStartAngle + t * deltaAngle;\n\t\t let x = this.aX + this.xRadius * Math.cos( angle );\n\t\t let y = this.aY + this.yRadius * Math.sin( angle );\n \n\t\t if ( this.aRotation !== 0 ) {\n \n\t\t\t const cos = Math.cos( this.aRotation );\n\t\t\t const sin = Math.sin( this.aRotation );\n \n\t\t\t const tx = x - this.aX;\n\t\t\t const ty = y - this.aY;\n \n\t\t\t // Rotate the point about the center of the ellipse.\n\t\t\t x = tx * cos - ty * sin + this.aX;\n\t\t\t y = tx * sin + ty * cos + this.aY;\n \n\t\t }\n \n\t\t return point.set( x, y );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.aX = source.aX;\n\t\t this.aY = source.aY;\n \n\t\t this.xRadius = source.xRadius;\n\t\t this.yRadius = source.yRadius;\n \n\t\t this.aStartAngle = source.aStartAngle;\n\t\t this.aEndAngle = source.aEndAngle;\n \n\t\t this.aClockwise = source.aClockwise;\n \n\t\t this.aRotation = source.aRotation;\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.aX = this.aX;\n\t\t data.aY = this.aY;\n \n\t\t data.xRadius = this.xRadius;\n\t\t data.yRadius = this.yRadius;\n \n\t\t data.aStartAngle = this.aStartAngle;\n\t\t data.aEndAngle = this.aEndAngle;\n \n\t\t data.aClockwise = this.aClockwise;\n \n\t\t data.aRotation = this.aRotation;\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.aX = json.aX;\n\t\t this.aY = json.aY;\n \n\t\t this.xRadius = json.xRadius;\n\t\t this.yRadius = json.yRadius;\n \n\t\t this.aStartAngle = json.aStartAngle;\n\t\t this.aEndAngle = json.aEndAngle;\n \n\t\t this.aClockwise = json.aClockwise;\n \n\t\t this.aRotation = json.aRotation;\n \n\t\t return this;\n \n\t }\n \n }\n \n EllipseCurve.prototype.isEllipseCurve = true;\n \n class ArcCurve extends EllipseCurve {\n \n\t constructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n \n\t\t super( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n \n\t\t this.type = 'ArcCurve';\n \n\t }\n \n }\n \n ArcCurve.prototype.isArcCurve = true;\n \n /**\n  * Centripetal CatmullRom Curve - which is useful for avoiding\n  * cusps and self-intersections in non-uniform catmull rom curves.\n  * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n  *\n  * curve.type accepts centripetal(default), chordal and catmullrom\n  * curve.tension is used for catmullrom which defaults to 0.5\n  */\n \n \n /*\n Based on an optimized c++ solution in\n  - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n  - http://ideone.com/NoEbVM\n \n This CubicPoly class could be used for reusing some variables and calculations,\n but for three.js curve use, it could be possible inlined and flatten into a single function call\n which can be placed in CurveUtils.\n */\n \n function CubicPoly() {\n \n\t let c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n \n\t /*\n\t  * Compute coefficients for a cubic polynomial\n\t  *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t  * such that\n\t  *   p(0) = x0, p(1) = x1\n\t  *  and\n\t  *   p'(0) = t0, p'(1) = t1.\n\t  */\n\t function init( x0, x1, t0, t1 ) {\n \n\t\t c0 = x0;\n\t\t c1 = t0;\n\t\t c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t c3 = 2 * x0 - 2 * x1 + t0 + t1;\n \n\t }\n \n\t return {\n \n\t\t initCatmullRom: function ( x0, x1, x2, x3, tension ) {\n \n\t\t\t init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n \n\t\t },\n \n\t\t initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n \n\t\t\t // compute tangents when parameterized in [t1,t2]\n\t\t\t let t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t let t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n \n\t\t\t // rescale tangents for parametrization in [0,1]\n\t\t\t t1 *= dt1;\n\t\t\t t2 *= dt1;\n \n\t\t\t init( x1, x2, t1, t2 );\n \n\t\t },\n \n\t\t calc: function ( t ) {\n \n\t\t\t const t2 = t * t;\n\t\t\t const t3 = t2 * t;\n\t\t\t return c0 + c1 * t + c2 * t2 + c3 * t3;\n \n\t\t }\n \n\t };\n \n }\n \n //\n \n const tmp = new Vector3();\n const px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n \n class CatmullRomCurve3 extends Curve {\n \n\t constructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n \n\t\t super();\n \n\t\t this.type = 'CatmullRomCurve3';\n \n\t\t this.points = points;\n\t\t this.closed = closed;\n\t\t this.curveType = curveType;\n\t\t this.tension = tension;\n \n\t }\n \n\t getPoint( t, optionalTarget = new Vector3() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t const points = this.points;\n\t\t const l = points.length;\n \n\t\t const p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\t let intPoint = Math.floor( p );\n\t\t let weight = p - intPoint;\n \n\t\t if ( this.closed ) {\n \n\t\t\t intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n \n\t\t } else if ( weight === 0 && intPoint === l - 1 ) {\n \n\t\t\t intPoint = l - 2;\n\t\t\t weight = 1;\n \n\t\t }\n \n\t\t let p0, p3; // 4 points (p1 & p2 defined below)\n \n\t\t if ( this.closed || intPoint > 0 ) {\n \n\t\t\t p0 = points[ ( intPoint - 1 ) % l ];\n \n\t\t } else {\n \n\t\t\t // extrapolate first point\n\t\t\t tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\t p0 = tmp;\n \n\t\t }\n \n\t\t const p1 = points[ intPoint % l ];\n\t\t const p2 = points[ ( intPoint + 1 ) % l ];\n \n\t\t if ( this.closed || intPoint + 2 < l ) {\n \n\t\t\t p3 = points[ ( intPoint + 2 ) % l ];\n \n\t\t } else {\n \n\t\t\t // extrapolate last point\n\t\t\t tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\t p3 = tmp;\n \n\t\t }\n \n\t\t if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n \n\t\t\t // init Centripetal / Chordal Catmull-Rom\n\t\t\t const pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t let dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\t let dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\t let dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n \n\t\t\t // safety check for repeated points\n\t\t\t if ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\t if ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\t if ( dt2 < 1e-4 ) dt2 = dt1;\n \n\t\t\t px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\t py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\t pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n \n\t\t } else if ( this.curveType === 'catmullrom' ) {\n \n\t\t\t px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\t py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\t pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n \n\t\t }\n \n\t\t point.set(\n\t\t\t px.calc( weight ),\n\t\t\t py.calc( weight ),\n\t\t\t pz.calc( weight )\n\t\t );\n \n\t\t return point;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.points = [];\n \n\t\t for ( let i = 0, l = source.points.length; i < l; i ++ ) {\n \n\t\t\t const point = source.points[ i ];\n \n\t\t\t this.points.push( point.clone() );\n \n\t\t }\n \n\t\t this.closed = source.closed;\n\t\t this.curveType = source.curveType;\n\t\t this.tension = source.tension;\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.points = [];\n \n\t\t for ( let i = 0, l = this.points.length; i < l; i ++ ) {\n \n\t\t\t const point = this.points[ i ];\n\t\t\t data.points.push( point.toArray() );\n \n\t\t }\n \n\t\t data.closed = this.closed;\n\t\t data.curveType = this.curveType;\n\t\t data.tension = this.tension;\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.points = [];\n \n\t\t for ( let i = 0, l = json.points.length; i < l; i ++ ) {\n \n\t\t\t const point = json.points[ i ];\n\t\t\t this.points.push( new Vector3().fromArray( point ) );\n \n\t\t }\n \n\t\t this.closed = json.closed;\n\t\t this.curveType = json.curveType;\n\t\t this.tension = json.tension;\n \n\t\t return this;\n \n\t }\n \n }\n \n CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n \n /**\n  * Bezier Curves formulas obtained from\n  * http://en.wikipedia.org/wiki/Bézier_curve\n  */\n \n function CatmullRom( t, p0, p1, p2, p3 ) {\n \n\t const v0 = ( p2 - p0 ) * 0.5;\n\t const v1 = ( p3 - p1 ) * 0.5;\n\t const t2 = t * t;\n\t const t3 = t * t2;\n\t return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n \n }\n \n //\n \n function QuadraticBezierP0( t, p ) {\n \n\t const k = 1 - t;\n\t return k * k * p;\n \n }\n \n function QuadraticBezierP1( t, p ) {\n \n\t return 2 * ( 1 - t ) * t * p;\n \n }\n \n function QuadraticBezierP2( t, p ) {\n \n\t return t * t * p;\n \n }\n \n function QuadraticBezier( t, p0, p1, p2 ) {\n \n\t return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t QuadraticBezierP2( t, p2 );\n \n }\n \n //\n \n function CubicBezierP0( t, p ) {\n \n\t const k = 1 - t;\n\t return k * k * k * p;\n \n }\n \n function CubicBezierP1( t, p ) {\n \n\t const k = 1 - t;\n\t return 3 * k * k * t * p;\n \n }\n \n function CubicBezierP2( t, p ) {\n \n\t return 3 * ( 1 - t ) * t * t * p;\n \n }\n \n function CubicBezierP3( t, p ) {\n \n\t return t * t * t * p;\n \n }\n \n function CubicBezier( t, p0, p1, p2, p3 ) {\n \n\t return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t CubicBezierP3( t, p3 );\n \n }\n \n class CubicBezierCurve extends Curve {\n \n\t constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n \n\t\t super();\n \n\t\t this.type = 'CubicBezierCurve';\n \n\t\t this.v0 = v0;\n\t\t this.v1 = v1;\n\t\t this.v2 = v2;\n\t\t this.v3 = v3;\n \n\t }\n \n\t getPoint( t, optionalTarget = new Vector2() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n \n\t\t point.set(\n\t\t\t CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\t CubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t );\n \n\t\t return point;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.v0.copy( source.v0 );\n\t\t this.v1.copy( source.v1 );\n\t\t this.v2.copy( source.v2 );\n\t\t this.v3.copy( source.v3 );\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.v0 = this.v0.toArray();\n\t\t data.v1 = this.v1.toArray();\n\t\t data.v2 = this.v2.toArray();\n\t\t data.v3 = this.v3.toArray();\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.v0.fromArray( json.v0 );\n\t\t this.v1.fromArray( json.v1 );\n\t\t this.v2.fromArray( json.v2 );\n\t\t this.v3.fromArray( json.v3 );\n \n\t\t return this;\n \n\t }\n \n }\n \n CubicBezierCurve.prototype.isCubicBezierCurve = true;\n \n class CubicBezierCurve3 extends Curve {\n \n\t constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n \n\t\t super();\n \n\t\t this.type = 'CubicBezierCurve3';\n \n\t\t this.v0 = v0;\n\t\t this.v1 = v1;\n\t\t this.v2 = v2;\n\t\t this.v3 = v3;\n \n\t }\n \n\t getPoint( t, optionalTarget = new Vector3() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n \n\t\t point.set(\n\t\t\t CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\t CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\t CubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t );\n \n\t\t return point;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.v0.copy( source.v0 );\n\t\t this.v1.copy( source.v1 );\n\t\t this.v2.copy( source.v2 );\n\t\t this.v3.copy( source.v3 );\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.v0 = this.v0.toArray();\n\t\t data.v1 = this.v1.toArray();\n\t\t data.v2 = this.v2.toArray();\n\t\t data.v3 = this.v3.toArray();\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.v0.fromArray( json.v0 );\n\t\t this.v1.fromArray( json.v1 );\n\t\t this.v2.fromArray( json.v2 );\n\t\t this.v3.fromArray( json.v3 );\n \n\t\t return this;\n \n\t }\n \n }\n \n CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n \n class LineCurve extends Curve {\n \n\t constructor( v1 = new Vector2(), v2 = new Vector2() ) {\n \n\t\t super();\n \n\t\t this.type = 'LineCurve';\n \n\t\t this.v1 = v1;\n\t\t this.v2 = v2;\n \n\t }\n \n\t getPoint( t, optionalTarget = new Vector2() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t if ( t === 1 ) {\n \n\t\t\t point.copy( this.v2 );\n \n\t\t } else {\n \n\t\t\t point.copy( this.v2 ).sub( this.v1 );\n\t\t\t point.multiplyScalar( t ).add( this.v1 );\n \n\t\t }\n \n\t\t return point;\n \n\t }\n \n\t // Line curve is linear, so we can overwrite default getPointAt\n\t getPointAt( u, optionalTarget ) {\n \n\t\t return this.getPoint( u, optionalTarget );\n \n\t }\n \n\t getTangent( t, optionalTarget ) {\n \n\t\t const tangent = optionalTarget || new Vector2();\n \n\t\t tangent.copy( this.v2 ).sub( this.v1 ).normalize();\n \n\t\t return tangent;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.v1.copy( source.v1 );\n\t\t this.v2.copy( source.v2 );\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.v1 = this.v1.toArray();\n\t\t data.v2 = this.v2.toArray();\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.v1.fromArray( json.v1 );\n\t\t this.v2.fromArray( json.v2 );\n \n\t\t return this;\n \n\t }\n \n }\n \n LineCurve.prototype.isLineCurve = true;\n \n class LineCurve3 extends Curve {\n \n\t constructor( v1 = new Vector3(), v2 = new Vector3() ) {\n \n\t\t super();\n \n\t\t this.type = 'LineCurve3';\n\t\t this.isLineCurve3 = true;\n \n\t\t this.v1 = v1;\n\t\t this.v2 = v2;\n \n\t }\n\t getPoint( t, optionalTarget = new Vector3() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t if ( t === 1 ) {\n \n\t\t\t point.copy( this.v2 );\n \n\t\t } else {\n \n\t\t\t point.copy( this.v2 ).sub( this.v1 );\n\t\t\t point.multiplyScalar( t ).add( this.v1 );\n \n\t\t }\n \n\t\t return point;\n \n\t }\n\t // Line curve is linear, so we can overwrite default getPointAt\n\t getPointAt( u, optionalTarget ) {\n \n\t\t return this.getPoint( u, optionalTarget );\n \n\t }\n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.v1.copy( source.v1 );\n\t\t this.v2.copy( source.v2 );\n \n\t\t return this;\n \n\t }\n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.v1 = this.v1.toArray();\n\t\t data.v2 = this.v2.toArray();\n \n\t\t return data;\n \n\t }\n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.v1.fromArray( json.v1 );\n\t\t this.v2.fromArray( json.v2 );\n \n\t\t return this;\n \n\t }\n \n }\n \n class QuadraticBezierCurve extends Curve {\n \n\t constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n \n\t\t super();\n \n\t\t this.type = 'QuadraticBezierCurve';\n \n\t\t this.v0 = v0;\n\t\t this.v1 = v1;\n\t\t this.v2 = v2;\n \n\t }\n \n\t getPoint( t, optionalTarget = new Vector2() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2;\n \n\t\t point.set(\n\t\t\t QuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\t QuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t );\n \n\t\t return point;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.v0.copy( source.v0 );\n\t\t this.v1.copy( source.v1 );\n\t\t this.v2.copy( source.v2 );\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.v0 = this.v0.toArray();\n\t\t data.v1 = this.v1.toArray();\n\t\t data.v2 = this.v2.toArray();\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.v0.fromArray( json.v0 );\n\t\t this.v1.fromArray( json.v1 );\n\t\t this.v2.fromArray( json.v2 );\n \n\t\t return this;\n \n\t }\n \n }\n \n QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n \n class QuadraticBezierCurve3 extends Curve {\n \n\t constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n \n\t\t super();\n \n\t\t this.type = 'QuadraticBezierCurve3';\n \n\t\t this.v0 = v0;\n\t\t this.v1 = v1;\n\t\t this.v2 = v2;\n \n\t }\n \n\t getPoint( t, optionalTarget = new Vector3() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2;\n \n\t\t point.set(\n\t\t\t QuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\t QuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\t QuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t );\n \n\t\t return point;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.v0.copy( source.v0 );\n\t\t this.v1.copy( source.v1 );\n\t\t this.v2.copy( source.v2 );\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.v0 = this.v0.toArray();\n\t\t data.v1 = this.v1.toArray();\n\t\t data.v2 = this.v2.toArray();\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.v0.fromArray( json.v0 );\n\t\t this.v1.fromArray( json.v1 );\n\t\t this.v2.fromArray( json.v2 );\n \n\t\t return this;\n \n\t }\n \n }\n \n QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n \n class SplineCurve extends Curve {\n \n\t constructor( points = [] ) {\n \n\t\t super();\n \n\t\t this.type = 'SplineCurve';\n \n\t\t this.points = points;\n \n\t }\n \n\t getPoint( t, optionalTarget = new Vector2() ) {\n \n\t\t const point = optionalTarget;\n \n\t\t const points = this.points;\n\t\t const p = ( points.length - 1 ) * t;\n \n\t\t const intPoint = Math.floor( p );\n\t\t const weight = p - intPoint;\n \n\t\t const p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\t const p1 = points[ intPoint ];\n\t\t const p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\t const p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n \n\t\t point.set(\n\t\t\t CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\t CatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t );\n \n\t\t return point;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.points = [];\n \n\t\t for ( let i = 0, l = source.points.length; i < l; i ++ ) {\n \n\t\t\t const point = source.points[ i ];\n \n\t\t\t this.points.push( point.clone() );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.points = [];\n \n\t\t for ( let i = 0, l = this.points.length; i < l; i ++ ) {\n \n\t\t\t const point = this.points[ i ];\n\t\t\t data.points.push( point.toArray() );\n \n\t\t }\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.points = [];\n \n\t\t for ( let i = 0, l = json.points.length; i < l; i ++ ) {\n \n\t\t\t const point = json.points[ i ];\n\t\t\t this.points.push( new Vector2().fromArray( point ) );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n }\n \n SplineCurve.prototype.isSplineCurve = true;\n \n var Curves = /*#__PURE__*/Object.freeze({\n\t __proto__: null,\n\t ArcCurve: ArcCurve,\n\t CatmullRomCurve3: CatmullRomCurve3,\n\t CubicBezierCurve: CubicBezierCurve,\n\t CubicBezierCurve3: CubicBezierCurve3,\n\t EllipseCurve: EllipseCurve,\n\t LineCurve: LineCurve,\n\t LineCurve3: LineCurve3,\n\t QuadraticBezierCurve: QuadraticBezierCurve,\n\t QuadraticBezierCurve3: QuadraticBezierCurve3,\n\t SplineCurve: SplineCurve\n });\n \n /**************************************************************\n  *\tCurved Path - a curve path is simply a array of connected\n  *  curves, but retains the api of a curve\n  **************************************************************/\n \n class CurvePath extends Curve {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this.type = 'CurvePath';\n \n\t\t this.curves = [];\n\t\t this.autoClose = false; // Automatically closes the path\n \n\t }\n \n\t add( curve ) {\n \n\t\t this.curves.push( curve );\n \n\t }\n \n\t closePath() {\n \n\t\t // Add a line curve if start and end of lines are not connected\n\t\t const startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t const endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n \n\t\t if ( ! startPoint.equals( endPoint ) ) {\n \n\t\t\t this.curves.push( new LineCurve( endPoint, startPoint ) );\n \n\t\t }\n \n\t }\n \n\t // To get accurate point with reference to\n\t // entire path distance at time t,\n\t // following has to be done:\n \n\t // 1. Length of each sub path have to be known\n\t // 2. Locate and identify type of curve\n\t // 3. Get t for the curve\n\t // 4. Return curve.getPointAt(t')\n \n\t getPoint( t ) {\n \n\t\t const d = t * this.getLength();\n\t\t const curveLengths = this.getCurveLengths();\n\t\t let i = 0;\n \n\t\t // To think about boundaries points.\n \n\t\t while ( i < curveLengths.length ) {\n \n\t\t\t if ( curveLengths[ i ] >= d ) {\n \n\t\t\t\t const diff = curveLengths[ i ] - d;\n\t\t\t\t const curve = this.curves[ i ];\n \n\t\t\t\t const segmentLength = curve.getLength();\n\t\t\t\t const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n \n\t\t\t\t return curve.getPointAt( u );\n \n\t\t\t }\n \n\t\t\t i ++;\n \n\t\t }\n \n\t\t return null;\n \n\t\t // loop where sum != 0, sum > d , sum+1 <d\n \n\t }\n \n\t // We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t // getPoint() depends on getLength\n \n\t getLength() {\n \n\t\t const lens = this.getCurveLengths();\n\t\t return lens[ lens.length - 1 ];\n \n\t }\n \n\t // cacheLengths must be recalculated.\n\t updateArcLengths() {\n \n\t\t this.needsUpdate = true;\n\t\t this.cacheLengths = null;\n\t\t this.getCurveLengths();\n \n\t }\n \n\t // Compute lengths and cache them\n\t // We cannot overwrite getLengths() because UtoT mapping uses it.\n \n\t getCurveLengths() {\n \n\t\t // We use cache values if curves and cache array are same length\n \n\t\t if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n \n\t\t\t return this.cacheLengths;\n \n\t\t }\n \n\t\t // Get length of sub-curve\n\t\t // Push sums into cached array\n \n\t\t const lengths = [];\n\t\t let sums = 0;\n \n\t\t for ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n \n\t\t\t sums += this.curves[ i ].getLength();\n\t\t\t lengths.push( sums );\n \n\t\t }\n \n\t\t this.cacheLengths = lengths;\n \n\t\t return lengths;\n \n\t }\n \n\t getSpacedPoints( divisions = 40 ) {\n \n\t\t const points = [];\n \n\t\t for ( let i = 0; i <= divisions; i ++ ) {\n \n\t\t\t points.push( this.getPoint( i / divisions ) );\n \n\t\t }\n \n\t\t if ( this.autoClose ) {\n \n\t\t\t points.push( points[ 0 ] );\n \n\t\t }\n \n\t\t return points;\n \n\t }\n \n\t getPoints( divisions = 12 ) {\n \n\t\t const points = [];\n\t\t let last;\n \n\t\t for ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n \n\t\t\t const curve = curves[ i ];\n\t\t\t const resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t : ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t : ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t : divisions;\n \n\t\t\t const pts = curve.getPoints( resolution );\n \n\t\t\t for ( let j = 0; j < pts.length; j ++ ) {\n \n\t\t\t\t const point = pts[ j ];\n \n\t\t\t\t if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n \n\t\t\t\t points.push( point );\n\t\t\t\t last = point;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n \n\t\t\t points.push( points[ 0 ] );\n \n\t\t }\n \n\t\t return points;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.curves = [];\n \n\t\t for ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n \n\t\t\t const curve = source.curves[ i ];\n \n\t\t\t this.curves.push( curve.clone() );\n \n\t\t }\n \n\t\t this.autoClose = source.autoClose;\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.autoClose = this.autoClose;\n\t\t data.curves = [];\n \n\t\t for ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n \n\t\t\t const curve = this.curves[ i ];\n\t\t\t data.curves.push( curve.toJSON() );\n \n\t\t }\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.autoClose = json.autoClose;\n\t\t this.curves = [];\n \n\t\t for ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n \n\t\t\t const curve = json.curves[ i ];\n\t\t\t this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n }\n \n class Path extends CurvePath {\n \n\t constructor( points ) {\n \n\t\t super();\n\t\t this.type = 'Path';\n \n\t\t this.currentPoint = new Vector2();\n \n\t\t if ( points ) {\n \n\t\t\t this.setFromPoints( points );\n \n\t\t }\n \n\t }\n \n\t setFromPoints( points ) {\n \n\t\t this.moveTo( points[ 0 ].x, points[ 0 ].y );\n \n\t\t for ( let i = 1, l = points.length; i < l; i ++ ) {\n \n\t\t\t this.lineTo( points[ i ].x, points[ i ].y );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t moveTo( x, y ) {\n \n\t\t this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n \n\t\t return this;\n \n\t }\n \n\t lineTo( x, y ) {\n \n\t\t const curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t this.curves.push( curve );\n \n\t\t this.currentPoint.set( x, y );\n \n\t\t return this;\n \n\t }\n \n\t quadraticCurveTo( aCPx, aCPy, aX, aY ) {\n \n\t\t const curve = new QuadraticBezierCurve(\n\t\t\t this.currentPoint.clone(),\n\t\t\t new Vector2( aCPx, aCPy ),\n\t\t\t new Vector2( aX, aY )\n\t\t );\n \n\t\t this.curves.push( curve );\n \n\t\t this.currentPoint.set( aX, aY );\n \n\t\t return this;\n \n\t }\n \n\t bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n \n\t\t const curve = new CubicBezierCurve(\n\t\t\t this.currentPoint.clone(),\n\t\t\t new Vector2( aCP1x, aCP1y ),\n\t\t\t new Vector2( aCP2x, aCP2y ),\n\t\t\t new Vector2( aX, aY )\n\t\t );\n \n\t\t this.curves.push( curve );\n \n\t\t this.currentPoint.set( aX, aY );\n \n\t\t return this;\n \n\t }\n \n\t splineThru( pts /*Array of Vector*/ ) {\n \n\t\t const npts = [ this.currentPoint.clone() ].concat( pts );\n \n\t\t const curve = new SplineCurve( npts );\n\t\t this.curves.push( curve );\n \n\t\t this.currentPoint.copy( pts[ pts.length - 1 ] );\n \n\t\t return this;\n \n\t }\n \n\t arc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n \n\t\t const x0 = this.currentPoint.x;\n\t\t const y0 = this.currentPoint.y;\n \n\t\t this.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t aStartAngle, aEndAngle, aClockwise );\n \n\t\t return this;\n \n\t }\n \n\t absarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n \n\t\t this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n \n\t\t return this;\n \n\t }\n \n\t ellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n \n\t\t const x0 = this.currentPoint.x;\n\t\t const y0 = this.currentPoint.y;\n \n\t\t this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n \n\t\t return this;\n \n\t }\n \n\t absellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n \n\t\t const curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n \n\t\t if ( this.curves.length > 0 ) {\n \n\t\t\t // if a previous curve is present, attempt to join\n\t\t\t const firstPoint = curve.getPoint( 0 );\n \n\t\t\t if ( ! firstPoint.equals( this.currentPoint ) ) {\n \n\t\t\t\t this.lineTo( firstPoint.x, firstPoint.y );\n \n\t\t\t }\n \n\t\t }\n \n\t\t this.curves.push( curve );\n \n\t\t const lastPoint = curve.getPoint( 1 );\n\t\t this.currentPoint.copy( lastPoint );\n \n\t\t return this;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.currentPoint.copy( source.currentPoint );\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.currentPoint = this.currentPoint.toArray();\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.currentPoint.fromArray( json.currentPoint );\n \n\t\t return this;\n \n\t }\n \n }\n \n class Shape extends Path {\n \n\t constructor( points ) {\n \n\t\t super( points );\n \n\t\t this.uuid = generateUUID();\n \n\t\t this.type = 'Shape';\n \n\t\t this.holes = [];\n \n\t }\n \n\t getPointsHoles( divisions ) {\n \n\t\t const holesPts = [];\n \n\t\t for ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n \n\t\t\t holesPts[ i ] = this.holes[ i ].getPoints( divisions );\n \n\t\t }\n \n\t\t return holesPts;\n \n\t }\n \n\t // get points of shape and holes (keypoints based on segments parameter)\n \n\t extractPoints( divisions ) {\n \n\t\t return {\n \n\t\t\t shape: this.getPoints( divisions ),\n\t\t\t holes: this.getPointsHoles( divisions )\n \n\t\t };\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.holes = [];\n \n\t\t for ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n \n\t\t\t const hole = source.holes[ i ];\n \n\t\t\t this.holes.push( hole.clone() );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.uuid = this.uuid;\n\t\t data.holes = [];\n \n\t\t for ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n \n\t\t\t const hole = this.holes[ i ];\n\t\t\t data.holes.push( hole.toJSON() );\n \n\t\t }\n \n\t\t return data;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t super.fromJSON( json );\n \n\t\t this.uuid = json.uuid;\n\t\t this.holes = [];\n \n\t\t for ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n \n\t\t\t const hole = json.holes[ i ];\n\t\t\t this.holes.push( new Path().fromJSON( hole ) );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n }\n \n class Light extends Object3D {\n \n\t constructor( color, intensity = 1 ) {\n \n\t\t super();\n \n\t\t this.type = 'Light';\n \n\t\t this.color = new Color( color );\n\t\t this.intensity = intensity;\n \n\t }\n \n\t dispose() {\n \n\t\t // Empty here in base class; some subclasses override.\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.color.copy( source.color );\n\t\t this.intensity = source.intensity;\n \n\t\t return this;\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t data.object.color = this.color.getHex();\n\t\t data.object.intensity = this.intensity;\n \n\t\t if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n \n\t\t if ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\t if ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\t if ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\t if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n \n\t\t if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n \n\t\t return data;\n \n\t }\n \n }\n \n Light.prototype.isLight = true;\n \n class HemisphereLight extends Light {\n \n\t constructor( skyColor, groundColor, intensity ) {\n \n\t\t super( skyColor, intensity );\n \n\t\t this.type = 'HemisphereLight';\n \n\t\t this.position.copy( Object3D.DefaultUp );\n\t\t this.updateMatrix();\n \n\t\t this.groundColor = new Color( groundColor );\n \n\t }\n \n\t copy( source ) {\n \n\t\t Light.prototype.copy.call( this, source );\n \n\t\t this.groundColor.copy( source.groundColor );\n \n\t\t return this;\n \n\t }\n \n }\n \n HemisphereLight.prototype.isHemisphereLight = true;\n \n const _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\n const _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\n const _lookTarget$1 = /*@__PURE__*/ new Vector3();\n \n class LightShadow {\n \n\t constructor( camera ) {\n \n\t\t this.camera = camera;\n \n\t\t this.bias = 0;\n\t\t this.normalBias = 0;\n\t\t this.radius = 1;\n \n\t\t this.mapSize = new Vector2( 512, 512 );\n \n\t\t this.map = null;\n\t\t this.mapPass = null;\n\t\t this.matrix = new Matrix4();\n \n\t\t this.autoUpdate = true;\n\t\t this.needsUpdate = false;\n \n\t\t this._frustum = new Frustum();\n\t\t this._frameExtents = new Vector2( 1, 1 );\n \n\t\t this._viewportCount = 1;\n \n\t\t this._viewports = [\n \n\t\t\t new Vector4( 0, 0, 1, 1 )\n \n\t\t ];\n \n\t }\n \n\t getViewportCount() {\n \n\t\t return this._viewportCount;\n \n\t }\n \n\t getFrustum() {\n \n\t\t return this._frustum;\n \n\t }\n \n\t updateMatrices( light ) {\n \n\t\t const shadowCamera = this.camera;\n\t\t const shadowMatrix = this.matrix;\n \n\t\t _lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\t shadowCamera.position.copy( _lightPositionWorld$1 );\n \n\t\t _lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\t shadowCamera.lookAt( _lookTarget$1 );\n\t\t shadowCamera.updateMatrixWorld();\n \n\t\t _projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t this._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n \n\t\t shadowMatrix.set(\n\t\t\t 0.5, 0.0, 0.0, 0.5,\n\t\t\t 0.0, 0.5, 0.0, 0.5,\n\t\t\t 0.0, 0.0, 0.5, 0.5,\n\t\t\t 0.0, 0.0, 0.0, 1.0\n\t\t );\n \n\t\t shadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t shadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n \n\t }\n \n\t getViewport( viewportIndex ) {\n \n\t\t return this._viewports[ viewportIndex ];\n \n\t }\n \n\t getFrameExtents() {\n \n\t\t return this._frameExtents;\n \n\t }\n \n\t dispose() {\n \n\t\t if ( this.map ) {\n \n\t\t\t this.map.dispose();\n \n\t\t }\n \n\t\t if ( this.mapPass ) {\n \n\t\t\t this.mapPass.dispose();\n \n\t\t }\n \n\t }\n \n\t copy( source ) {\n \n\t\t this.camera = source.camera.clone();\n \n\t\t this.bias = source.bias;\n\t\t this.radius = source.radius;\n \n\t\t this.mapSize.copy( source.mapSize );\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t toJSON() {\n \n\t\t const object = {};\n \n\t\t if ( this.bias !== 0 ) object.bias = this.bias;\n\t\t if ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\t if ( this.radius !== 1 ) object.radius = this.radius;\n\t\t if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n \n\t\t object.camera = this.camera.toJSON( false ).object;\n\t\t delete object.camera.matrix;\n \n\t\t return object;\n \n\t }\n \n }\n \n class SpotLightShadow extends LightShadow {\n \n\t constructor() {\n \n\t\t super( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n \n\t\t this.focus = 1;\n \n\t }\n \n\t updateMatrices( light ) {\n \n\t\t const camera = this.camera;\n \n\t\t const fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t const aspect = this.mapSize.width / this.mapSize.height;\n\t\t const far = light.distance || camera.far;\n \n\t\t if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n \n\t\t\t camera.fov = fov;\n\t\t\t camera.aspect = aspect;\n\t\t\t camera.far = far;\n\t\t\t camera.updateProjectionMatrix();\n \n\t\t }\n \n\t\t super.updateMatrices( light );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.focus = source.focus;\n \n\t\t return this;\n \n\t }\n \n }\n \n SpotLightShadow.prototype.isSpotLightShadow = true;\n \n class SpotLight extends Light {\n \n\t constructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n \n\t\t super( color, intensity );\n \n\t\t this.type = 'SpotLight';\n \n\t\t this.position.copy( Object3D.DefaultUp );\n\t\t this.updateMatrix();\n \n\t\t this.target = new Object3D();\n \n\t\t this.distance = distance;\n\t\t this.angle = angle;\n\t\t this.penumbra = penumbra;\n\t\t this.decay = decay; // for physically correct lights, should be 2.\n \n\t\t this.shadow = new SpotLightShadow();\n \n\t }\n \n\t get power() {\n \n\t\t // intensity = power per solid angle.\n\t\t // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t return this.intensity * Math.PI;\n \n\t }\n \n\t set power( power ) {\n \n\t\t // intensity = power per solid angle.\n\t\t // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t this.intensity = power / Math.PI;\n \n\t }\n \n\t dispose() {\n \n\t\t this.shadow.dispose();\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.distance = source.distance;\n\t\t this.angle = source.angle;\n\t\t this.penumbra = source.penumbra;\n\t\t this.decay = source.decay;\n \n\t\t this.target = source.target.clone();\n \n\t\t this.shadow = source.shadow.clone();\n \n\t\t return this;\n \n\t }\n \n }\n \n SpotLight.prototype.isSpotLight = true;\n \n const _projScreenMatrix = /*@__PURE__*/ new Matrix4();\n const _lightPositionWorld = /*@__PURE__*/ new Vector3();\n const _lookTarget = /*@__PURE__*/ new Vector3();\n \n class PointLightShadow extends LightShadow {\n \n\t constructor() {\n \n\t\t super( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n \n\t\t this._frameExtents = new Vector2( 4, 2 );\n \n\t\t this._viewportCount = 6;\n \n\t\t this._viewports = [\n\t\t\t // These viewports map a cube-map onto a 2D texture with the\n\t\t\t // following orientation:\n\t\t\t //\n\t\t\t //  xzXZ\n\t\t\t //   y Y\n\t\t\t //\n\t\t\t // X - Positive x direction\n\t\t\t // x - Negative x direction\n\t\t\t // Y - Positive y direction\n\t\t\t // y - Negative y direction\n\t\t\t // Z - Positive z direction\n\t\t\t // z - Negative z direction\n \n\t\t\t // positive X\n\t\t\t new Vector4( 2, 1, 1, 1 ),\n\t\t\t // negative X\n\t\t\t new Vector4( 0, 1, 1, 1 ),\n\t\t\t // positive Z\n\t\t\t new Vector4( 3, 1, 1, 1 ),\n\t\t\t // negative Z\n\t\t\t new Vector4( 1, 1, 1, 1 ),\n\t\t\t // positive Y\n\t\t\t new Vector4( 3, 0, 1, 1 ),\n\t\t\t // negative Y\n\t\t\t new Vector4( 1, 0, 1, 1 )\n\t\t ];\n \n\t\t this._cubeDirections = [\n\t\t\t new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\t new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t ];\n \n\t\t this._cubeUps = [\n\t\t\t new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\t new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t ];\n \n\t }\n \n\t updateMatrices( light, viewportIndex = 0 ) {\n \n\t\t const camera = this.camera;\n\t\t const shadowMatrix = this.matrix;\n \n\t\t const far = light.distance || camera.far;\n \n\t\t if ( far !== camera.far ) {\n \n\t\t\t camera.far = far;\n\t\t\t camera.updateProjectionMatrix();\n \n\t\t }\n \n\t\t _lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t camera.position.copy( _lightPositionWorld );\n \n\t\t _lookTarget.copy( camera.position );\n\t\t _lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\t camera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\t camera.lookAt( _lookTarget );\n\t\t camera.updateMatrixWorld();\n \n\t\t shadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n \n\t\t _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t this._frustum.setFromProjectionMatrix( _projScreenMatrix );\n \n\t }\n \n }\n \n PointLightShadow.prototype.isPointLightShadow = true;\n \n class PointLight extends Light {\n \n\t constructor( color, intensity, distance = 0, decay = 1 ) {\n \n\t\t super( color, intensity );\n \n\t\t this.type = 'PointLight';\n \n\t\t this.distance = distance;\n\t\t this.decay = decay; // for physically correct lights, should be 2.\n \n\t\t this.shadow = new PointLightShadow();\n \n\t }\n \n\t get power() {\n \n\t\t // intensity = power per solid angle.\n\t\t // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t return this.intensity * 4 * Math.PI;\n \n\t }\n \n\t set power( power ) {\n \n\t\t // intensity = power per solid angle.\n\t\t // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t this.intensity = power / ( 4 * Math.PI );\n \n\t }\n \n\t dispose() {\n \n\t\t this.shadow.dispose();\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.distance = source.distance;\n\t\t this.decay = source.decay;\n \n\t\t this.shadow = source.shadow.clone();\n \n\t\t return this;\n \n\t }\n \n }\n \n PointLight.prototype.isPointLight = true;\n \n class OrthographicCamera extends Camera {\n \n\t constructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n \n\t\t super();\n \n\t\t this.type = 'OrthographicCamera';\n \n\t\t this.zoom = 1;\n\t\t this.view = null;\n \n\t\t this.left = left;\n\t\t this.right = right;\n\t\t this.top = top;\n\t\t this.bottom = bottom;\n \n\t\t this.near = near;\n\t\t this.far = far;\n \n\t\t this.updateProjectionMatrix();\n \n\t }\n \n\t copy( source, recursive ) {\n \n\t\t super.copy( source, recursive );\n \n\t\t this.left = source.left;\n\t\t this.right = source.right;\n\t\t this.top = source.top;\n\t\t this.bottom = source.bottom;\n\t\t this.near = source.near;\n\t\t this.far = source.far;\n \n\t\t this.zoom = source.zoom;\n\t\t this.view = source.view === null ? null : Object.assign( {}, source.view );\n \n\t\t return this;\n \n\t }\n \n\t setViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n \n\t\t if ( this.view === null ) {\n \n\t\t\t this.view = {\n\t\t\t\t enabled: true,\n\t\t\t\t fullWidth: 1,\n\t\t\t\t fullHeight: 1,\n\t\t\t\t offsetX: 0,\n\t\t\t\t offsetY: 0,\n\t\t\t\t width: 1,\n\t\t\t\t height: 1\n\t\t\t };\n \n\t\t }\n \n\t\t this.view.enabled = true;\n\t\t this.view.fullWidth = fullWidth;\n\t\t this.view.fullHeight = fullHeight;\n\t\t this.view.offsetX = x;\n\t\t this.view.offsetY = y;\n\t\t this.view.width = width;\n\t\t this.view.height = height;\n \n\t\t this.updateProjectionMatrix();\n \n\t }\n \n\t clearViewOffset() {\n \n\t\t if ( this.view !== null ) {\n \n\t\t\t this.view.enabled = false;\n \n\t\t }\n \n\t\t this.updateProjectionMatrix();\n \n\t }\n \n\t updateProjectionMatrix() {\n \n\t\t const dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t const dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t const cx = ( this.right + this.left ) / 2;\n\t\t const cy = ( this.top + this.bottom ) / 2;\n \n\t\t let left = cx - dx;\n\t\t let right = cx + dx;\n\t\t let top = cy + dy;\n\t\t let bottom = cy - dy;\n \n\t\t if ( this.view !== null && this.view.enabled ) {\n \n\t\t\t const scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\t const scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n \n\t\t\t left += scaleW * this.view.offsetX;\n\t\t\t right = left + scaleW * this.view.width;\n\t\t\t top -= scaleH * this.view.offsetY;\n\t\t\t bottom = top - scaleH * this.view.height;\n \n\t\t }\n \n\t\t this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n \n\t\t this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t data.object.zoom = this.zoom;\n\t\t data.object.left = this.left;\n\t\t data.object.right = this.right;\n\t\t data.object.top = this.top;\n\t\t data.object.bottom = this.bottom;\n\t\t data.object.near = this.near;\n\t\t data.object.far = this.far;\n \n\t\t if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n \n\t\t return data;\n \n\t }\n \n }\n \n OrthographicCamera.prototype.isOrthographicCamera = true;\n \n class DirectionalLightShadow extends LightShadow {\n \n\t constructor() {\n \n\t\t super( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n \n\t }\n \n }\n \n DirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n \n class DirectionalLight extends Light {\n \n\t constructor( color, intensity ) {\n \n\t\t super( color, intensity );\n \n\t\t this.type = 'DirectionalLight';\n \n\t\t this.position.copy( Object3D.DefaultUp );\n\t\t this.updateMatrix();\n \n\t\t this.target = new Object3D();\n \n\t\t this.shadow = new DirectionalLightShadow();\n \n\t }\n \n\t dispose() {\n \n\t\t this.shadow.dispose();\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.target = source.target.clone();\n\t\t this.shadow = source.shadow.clone();\n \n\t\t return this;\n \n\t }\n \n }\n \n DirectionalLight.prototype.isDirectionalLight = true;\n \n class AmbientLight extends Light {\n \n\t constructor( color, intensity ) {\n \n\t\t super( color, intensity );\n \n\t\t this.type = 'AmbientLight';\n \n\t }\n \n }\n \n AmbientLight.prototype.isAmbientLight = true;\n \n class RectAreaLight extends Light {\n \n\t constructor( color, intensity, width = 10, height = 10 ) {\n \n\t\t super( color, intensity );\n \n\t\t this.type = 'RectAreaLight';\n \n\t\t this.width = width;\n\t\t this.height = height;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.width = source.width;\n\t\t this.height = source.height;\n \n\t\t return this;\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t data.object.width = this.width;\n\t\t data.object.height = this.height;\n \n\t\t return data;\n \n\t }\n \n }\n \n RectAreaLight.prototype.isRectAreaLight = true;\n \n /**\n  * Primary reference:\n  *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n  *\n  * Secondary reference:\n  *   https://www.ppsloan.org/publications/StupidSH36.pdf\n  */\n \n // 3-band SH defined by 9 coefficients\n \n class SphericalHarmonics3 {\n \n\t constructor() {\n \n\t\t this.coefficients = [];\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.coefficients.push( new Vector3() );\n \n\t\t }\n \n\t }\n \n\t set( coefficients ) {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.coefficients[ i ].copy( coefficients[ i ] );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t zero() {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.coefficients[ i ].set( 0, 0, 0 );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // get the radiance in the direction of the normal\n\t // target is a Vector3\n\t getAt( normal, target ) {\n \n\t\t // normal is assumed to be unit length\n \n\t\t const x = normal.x, y = normal.y, z = normal.z;\n \n\t\t const coeff = this.coefficients;\n \n\t\t // band 0\n\t\t target.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n \n\t\t // band 1\n\t\t target.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\t target.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\t target.addScaledVector( coeff[ 3 ], 0.488603 * x );\n \n\t\t // band 2\n\t\t target.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\t target.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\t target.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\t target.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\t target.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n \n\t\t return target;\n \n\t }\n \n\t // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t // target is a Vector3\n\t // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t getIrradianceAt( normal, target ) {\n \n\t\t // normal is assumed to be unit length\n \n\t\t const x = normal.x, y = normal.y, z = normal.z;\n \n\t\t const coeff = this.coefficients;\n \n\t\t // band 0\n\t\t target.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n \n\t\t // band 1\n\t\t target.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\t target.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\t target.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n \n\t\t // band 2\n\t\t target.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\t target.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\t target.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\t target.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\t target.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n \n\t\t return target;\n \n\t }\n \n\t add( sh ) {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.coefficients[ i ].add( sh.coefficients[ i ] );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t addScaledSH( sh, s ) {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t scale( s ) {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.coefficients[ i ].multiplyScalar( s );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t lerp( sh, alpha ) {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t this.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t equals( sh ) {\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t if ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n \n\t\t\t\t return false;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return true;\n \n\t }\n \n\t copy( sh ) {\n \n\t\t return this.set( sh.coefficients );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t fromArray( array, offset = 0 ) {\n \n\t\t const coefficients = this.coefficients;\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t coefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t toArray( array = [], offset = 0 ) {\n \n\t\t const coefficients = this.coefficients;\n \n\t\t for ( let i = 0; i < 9; i ++ ) {\n \n\t\t\t coefficients[ i ].toArray( array, offset + ( i * 3 ) );\n \n\t\t }\n \n\t\t return array;\n \n\t }\n \n\t // evaluate the basis functions\n\t // shBasis is an Array[ 9 ]\n\t static getBasisAt( normal, shBasis ) {\n \n\t\t // normal is assumed to be unit length\n \n\t\t const x = normal.x, y = normal.y, z = normal.z;\n \n\t\t // band 0\n\t\t shBasis[ 0 ] = 0.282095;\n \n\t\t // band 1\n\t\t shBasis[ 1 ] = 0.488603 * y;\n\t\t shBasis[ 2 ] = 0.488603 * z;\n\t\t shBasis[ 3 ] = 0.488603 * x;\n \n\t\t // band 2\n\t\t shBasis[ 4 ] = 1.092548 * x * y;\n\t\t shBasis[ 5 ] = 1.092548 * y * z;\n\t\t shBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\t shBasis[ 7 ] = 1.092548 * x * z;\n\t\t shBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n \n\t }\n \n }\n \n SphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n \n class LightProbe extends Light {\n \n\t constructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n \n\t\t super( undefined, intensity );\n \n\t\t this.sh = sh;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.sh.copy( source.sh );\n \n\t\t return this;\n \n\t }\n \n\t fromJSON( json ) {\n \n\t\t this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\t this.sh.fromArray( json.sh );\n \n\t\t return this;\n \n\t }\n \n\t toJSON( meta ) {\n \n\t\t const data = super.toJSON( meta );\n \n\t\t data.object.sh = this.sh.toArray();\n \n\t\t return data;\n \n\t }\n \n }\n \n LightProbe.prototype.isLightProbe = true;\n \n class MaterialLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n\t\t this.textures = {};\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const loader = new FileLoader( scope.manager );\n\t\t loader.setPath( scope.path );\n\t\t loader.setRequestHeader( scope.requestHeader );\n\t\t loader.setWithCredentials( scope.withCredentials );\n\t\t loader.load( url, function ( text ) {\n \n\t\t\t try {\n \n\t\t\t\t onLoad( scope.parse( JSON.parse( text ) ) );\n \n\t\t\t } catch ( e ) {\n \n\t\t\t\t if ( onError ) {\n \n\t\t\t\t\t onError( e );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.error( e );\n \n\t\t\t\t }\n \n\t\t\t\t scope.manager.itemError( url );\n \n\t\t\t }\n \n\t\t }, onProgress, onError );\n \n\t }\n \n\t parse( json ) {\n \n\t\t const textures = this.textures;\n \n\t\t function getTexture( name ) {\n \n\t\t\t if ( textures[ name ] === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.MaterialLoader: Undefined texture', name );\n \n\t\t\t }\n \n\t\t\t return textures[ name ];\n \n\t\t }\n \n\t\t const material = new Materials[ json.type ]();\n \n\t\t if ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\t if ( json.name !== undefined ) material.name = json.name;\n\t\t if ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\t if ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\t if ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\t if ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\t if ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\t if ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\t if ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\t if ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\t if ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t if ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\t if ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\t if ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\t if ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\t if ( json.fog !== undefined ) material.fog = json.fog;\n\t\t if ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\t if ( json.blending !== undefined ) material.blending = json.blending;\n\t\t if ( json.combine !== undefined ) material.combine = json.combine;\n\t\t if ( json.side !== undefined ) material.side = json.side;\n\t\t if ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\t if ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\t if ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\t if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\t if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\t if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\t if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n \n\t\t if ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\t if ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\t if ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\t if ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\t if ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\t if ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\t if ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\t if ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n \n\t\t if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\t if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\t if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n \n\t\t if ( json.rotation !== undefined ) material.rotation = json.rotation;\n \n\t\t if ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\t if ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\t if ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\t if ( json.scale !== undefined ) material.scale = json.scale;\n \n\t\t if ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\t if ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t if ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n \n\t\t if ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\t if ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\t if ( json.dithering !== undefined ) material.dithering = json.dithering;\n \n\t\t if ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\t if ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n \n\t\t if ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;\n \n\t\t if ( json.visible !== undefined ) material.visible = json.visible;\n \n\t\t if ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n \n\t\t if ( json.userData !== undefined ) material.userData = json.userData;\n \n\t\t if ( json.vertexColors !== undefined ) {\n \n\t\t\t if ( typeof json.vertexColors === 'number' ) {\n \n\t\t\t\t material.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n \n\t\t\t } else {\n \n\t\t\t\t material.vertexColors = json.vertexColors;\n \n\t\t\t }\n \n\t\t }\n \n\t\t // Shader Material\n \n\t\t if ( json.uniforms !== undefined ) {\n \n\t\t\t for ( const name in json.uniforms ) {\n \n\t\t\t\t const uniform = json.uniforms[ name ];\n \n\t\t\t\t material.uniforms[ name ] = {};\n \n\t\t\t\t switch ( uniform.type ) {\n \n\t\t\t\t\t case 't':\n\t\t\t\t\t\t material.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'c':\n\t\t\t\t\t\t material.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'v2':\n\t\t\t\t\t\t material.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'v3':\n\t\t\t\t\t\t material.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'v4':\n\t\t\t\t\t\t material.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'm3':\n\t\t\t\t\t\t material.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'm4':\n\t\t\t\t\t\t material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t break;\n \n\t\t\t\t\t default:\n\t\t\t\t\t\t material.uniforms[ name ].value = uniform.value;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( json.defines !== undefined ) material.defines = json.defines;\n\t\t if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\t if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n \n\t\t if ( json.extensions !== undefined ) {\n \n\t\t\t for ( const key in json.extensions ) {\n \n\t\t\t\t material.extensions[ key ] = json.extensions[ key ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t // Deprecated\n \n\t\t if ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n \n\t\t // for PointsMaterial\n \n\t\t if ( json.size !== undefined ) material.size = json.size;\n\t\t if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n \n\t\t // maps\n \n\t\t if ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\t if ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n \n\t\t if ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n \n\t\t if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\t if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n \n\t\t if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\t if ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\t if ( json.normalScale !== undefined ) {\n \n\t\t\t let normalScale = json.normalScale;\n \n\t\t\t if ( Array.isArray( normalScale ) === false ) {\n \n\t\t\t\t // Blender exporter used to export a scalar. See #7459\n \n\t\t\t\t normalScale = [ normalScale, normalScale ];\n \n\t\t\t }\n \n\t\t\t material.normalScale = new Vector2().fromArray( normalScale );\n \n\t\t }\n \n\t\t if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\t if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\t if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n \n\t\t if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\t if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n \n\t\t if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\t if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n \n\t\t if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n \n\t\t if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\t if ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n \n\t\t if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\t if ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n \n\t\t if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\t if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n \n\t\t if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\t if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n \n\t\t if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n \n\t\t if ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\t if ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\t if ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\t if ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n \n\t\t if ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\t if ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n \n\t\t return material;\n \n\t }\n \n\t setTextures( value ) {\n \n\t\t this.textures = value;\n\t\t return this;\n \n\t }\n \n }\n \n class LoaderUtils {\n \n\t static decodeText( array ) {\n \n\t\t if ( typeof TextDecoder !== 'undefined' ) {\n \n\t\t\t return new TextDecoder().decode( array );\n \n\t\t }\n \n\t\t // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t // throws a \"maximum call stack size exceeded\" error for large arrays.\n \n\t\t let s = '';\n \n\t\t for ( let i = 0, il = array.length; i < il; i ++ ) {\n \n\t\t\t // Implicitly assumes little-endian.\n\t\t\t s += String.fromCharCode( array[ i ] );\n \n\t\t }\n \n\t\t try {\n \n\t\t\t // merges multi-byte utf-8 characters.\n \n\t\t\t return decodeURIComponent( escape( s ) );\n \n\t\t } catch ( e ) { // see #16358\n \n\t\t\t return s;\n \n\t\t }\n \n\t }\n \n\t static extractUrlBase( url ) {\n \n\t\t const index = url.lastIndexOf( '/' );\n \n\t\t if ( index === - 1 ) return './';\n \n\t\t return url.substr( 0, index + 1 );\n \n\t }\n \n }\n \n class InstancedBufferGeometry extends BufferGeometry {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this.type = 'InstancedBufferGeometry';\n\t\t this.instanceCount = Infinity;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.instanceCount = source.instanceCount;\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON( this );\n \n\t\t data.instanceCount = this.instanceCount;\n \n\t\t data.isInstancedBufferGeometry = true;\n \n\t\t return data;\n \n\t }\n \n }\n \n InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n \n class InstancedBufferAttribute extends BufferAttribute {\n \n\t constructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n \n\t\t if ( typeof normalized === 'number' ) {\n \n\t\t\t meshPerAttribute = normalized;\n \n\t\t\t normalized = false;\n \n\t\t\t console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n \n\t\t }\n \n\t\t super( array, itemSize, normalized );\n \n\t\t this.meshPerAttribute = meshPerAttribute;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.meshPerAttribute = source.meshPerAttribute;\n \n\t\t return this;\n \n\t }\n \n\t toJSON() {\n \n\t\t const data = super.toJSON();\n \n\t\t data.meshPerAttribute = this.meshPerAttribute;\n \n\t\t data.isInstancedBufferAttribute = true;\n \n\t\t return data;\n \n\t }\n \n }\n \n InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n \n class BufferGeometryLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const loader = new FileLoader( scope.manager );\n\t\t loader.setPath( scope.path );\n\t\t loader.setRequestHeader( scope.requestHeader );\n\t\t loader.setWithCredentials( scope.withCredentials );\n\t\t loader.load( url, function ( text ) {\n \n\t\t\t try {\n \n\t\t\t\t onLoad( scope.parse( JSON.parse( text ) ) );\n \n\t\t\t } catch ( e ) {\n \n\t\t\t\t if ( onError ) {\n \n\t\t\t\t\t onError( e );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.error( e );\n \n\t\t\t\t }\n \n\t\t\t\t scope.manager.itemError( url );\n \n\t\t\t }\n \n\t\t }, onProgress, onError );\n \n\t }\n \n\t parse( json ) {\n \n\t\t const interleavedBufferMap = {};\n\t\t const arrayBufferMap = {};\n \n\t\t function getInterleavedBuffer( json, uuid ) {\n \n\t\t\t if ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n \n\t\t\t const interleavedBuffers = json.interleavedBuffers;\n\t\t\t const interleavedBuffer = interleavedBuffers[ uuid ];\n \n\t\t\t const buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n \n\t\t\t const array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\t const ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\t ib.uuid = interleavedBuffer.uuid;\n \n\t\t\t interleavedBufferMap[ uuid ] = ib;\n \n\t\t\t return ib;\n \n\t\t }\n \n\t\t function getArrayBuffer( json, uuid ) {\n \n\t\t\t if ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n \n\t\t\t const arrayBuffers = json.arrayBuffers;\n\t\t\t const arrayBuffer = arrayBuffers[ uuid ];\n \n\t\t\t const ab = new Uint32Array( arrayBuffer ).buffer;\n \n\t\t\t arrayBufferMap[ uuid ] = ab;\n \n\t\t\t return ab;\n \n\t\t }\n \n\t\t const geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n \n\t\t const index = json.data.index;\n \n\t\t if ( index !== undefined ) {\n \n\t\t\t const typedArray = getTypedArray( index.type, index.array );\n\t\t\t geometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n \n\t\t }\n \n\t\t const attributes = json.data.attributes;\n \n\t\t for ( const key in attributes ) {\n \n\t\t\t const attribute = attributes[ key ];\n\t\t\t let bufferAttribute;\n \n\t\t\t if ( attribute.isInterleavedBufferAttribute ) {\n \n\t\t\t\t const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n \n\t\t\t } else {\n \n\t\t\t\t const typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t const bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n \n\t\t\t }\n \n\t\t\t if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t if ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n \n\t\t\t if ( attribute.updateRange !== undefined ) {\n \n\t\t\t\t bufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t bufferAttribute.updateRange.count = attribute.updateRange.count;\n \n\t\t\t }\n \n\t\t\t geometry.setAttribute( key, bufferAttribute );\n \n\t\t }\n \n\t\t const morphAttributes = json.data.morphAttributes;\n \n\t\t if ( morphAttributes ) {\n \n\t\t\t for ( const key in morphAttributes ) {\n \n\t\t\t\t const attributeArray = morphAttributes[ key ];\n \n\t\t\t\t const array = [];\n \n\t\t\t\t for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n \n\t\t\t\t\t const attribute = attributeArray[ i ];\n\t\t\t\t\t let bufferAttribute;\n \n\t\t\t\t\t if ( attribute.isInterleavedBufferAttribute ) {\n \n\t\t\t\t\t\t const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\t bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t const typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\t bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\t array.push( bufferAttribute );\n \n\t\t\t\t }\n \n\t\t\t\t geometry.morphAttributes[ key ] = array;\n \n\t\t\t }\n \n\t\t }\n \n\t\t const morphTargetsRelative = json.data.morphTargetsRelative;\n \n\t\t if ( morphTargetsRelative ) {\n \n\t\t\t geometry.morphTargetsRelative = true;\n \n\t\t }\n \n\t\t const groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n \n\t\t if ( groups !== undefined ) {\n \n\t\t\t for ( let i = 0, n = groups.length; i !== n; ++ i ) {\n \n\t\t\t\t const group = groups[ i ];\n \n\t\t\t\t geometry.addGroup( group.start, group.count, group.materialIndex );\n \n\t\t\t }\n \n\t\t }\n \n\t\t const boundingSphere = json.data.boundingSphere;\n \n\t\t if ( boundingSphere !== undefined ) {\n \n\t\t\t const center = new Vector3();\n \n\t\t\t if ( boundingSphere.center !== undefined ) {\n \n\t\t\t\t center.fromArray( boundingSphere.center );\n \n\t\t\t }\n \n\t\t\t geometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n \n\t\t }\n \n\t\t if ( json.name ) geometry.name = json.name;\n\t\t if ( json.userData ) geometry.userData = json.userData;\n \n\t\t return geometry;\n \n\t }\n \n }\n \n class ObjectLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t this.resourcePath = this.resourcePath || path;\n \n\t\t const loader = new FileLoader( this.manager );\n\t\t loader.setPath( this.path );\n\t\t loader.setRequestHeader( this.requestHeader );\n\t\t loader.setWithCredentials( this.withCredentials );\n\t\t loader.load( url, function ( text ) {\n \n\t\t\t let json = null;\n \n\t\t\t try {\n \n\t\t\t\t json = JSON.parse( text );\n \n\t\t\t } catch ( error ) {\n \n\t\t\t\t if ( onError !== undefined ) onError( error );\n \n\t\t\t\t console.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n \n\t\t\t\t return;\n \n\t\t\t }\n \n\t\t\t const metadata = json.metadata;\n \n\t\t\t if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n \n\t\t\t\t console.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\t return;\n \n\t\t\t }\n \n\t\t\t scope.parse( json, onLoad );\n \n\t\t }, onProgress, onError );\n \n\t }\n \n\t parse( json, onLoad ) {\n \n\t\t const animations = this.parseAnimations( json.animations );\n\t\t const shapes = this.parseShapes( json.shapes );\n\t\t const geometries = this.parseGeometries( json.geometries, shapes );\n \n\t\t const images = this.parseImages( json.images, function () {\n \n\t\t\t if ( onLoad !== undefined ) onLoad( object );\n \n\t\t } );\n \n\t\t const textures = this.parseTextures( json.textures, images );\n\t\t const materials = this.parseMaterials( json.materials, textures );\n \n\t\t const object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\t const skeletons = this.parseSkeletons( json.skeletons, object );\n \n\t\t this.bindSkeletons( object, skeletons );\n \n\t\t //\n \n\t\t if ( onLoad !== undefined ) {\n \n\t\t\t let hasImages = false;\n \n\t\t\t for ( const uuid in images ) {\n \n\t\t\t\t if ( images[ uuid ] instanceof HTMLImageElement ) {\n \n\t\t\t\t\t hasImages = true;\n\t\t\t\t\t break;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( hasImages === false ) onLoad( object );\n \n\t\t }\n \n\t\t return object;\n \n\t }\n \n\t parseShapes( json ) {\n \n\t\t const shapes = {};\n \n\t\t if ( json !== undefined ) {\n \n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n\t\t\t\t const shape = new Shape().fromJSON( json[ i ] );\n \n\t\t\t\t shapes[ shape.uuid ] = shape;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return shapes;\n \n\t }\n \n\t parseSkeletons( json, object ) {\n \n\t\t const skeletons = {};\n\t\t const bones = {};\n \n\t\t // generate bone lookup table\n \n\t\t object.traverse( function ( child ) {\n \n\t\t\t if ( child.isBone ) bones[ child.uuid ] = child;\n \n\t\t } );\n \n\t\t // create skeletons\n \n\t\t if ( json !== undefined ) {\n \n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n\t\t\t\t const skeleton = new Skeleton().fromJSON( json[ i ], bones );\n \n\t\t\t\t skeletons[ skeleton.uuid ] = skeleton;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return skeletons;\n \n\t }\n \n\t parseGeometries( json, shapes ) {\n \n\t\t const geometries = {};\n\t\t let geometryShapes;\n \n\t\t if ( json !== undefined ) {\n \n\t\t\t const bufferGeometryLoader = new BufferGeometryLoader();\n \n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n\t\t\t\t let geometry;\n\t\t\t\t const data = json[ i ];\n \n\t\t\t\t switch ( data.type ) {\n \n\t\t\t\t\t case 'PlaneGeometry':\n\t\t\t\t\t case 'PlaneBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.width,\n\t\t\t\t\t\t\t data.height,\n\t\t\t\t\t\t\t data.widthSegments,\n\t\t\t\t\t\t\t data.heightSegments\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'BoxGeometry':\n\t\t\t\t\t case 'BoxBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.width,\n\t\t\t\t\t\t\t data.height,\n\t\t\t\t\t\t\t data.depth,\n\t\t\t\t\t\t\t data.widthSegments,\n\t\t\t\t\t\t\t data.heightSegments,\n\t\t\t\t\t\t\t data.depthSegments\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'CircleGeometry':\n\t\t\t\t\t case 'CircleBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.segments,\n\t\t\t\t\t\t\t data.thetaStart,\n\t\t\t\t\t\t\t data.thetaLength\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'CylinderGeometry':\n\t\t\t\t\t case 'CylinderBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.radiusTop,\n\t\t\t\t\t\t\t data.radiusBottom,\n\t\t\t\t\t\t\t data.height,\n\t\t\t\t\t\t\t data.radialSegments,\n\t\t\t\t\t\t\t data.heightSegments,\n\t\t\t\t\t\t\t data.openEnded,\n\t\t\t\t\t\t\t data.thetaStart,\n\t\t\t\t\t\t\t data.thetaLength\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'ConeGeometry':\n\t\t\t\t\t case 'ConeBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.height,\n\t\t\t\t\t\t\t data.radialSegments,\n\t\t\t\t\t\t\t data.heightSegments,\n\t\t\t\t\t\t\t data.openEnded,\n\t\t\t\t\t\t\t data.thetaStart,\n\t\t\t\t\t\t\t data.thetaLength\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'SphereGeometry':\n\t\t\t\t\t case 'SphereBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.widthSegments,\n\t\t\t\t\t\t\t data.heightSegments,\n\t\t\t\t\t\t\t data.phiStart,\n\t\t\t\t\t\t\t data.phiLength,\n\t\t\t\t\t\t\t data.thetaStart,\n\t\t\t\t\t\t\t data.thetaLength\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'DodecahedronGeometry':\n\t\t\t\t\t case 'DodecahedronBufferGeometry':\n\t\t\t\t\t case 'IcosahedronGeometry':\n\t\t\t\t\t case 'IcosahedronBufferGeometry':\n\t\t\t\t\t case 'OctahedronGeometry':\n\t\t\t\t\t case 'OctahedronBufferGeometry':\n\t\t\t\t\t case 'TetrahedronGeometry':\n\t\t\t\t\t case 'TetrahedronBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.detail\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'RingGeometry':\n\t\t\t\t\t case 'RingBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.innerRadius,\n\t\t\t\t\t\t\t data.outerRadius,\n\t\t\t\t\t\t\t data.thetaSegments,\n\t\t\t\t\t\t\t data.phiSegments,\n\t\t\t\t\t\t\t data.thetaStart,\n\t\t\t\t\t\t\t data.thetaLength\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'TorusGeometry':\n\t\t\t\t\t case 'TorusBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.tube,\n\t\t\t\t\t\t\t data.radialSegments,\n\t\t\t\t\t\t\t data.tubularSegments,\n\t\t\t\t\t\t\t data.arc\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'TorusKnotGeometry':\n\t\t\t\t\t case 'TorusKnotBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.tube,\n\t\t\t\t\t\t\t data.tubularSegments,\n\t\t\t\t\t\t\t data.radialSegments,\n\t\t\t\t\t\t\t data.p,\n\t\t\t\t\t\t\t data.q\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'TubeGeometry':\n\t\t\t\t\t case 'TubeBufferGeometry':\n \n\t\t\t\t\t\t // This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t // User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t new Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\t data.tubularSegments,\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.radialSegments,\n\t\t\t\t\t\t\t data.closed\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'LatheGeometry':\n\t\t\t\t\t case 'LatheBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.points,\n\t\t\t\t\t\t\t data.segments,\n\t\t\t\t\t\t\t data.phiStart,\n\t\t\t\t\t\t\t data.phiLength\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'PolyhedronGeometry':\n\t\t\t\t\t case 'PolyhedronBufferGeometry':\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t data.vertices,\n\t\t\t\t\t\t\t data.indices,\n\t\t\t\t\t\t\t data.radius,\n\t\t\t\t\t\t\t data.details\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'ShapeGeometry':\n\t\t\t\t\t case 'ShapeBufferGeometry':\n \n\t\t\t\t\t\t geometryShapes = [];\n \n\t\t\t\t\t\t for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n \n\t\t\t\t\t\t\t const shape = shapes[ data.shapes[ j ] ];\n \n\t\t\t\t\t\t\t geometryShapes.push( shape );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t geometryShapes,\n\t\t\t\t\t\t\t data.curveSegments\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n \n\t\t\t\t\t case 'ExtrudeGeometry':\n\t\t\t\t\t case 'ExtrudeBufferGeometry':\n \n\t\t\t\t\t\t geometryShapes = [];\n \n\t\t\t\t\t\t for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n \n\t\t\t\t\t\t\t const shape = shapes[ data.shapes[ j ] ];\n \n\t\t\t\t\t\t\t geometryShapes.push( shape );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t const extrudePath = data.options.extrudePath;\n \n\t\t\t\t\t\t if ( extrudePath !== undefined ) {\n \n\t\t\t\t\t\t\t data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t geometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t geometryShapes,\n\t\t\t\t\t\t\t data.options\n\t\t\t\t\t\t );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'BufferGeometry':\n\t\t\t\t\t case 'InstancedBufferGeometry':\n \n\t\t\t\t\t\t geometry = bufferGeometryLoader.parse( data );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t case 'Geometry':\n \n\t\t\t\t\t\t console.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t default:\n \n\t\t\t\t\t\t console.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n \n\t\t\t\t\t\t continue;\n \n\t\t\t\t }\n \n\t\t\t\t geometry.uuid = data.uuid;\n \n\t\t\t\t if ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\t if ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n \n\t\t\t\t geometries[ data.uuid ] = geometry;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return geometries;\n \n\t }\n \n\t parseMaterials( json, textures ) {\n \n\t\t const cache = {}; // MultiMaterial\n\t\t const materials = {};\n \n\t\t if ( json !== undefined ) {\n \n\t\t\t const loader = new MaterialLoader();\n\t\t\t loader.setTextures( textures );\n \n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n\t\t\t\t const data = json[ i ];\n \n\t\t\t\t if ( data.type === 'MultiMaterial' ) {\n \n\t\t\t\t\t // Deprecated\n \n\t\t\t\t\t const array = [];\n \n\t\t\t\t\t for ( let j = 0; j < data.materials.length; j ++ ) {\n \n\t\t\t\t\t\t const material = data.materials[ j ];\n \n\t\t\t\t\t\t if ( cache[ material.uuid ] === undefined ) {\n \n\t\t\t\t\t\t\t cache[ material.uuid ] = loader.parse( material );\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t\t array.push( cache[ material.uuid ] );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t materials[ data.uuid ] = array;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t if ( cache[ data.uuid ] === undefined ) {\n \n\t\t\t\t\t\t cache[ data.uuid ] = loader.parse( data );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t materials[ data.uuid ] = cache[ data.uuid ];\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t return materials;\n \n\t }\n \n\t parseAnimations( json ) {\n \n\t\t const animations = {};\n \n\t\t if ( json !== undefined ) {\n \n\t\t\t for ( let i = 0; i < json.length; i ++ ) {\n \n\t\t\t\t const data = json[ i ];\n \n\t\t\t\t const clip = AnimationClip.parse( data );\n \n\t\t\t\t animations[ clip.uuid ] = clip;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return animations;\n \n\t }\n \n\t parseImages( json, onLoad ) {\n \n\t\t const scope = this;\n\t\t const images = {};\n \n\t\t let loader;\n \n\t\t function loadImage( url ) {\n \n\t\t\t scope.manager.itemStart( url );\n \n\t\t\t return loader.load( url, function () {\n \n\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t }, undefined, function () {\n \n\t\t\t\t scope.manager.itemError( url );\n\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t } );\n \n\t\t }\n \n\t\t function deserializeImage( image ) {\n \n\t\t\t if ( typeof image === 'string' ) {\n \n\t\t\t\t const url = image;\n \n\t\t\t\t const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n \n\t\t\t\t return loadImage( path );\n \n\t\t\t } else {\n \n\t\t\t\t if ( image.data ) {\n \n\t\t\t\t\t return {\n\t\t\t\t\t\t data: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\t width: image.width,\n\t\t\t\t\t\t height: image.height\n\t\t\t\t\t };\n \n\t\t\t\t } else {\n \n\t\t\t\t\t return null;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( json !== undefined && json.length > 0 ) {\n \n\t\t\t const manager = new LoadingManager( onLoad );\n \n\t\t\t loader = new ImageLoader( manager );\n\t\t\t loader.setCrossOrigin( this.crossOrigin );\n \n\t\t\t for ( let i = 0, il = json.length; i < il; i ++ ) {\n \n\t\t\t\t const image = json[ i ];\n\t\t\t\t const url = image.url;\n \n\t\t\t\t if ( Array.isArray( url ) ) {\n \n\t\t\t\t\t // load array of images e.g CubeTexture\n \n\t\t\t\t\t images[ image.uuid ] = [];\n \n\t\t\t\t\t for ( let j = 0, jl = url.length; j < jl; j ++ ) {\n \n\t\t\t\t\t\t const currentUrl = url[ j ];\n \n\t\t\t\t\t\t const deserializedImage = deserializeImage( currentUrl );\n \n\t\t\t\t\t\t if ( deserializedImage !== null ) {\n \n\t\t\t\t\t\t\t if ( deserializedImage instanceof HTMLImageElement ) {\n \n\t\t\t\t\t\t\t\t images[ image.uuid ].push( deserializedImage );\n \n\t\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t\t // special case: handle array of data textures for cube textures\n \n\t\t\t\t\t\t\t\t images[ image.uuid ].push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // load single image\n \n\t\t\t\t\t const deserializedImage = deserializeImage( image.url );\n \n\t\t\t\t\t if ( deserializedImage !== null ) {\n \n\t\t\t\t\t\t images[ image.uuid ] = deserializedImage;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t return images;\n \n\t }\n \n\t parseTextures( json, images ) {\n \n\t\t function parseConstant( value, type ) {\n \n\t\t\t if ( typeof value === 'number' ) return value;\n \n\t\t\t console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n \n\t\t\t return type[ value ];\n \n\t\t }\n \n\t\t const textures = {};\n \n\t\t if ( json !== undefined ) {\n \n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\n \n\t\t\t\t const data = json[ i ];\n \n\t\t\t\t if ( data.image === undefined ) {\n \n\t\t\t\t\t console.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n \n\t\t\t\t }\n \n\t\t\t\t if ( images[ data.image ] === undefined ) {\n \n\t\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n \n\t\t\t\t }\n \n\t\t\t\t let texture;\n\t\t\t\t const image = images[ data.image ];\n \n\t\t\t\t if ( Array.isArray( image ) ) {\n \n\t\t\t\t\t texture = new CubeTexture( image );\n \n\t\t\t\t\t if ( image.length === 6 ) texture.needsUpdate = true;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t if ( image && image.data ) {\n \n\t\t\t\t\t\t texture = new DataTexture( image.data, image.width, image.height );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t texture = new Texture( image );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( image ) texture.needsUpdate = true; // textures can have undefined image data\n \n\t\t\t\t }\n \n\t\t\t\t texture.uuid = data.uuid;\n \n\t\t\t\t if ( data.name !== undefined ) texture.name = data.name;\n \n\t\t\t\t if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n \n\t\t\t\t if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\t if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\t if ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\t if ( data.rotation !== undefined ) texture.rotation = data.rotation;\n \n\t\t\t\t if ( data.wrap !== undefined ) {\n \n\t\t\t\t\t texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n \n\t\t\t\t }\n \n\t\t\t\t if ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\t if ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\t if ( data.encoding !== undefined ) texture.encoding = data.encoding;\n \n\t\t\t\t if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\t if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\t if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n \n\t\t\t\t if ( data.flipY !== undefined ) texture.flipY = data.flipY;\n \n\t\t\t\t if ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t if ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n \n\t\t\t\t textures[ data.uuid ] = texture;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return textures;\n \n\t }\n \n\t parseObject( data, geometries, materials, textures, animations ) {\n \n\t\t let object;\n \n\t\t function getGeometry( name ) {\n \n\t\t\t if ( geometries[ name ] === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n \n\t\t\t }\n \n\t\t\t return geometries[ name ];\n \n\t\t }\n \n\t\t function getMaterial( name ) {\n \n\t\t\t if ( name === undefined ) return undefined;\n \n\t\t\t if ( Array.isArray( name ) ) {\n \n\t\t\t\t const array = [];\n \n\t\t\t\t for ( let i = 0, l = name.length; i < l; i ++ ) {\n \n\t\t\t\t\t const uuid = name[ i ];\n \n\t\t\t\t\t if ( materials[ uuid ] === undefined ) {\n \n\t\t\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t array.push( materials[ uuid ] );\n \n\t\t\t\t }\n \n\t\t\t\t return array;\n \n\t\t\t }\n \n\t\t\t if ( materials[ name ] === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined material', name );\n \n\t\t\t }\n \n\t\t\t return materials[ name ];\n \n\t\t }\n \n\t\t function getTexture( uuid ) {\n \n\t\t\t if ( textures[ uuid ] === undefined ) {\n \n\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n \n\t\t\t }\n \n\t\t\t return textures[ uuid ];\n \n\t\t }\n \n\t\t let geometry, material;\n \n\t\t switch ( data.type ) {\n \n\t\t\t case 'Scene':\n \n\t\t\t\t object = new Scene();\n \n\t\t\t\t if ( data.background !== undefined ) {\n \n\t\t\t\t\t if ( Number.isInteger( data.background ) ) {\n \n\t\t\t\t\t\t object.background = new Color( data.background );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t object.background = getTexture( data.background );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t if ( data.environment !== undefined ) object.environment = getTexture( data.environment );\n \n\t\t\t\t if ( data.fog !== undefined ) {\n \n\t\t\t\t\t if ( data.fog.type === 'Fog' ) {\n \n\t\t\t\t\t\t object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n \n\t\t\t\t\t } else if ( data.fog.type === 'FogExp2' ) {\n \n\t\t\t\t\t\t object.fog = new FogExp2( data.fog.color, data.fog.density );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t\t break;\n \n\t\t\t case 'PerspectiveCamera':\n \n\t\t\t\t object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n \n\t\t\t\t if ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t if ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n \n\t\t\t\t break;\n \n\t\t\t case 'OrthographicCamera':\n \n\t\t\t\t object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n \n\t\t\t\t if ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n \n\t\t\t\t break;\n \n\t\t\t case 'AmbientLight':\n \n\t\t\t\t object = new AmbientLight( data.color, data.intensity );\n \n\t\t\t\t break;\n \n\t\t\t case 'DirectionalLight':\n \n\t\t\t\t object = new DirectionalLight( data.color, data.intensity );\n \n\t\t\t\t break;\n \n\t\t\t case 'PointLight':\n \n\t\t\t\t object = new PointLight( data.color, data.intensity, data.distance, data.decay );\n \n\t\t\t\t break;\n \n\t\t\t case 'RectAreaLight':\n \n\t\t\t\t object = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n \n\t\t\t\t break;\n \n\t\t\t case 'SpotLight':\n \n\t\t\t\t object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n \n\t\t\t\t break;\n \n\t\t\t case 'HemisphereLight':\n \n\t\t\t\t object = new HemisphereLight( data.color, data.groundColor, data.intensity );\n \n\t\t\t\t break;\n \n\t\t\t case 'LightProbe':\n \n\t\t\t\t object = new LightProbe().fromJSON( data );\n \n\t\t\t\t break;\n \n\t\t\t case 'SkinnedMesh':\n \n\t\t\t\t geometry = getGeometry( data.geometry );\n\t\t\t\t  material = getMaterial( data.material );\n \n\t\t\t\t object = new SkinnedMesh( geometry, material );\n \n\t\t\t\t if ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\t if ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\t if ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n \n\t\t\t\t break;\n \n\t\t\t case 'Mesh':\n \n\t\t\t\t geometry = getGeometry( data.geometry );\n\t\t\t\t material = getMaterial( data.material );\n \n\t\t\t\t object = new Mesh( geometry, material );\n \n\t\t\t\t break;\n \n\t\t\t case 'InstancedMesh':\n \n\t\t\t\t geometry = getGeometry( data.geometry );\n\t\t\t\t material = getMaterial( data.material );\n\t\t\t\t const count = data.count;\n\t\t\t\t const instanceMatrix = data.instanceMatrix;\n\t\t\t\t const instanceColor = data.instanceColor;\n \n\t\t\t\t object = new InstancedMesh( geometry, material, count );\n\t\t\t\t object.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\t if ( instanceColor !== undefined ) object.instanceColor = new BufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n \n\t\t\t\t break;\n \n\t\t\t case 'LOD':\n \n\t\t\t\t object = new LOD();\n \n\t\t\t\t break;\n \n\t\t\t case 'Line':\n \n\t\t\t\t object = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n\t\t\t\t break;\n \n\t\t\t case 'LineLoop':\n \n\t\t\t\t object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n\t\t\t\t break;\n \n\t\t\t case 'LineSegments':\n \n\t\t\t\t object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n\t\t\t\t break;\n \n\t\t\t case 'PointCloud':\n\t\t\t case 'Points':\n \n\t\t\t\t object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n \n\t\t\t\t break;\n \n\t\t\t case 'Sprite':\n \n\t\t\t\t object = new Sprite( getMaterial( data.material ) );\n \n\t\t\t\t break;\n \n\t\t\t case 'Group':\n \n\t\t\t\t object = new Group();\n \n\t\t\t\t break;\n \n\t\t\t case 'Bone':\n \n\t\t\t\t object = new Bone();\n \n\t\t\t\t break;\n \n\t\t\t default:\n \n\t\t\t\t object = new Object3D();\n \n\t\t }\n \n\t\t object.uuid = data.uuid;\n \n\t\t if ( data.name !== undefined ) object.name = data.name;\n \n\t\t if ( data.matrix !== undefined ) {\n \n\t\t\t object.matrix.fromArray( data.matrix );\n \n\t\t\t if ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t if ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n \n\t\t } else {\n \n\t\t\t if ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t if ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n \n\t\t }\n \n\t\t if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n \n\t\t if ( data.shadow ) {\n \n\t\t\t if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t if ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n \n\t\t }\n \n\t\t if ( data.visible !== undefined ) object.visible = data.visible;\n\t\t if ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\t if ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\t if ( data.userData !== undefined ) object.userData = data.userData;\n\t\t if ( data.layers !== undefined ) object.layers.mask = data.layers;\n \n\t\t if ( data.children !== undefined ) {\n \n\t\t\t const children = data.children;\n \n\t\t\t for ( let i = 0; i < children.length; i ++ ) {\n \n\t\t\t\t object.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( data.animations !== undefined ) {\n \n\t\t\t const objectAnimations = data.animations;\n \n\t\t\t for ( let i = 0; i < objectAnimations.length; i ++ ) {\n \n\t\t\t\t const uuid = objectAnimations[ i ];\n \n\t\t\t\t object.animations.push( animations[ uuid ] );\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( data.type === 'LOD' ) {\n \n\t\t\t if ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n \n\t\t\t const levels = data.levels;\n \n\t\t\t for ( let l = 0; l < levels.length; l ++ ) {\n \n\t\t\t\t const level = levels[ l ];\n\t\t\t\t const child = object.getObjectByProperty( 'uuid', level.object );\n \n\t\t\t\t if ( child !== undefined ) {\n \n\t\t\t\t\t object.addLevel( child, level.distance );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t return object;\n \n\t }\n \n\t bindSkeletons( object, skeletons ) {\n \n\t\t if ( Object.keys( skeletons ).length === 0 ) return;\n \n\t\t object.traverse( function ( child ) {\n \n\t\t\t if ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n \n\t\t\t\t const skeleton = skeletons[ child.skeleton ];\n \n\t\t\t\t if ( skeleton === undefined ) {\n \n\t\t\t\t\t console.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t child.bind( skeleton, child.bindMatrix );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } );\n \n\t }\n \n\t /* DEPRECATED */\n \n\t setTexturePath( value ) {\n \n\t\t console.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\t return this.setResourcePath( value );\n \n\t }\n \n }\n \n const TEXTURE_MAPPING = {\n\t UVMapping: UVMapping,\n\t CubeReflectionMapping: CubeReflectionMapping,\n\t CubeRefractionMapping: CubeRefractionMapping,\n\t EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t CubeUVReflectionMapping: CubeUVReflectionMapping,\n\t CubeUVRefractionMapping: CubeUVRefractionMapping\n };\n \n const TEXTURE_WRAPPING = {\n\t RepeatWrapping: RepeatWrapping,\n\t ClampToEdgeWrapping: ClampToEdgeWrapping,\n\t MirroredRepeatWrapping: MirroredRepeatWrapping\n };\n \n const TEXTURE_FILTER = {\n\t NearestFilter: NearestFilter,\n\t NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t LinearFilter: LinearFilter,\n\t LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t LinearMipmapLinearFilter: LinearMipmapLinearFilter\n };\n \n class ImageBitmapLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t\t if ( typeof createImageBitmap === 'undefined' ) {\n \n\t\t\t console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n \n\t\t }\n \n\t\t if ( typeof fetch === 'undefined' ) {\n \n\t\t\t console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n \n\t\t }\n \n\t\t this.options = { premultiplyAlpha: 'none' };\n \n\t }\n \n\t setOptions( options ) {\n \n\t\t this.options = options;\n \n\t\t return this;\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t if ( url === undefined ) url = '';\n \n\t\t if ( this.path !== undefined ) url = this.path + url;\n \n\t\t url = this.manager.resolveURL( url );\n \n\t\t const scope = this;\n \n\t\t const cached = Cache.get( url );\n \n\t\t if ( cached !== undefined ) {\n \n\t\t\t scope.manager.itemStart( url );\n \n\t\t\t setTimeout( function () {\n \n\t\t\t\t if ( onLoad ) onLoad( cached );\n \n\t\t\t\t scope.manager.itemEnd( url );\n \n\t\t\t }, 0 );\n \n\t\t\t return cached;\n \n\t\t }\n \n\t\t const fetchOptions = {};\n\t\t fetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\t fetchOptions.headers = this.requestHeader;\n \n\t\t fetch( url, fetchOptions ).then( function ( res ) {\n \n\t\t\t return res.blob();\n \n\t\t } ).then( function ( blob ) {\n \n\t\t\t return createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n \n\t\t } ).then( function ( imageBitmap ) {\n \n\t\t\t Cache.add( url, imageBitmap );\n \n\t\t\t if ( onLoad ) onLoad( imageBitmap );\n \n\t\t\t scope.manager.itemEnd( url );\n \n\t\t } ).catch( function ( e ) {\n \n\t\t\t if ( onError ) onError( e );\n \n\t\t\t scope.manager.itemError( url );\n\t\t\t scope.manager.itemEnd( url );\n \n\t\t } );\n \n\t\t scope.manager.itemStart( url );\n \n\t }\n \n }\n \n ImageBitmapLoader.prototype.isImageBitmapLoader = true;\n \n class ShapePath {\n \n\t constructor() {\n \n\t\t this.type = 'ShapePath';\n \n\t\t this.color = new Color();\n \n\t\t this.subPaths = [];\n\t\t this.currentPath = null;\n \n\t }\n \n\t moveTo( x, y ) {\n \n\t\t this.currentPath = new Path();\n\t\t this.subPaths.push( this.currentPath );\n\t\t this.currentPath.moveTo( x, y );\n \n\t\t return this;\n \n\t }\n \n\t lineTo( x, y ) {\n \n\t\t this.currentPath.lineTo( x, y );\n \n\t\t return this;\n \n\t }\n \n\t quadraticCurveTo( aCPx, aCPy, aX, aY ) {\n \n\t\t this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n \n\t\t return this;\n \n\t }\n \n\t bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n \n\t\t this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n \n\t\t return this;\n \n\t }\n \n\t splineThru( pts ) {\n \n\t\t this.currentPath.splineThru( pts );\n \n\t\t return this;\n \n\t }\n \n\t toShapes( isCCW, noHoles ) {\n \n\t\t function toShapesNoHoles( inSubpaths ) {\n \n\t\t\t const shapes = [];\n \n\t\t\t for ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n \n\t\t\t\t const tmpPath = inSubpaths[ i ];\n \n\t\t\t\t const tmpShape = new Shape();\n\t\t\t\t tmpShape.curves = tmpPath.curves;\n \n\t\t\t\t shapes.push( tmpShape );\n \n\t\t\t }\n \n\t\t\t return shapes;\n \n\t\t }\n \n\t\t function isPointInsidePolygon( inPt, inPolygon ) {\n \n\t\t\t const polyLen = inPolygon.length;\n \n\t\t\t // inPt on polygon contour => immediate success    or\n\t\t\t // toggling of inside/outside at every single! intersection point of an edge\n\t\t\t //  with the horizontal line through inPt, left of inPt\n\t\t\t //  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t let inside = false;\n\t\t\t for ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n \n\t\t\t\t let edgeLowPt = inPolygon[ p ];\n\t\t\t\t let edgeHighPt = inPolygon[ q ];\n \n\t\t\t\t let edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t let edgeDy = edgeHighPt.y - edgeLowPt.y;\n \n\t\t\t\t if ( Math.abs( edgeDy ) > Number.EPSILON ) {\n \n\t\t\t\t\t // not parallel\n\t\t\t\t\t if ( edgeDy < 0 ) {\n \n\t\t\t\t\t\t edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n \n\t\t\t\t\t if ( inPt.y === edgeLowPt.y ) {\n \n\t\t\t\t\t\t if ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t const perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t if ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t if ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\t inside = ! inside;\t\t// true intersection left of inPt\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // parallel or collinear\n\t\t\t\t\t if ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t // edge lies on the same horizontal line as inPt\n\t\t\t\t\t if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t  ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t // continue;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t return\tinside;\n \n\t\t }\n \n\t\t const isClockWise = ShapeUtils.isClockWise;\n \n\t\t const subPaths = this.subPaths;\n\t\t if ( subPaths.length === 0 ) return [];\n \n\t\t if ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n \n \n\t\t let solid, tmpPath, tmpShape;\n\t\t const shapes = [];\n \n\t\t if ( subPaths.length === 1 ) {\n \n\t\t\t tmpPath = subPaths[ 0 ];\n\t\t\t tmpShape = new Shape();\n\t\t\t tmpShape.curves = tmpPath.curves;\n\t\t\t shapes.push( tmpShape );\n\t\t\t return shapes;\n \n\t\t }\n \n\t\t let holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t holesFirst = isCCW ? ! holesFirst : holesFirst;\n \n\t\t // console.log(\"Holes first\", holesFirst);\n \n\t\t const betterShapeHoles = [];\n\t\t const newShapes = [];\n\t\t let newShapeHoles = [];\n\t\t let mainIdx = 0;\n\t\t let tmpPoints;\n \n\t\t newShapes[ mainIdx ] = undefined;\n\t\t newShapeHoles[ mainIdx ] = [];\n \n\t\t for ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n \n\t\t\t tmpPath = subPaths[ i ];\n\t\t\t tmpPoints = tmpPath.getPoints();\n\t\t\t solid = isClockWise( tmpPoints );\n\t\t\t solid = isCCW ? ! solid : solid;\n \n\t\t\t if ( solid ) {\n \n\t\t\t\t if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n \n\t\t\t\t newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t newShapes[ mainIdx ].s.curves = tmpPath.curves;\n \n\t\t\t\t if ( holesFirst )\tmainIdx ++;\n\t\t\t\t newShapeHoles[ mainIdx ] = [];\n \n\t\t\t\t //console.log('cw', i);\n \n\t\t\t } else {\n \n\t\t\t\t newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n \n\t\t\t\t //console.log('ccw', i);\n \n\t\t\t }\n \n\t\t }\n \n\t\t // only Holes? -> probably all Shapes with wrong orientation\n\t\t if ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n \n \n\t\t if ( newShapes.length > 1 ) {\n \n\t\t\t let ambiguous = false;\n\t\t\t const toChange = [];\n \n\t\t\t for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n \n\t\t\t\t betterShapeHoles[ sIdx ] = [];\n \n\t\t\t }\n \n\t\t\t for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n \n\t\t\t\t const sho = newShapeHoles[ sIdx ];\n \n\t\t\t\t for ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n \n\t\t\t\t\t const ho = sho[ hIdx ];\n\t\t\t\t\t let hole_unassigned = true;\n \n\t\t\t\t\t for ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n \n\t\t\t\t\t\t if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n \n\t\t\t\t\t\t\t if ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\t if ( hole_unassigned ) {\n \n\t\t\t\t\t\t\t\t hole_unassigned = false;\n\t\t\t\t\t\t\t\t betterShapeHoles[ s2Idx ].push( ho );\n \n\t\t\t\t\t\t\t } else {\n \n\t\t\t\t\t\t\t\t ambiguous = true;\n \n\t\t\t\t\t\t\t }\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( hole_unassigned ) {\n \n\t\t\t\t\t\t betterShapeHoles[ sIdx ].push( ho );\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n\t\t\t // console.log(\"ambiguous: \", ambiguous);\n \n\t\t\t if ( toChange.length > 0 ) {\n \n\t\t\t\t // console.log(\"to change: \", toChange);\n\t\t\t\t if ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n \n\t\t\t }\n \n\t\t }\n \n\t\t let tmpHoles;\n \n\t\t for ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n \n\t\t\t tmpShape = newShapes[ i ].s;\n\t\t\t shapes.push( tmpShape );\n\t\t\t tmpHoles = newShapeHoles[ i ];\n \n\t\t\t for ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n \n\t\t\t\t tmpShape.holes.push( tmpHoles[ j ].h );\n \n\t\t\t }\n \n\t\t }\n \n\t\t //console.log(\"shape\", shapes);\n \n\t\t return shapes;\n \n\t }\n \n }\n \n class Font {\n \n\t constructor( data ) {\n \n\t\t this.type = 'Font';\n \n\t\t this.data = data;\n \n\t }\n \n\t generateShapes( text, size = 100 ) {\n \n\t\t const shapes = [];\n\t\t const paths = createPaths( text, size, this.data );\n \n\t\t for ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n \n\t\t\t Array.prototype.push.apply( shapes, paths[ p ].toShapes() );\n \n\t\t }\n \n\t\t return shapes;\n \n\t }\n \n }\n \n function createPaths( text, size, data ) {\n \n\t const chars = Array.from( text );\n\t const scale = size / data.resolution;\n\t const line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n \n\t const paths = [];\n \n\t let offsetX = 0, offsetY = 0;\n \n\t for ( let i = 0; i < chars.length; i ++ ) {\n \n\t\t const char = chars[ i ];\n \n\t\t if ( char === '\\n' ) {\n \n\t\t\t offsetX = 0;\n\t\t\t offsetY -= line_height;\n \n\t\t } else {\n \n\t\t\t const ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\t offsetX += ret.offsetX;\n\t\t\t paths.push( ret.path );\n \n\t\t }\n \n\t }\n \n\t return paths;\n \n }\n \n function createPath( char, scale, offsetX, offsetY, data ) {\n \n\t const glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n \n\t if ( ! glyph ) {\n \n\t\t console.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n \n\t\t return;\n \n\t }\n \n\t const path = new ShapePath();\n \n\t let x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n \n\t if ( glyph.o ) {\n \n\t\t const outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n \n\t\t for ( let i = 0, l = outline.length; i < l; ) {\n \n\t\t\t const action = outline[ i ++ ];\n \n\t\t\t switch ( action ) {\n \n\t\t\t\t case 'm': // moveTo\n \n\t\t\t\t\t x = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t y = outline[ i ++ ] * scale + offsetY;\n \n\t\t\t\t\t path.moveTo( x, y );\n \n\t\t\t\t\t break;\n \n\t\t\t\t case 'l': // lineTo\n \n\t\t\t\t\t x = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t y = outline[ i ++ ] * scale + offsetY;\n \n\t\t\t\t\t path.lineTo( x, y );\n \n\t\t\t\t\t break;\n \n\t\t\t\t case 'q': // quadraticCurveTo\n \n\t\t\t\t\t cpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t cpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t cpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t cpy1 = outline[ i ++ ] * scale + offsetY;\n \n\t\t\t\t\t path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n \n\t\t\t\t\t break;\n \n\t\t\t\t case 'b': // bezierCurveTo\n \n\t\t\t\t\t cpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t cpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t cpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t cpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t cpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t cpy2 = outline[ i ++ ] * scale + offsetY;\n \n\t\t\t\t\t path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n \n\t\t\t\t\t break;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t return { offsetX: glyph.ha * scale, path: path };\n \n }\n \n Font.prototype.isFont = true;\n \n class FontLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const loader = new FileLoader( this.manager );\n\t\t loader.setPath( this.path );\n\t\t loader.setRequestHeader( this.requestHeader );\n\t\t loader.setWithCredentials( scope.withCredentials );\n\t\t loader.load( url, function ( text ) {\n \n\t\t\t let json;\n \n\t\t\t try {\n \n\t\t\t\t json = JSON.parse( text );\n \n\t\t\t } catch ( e ) {\n \n\t\t\t\t console.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t json = JSON.parse( text.substring( 65, text.length - 2 ) );\n \n\t\t\t }\n \n\t\t\t const font = scope.parse( json );\n \n\t\t\t if ( onLoad ) onLoad( font );\n \n\t\t }, onProgress, onError );\n \n\t }\n \n\t parse( json ) {\n \n\t\t return new Font( json );\n \n\t }\n \n }\n \n let _context;\n \n const AudioContext = {\n \n\t getContext: function () {\n \n\t\t if ( _context === undefined ) {\n \n\t\t\t _context = new ( window.AudioContext || window.webkitAudioContext )();\n \n\t\t }\n \n\t\t return _context;\n \n\t },\n \n\t setContext: function ( value ) {\n \n\t\t _context = value;\n \n\t }\n \n };\n \n class AudioLoader extends Loader {\n \n\t constructor( manager ) {\n \n\t\t super( manager );\n \n\t }\n \n\t load( url, onLoad, onProgress, onError ) {\n \n\t\t const scope = this;\n \n\t\t const loader = new FileLoader( this.manager );\n\t\t loader.setResponseType( 'arraybuffer' );\n\t\t loader.setPath( this.path );\n\t\t loader.setRequestHeader( this.requestHeader );\n\t\t loader.setWithCredentials( this.withCredentials );\n\t\t loader.load( url, function ( buffer ) {\n \n\t\t\t try {\n \n\t\t\t\t // Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t // detaches the buffer when complete, preventing reuse.\n\t\t\t\t const bufferCopy = buffer.slice( 0 );\n \n\t\t\t\t const context = AudioContext.getContext();\n\t\t\t\t context.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n \n\t\t\t\t\t onLoad( audioBuffer );\n \n\t\t\t\t } );\n \n\t\t\t } catch ( e ) {\n \n\t\t\t\t if ( onError ) {\n \n\t\t\t\t\t onError( e );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.error( e );\n \n\t\t\t\t }\n \n\t\t\t\t scope.manager.itemError( url );\n \n\t\t\t }\n \n\t\t }, onProgress, onError );\n \n\t }\n \n }\n \n class HemisphereLightProbe extends LightProbe {\n \n\t constructor( skyColor, groundColor, intensity = 1 ) {\n \n\t\t super( undefined, intensity );\n \n\t\t const color1 = new Color().set( skyColor );\n\t\t const color2 = new Color().set( groundColor );\n \n\t\t const sky = new Vector3( color1.r, color1.g, color1.b );\n\t\t const ground = new Vector3( color2.r, color2.g, color2.b );\n \n\t\t // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\t const c0 = Math.sqrt( Math.PI );\n\t\t const c1 = c0 * Math.sqrt( 0.75 );\n \n\t\t this.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\t this.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n \n\t }\n \n }\n \n HemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n \n class AmbientLightProbe extends LightProbe {\n \n\t constructor( color, intensity = 1 ) {\n \n\t\t super( undefined, intensity );\n \n\t\t const color1 = new Color().set( color );\n \n\t\t // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\t this.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n \n\t }\n \n }\n \n AmbientLightProbe.prototype.isAmbientLightProbe = true;\n \n const _eyeRight = /*@__PURE__*/ new Matrix4();\n const _eyeLeft = /*@__PURE__*/ new Matrix4();\n \n class StereoCamera {\n \n\t constructor() {\n \n\t\t this.type = 'StereoCamera';\n \n\t\t this.aspect = 1;\n \n\t\t this.eyeSep = 0.064;\n \n\t\t this.cameraL = new PerspectiveCamera();\n\t\t this.cameraL.layers.enable( 1 );\n\t\t this.cameraL.matrixAutoUpdate = false;\n \n\t\t this.cameraR = new PerspectiveCamera();\n\t\t this.cameraR.layers.enable( 2 );\n\t\t this.cameraR.matrixAutoUpdate = false;\n \n\t\t this._cache = {\n\t\t\t focus: null,\n\t\t\t fov: null,\n\t\t\t aspect: null,\n\t\t\t near: null,\n\t\t\t far: null,\n\t\t\t zoom: null,\n\t\t\t eyeSep: null\n\t\t };\n \n\t }\n \n\t update( camera ) {\n \n\t\t const cache = this._cache;\n \n\t\t const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\t cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\t cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n \n\t\t if ( needsUpdate ) {\n \n\t\t\t cache.focus = camera.focus;\n\t\t\t cache.fov = camera.fov;\n\t\t\t cache.aspect = camera.aspect * this.aspect;\n\t\t\t cache.near = camera.near;\n\t\t\t cache.far = camera.far;\n\t\t\t cache.zoom = camera.zoom;\n\t\t\t cache.eyeSep = this.eyeSep;\n \n\t\t\t // Off-axis stereoscopic effect based on\n\t\t\t // http://paulbourke.net/stereographics/stereorender/\n \n\t\t\t const projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t const eyeSepHalf = cache.eyeSep / 2;\n\t\t\t const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t const ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\t let xmin, xmax;\n \n\t\t\t // translate xOffset\n \n\t\t\t _eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t _eyeRight.elements[ 12 ] = eyeSepHalf;\n \n\t\t\t // for left eye\n \n\t\t\t xmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t xmax = ymax * cache.aspect + eyeSepOnProjection;\n \n\t\t\t projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n \n\t\t\t this.cameraL.projectionMatrix.copy( projectionMatrix );\n \n\t\t\t // for right eye\n \n\t\t\t xmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t xmax = ymax * cache.aspect - eyeSepOnProjection;\n \n\t\t\t projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n \n\t\t\t this.cameraR.projectionMatrix.copy( projectionMatrix );\n \n\t\t }\n \n\t\t this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\t this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n \n\t }\n \n }\n \n class Clock {\n \n\t constructor( autoStart = true ) {\n \n\t\t this.autoStart = autoStart;\n \n\t\t this.startTime = 0;\n\t\t this.oldTime = 0;\n\t\t this.elapsedTime = 0;\n \n\t\t this.running = false;\n \n\t }\n \n\t start() {\n \n\t\t this.startTime = now();\n \n\t\t this.oldTime = this.startTime;\n\t\t this.elapsedTime = 0;\n\t\t this.running = true;\n \n\t }\n \n\t stop() {\n \n\t\t this.getElapsedTime();\n\t\t this.running = false;\n\t\t this.autoStart = false;\n \n\t }\n \n\t getElapsedTime() {\n \n\t\t this.getDelta();\n\t\t return this.elapsedTime;\n \n\t }\n \n\t getDelta() {\n \n\t\t let diff = 0;\n \n\t\t if ( this.autoStart && ! this.running ) {\n \n\t\t\t this.start();\n\t\t\t return 0;\n \n\t\t }\n \n\t\t if ( this.running ) {\n \n\t\t\t const newTime = now();\n \n\t\t\t diff = ( newTime - this.oldTime ) / 1000;\n\t\t\t this.oldTime = newTime;\n \n\t\t\t this.elapsedTime += diff;\n \n\t\t }\n \n\t\t return diff;\n \n\t }\n \n }\n \n function now() {\n \n\t return ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n \n }\n \n const _position$1 = /*@__PURE__*/ new Vector3();\n const _quaternion$1 = /*@__PURE__*/ new Quaternion();\n const _scale$1 = /*@__PURE__*/ new Vector3();\n const _orientation$1 = /*@__PURE__*/ new Vector3();\n \n class AudioListener extends Object3D {\n \n\t constructor() {\n \n\t\t super();\n \n\t\t this.type = 'AudioListener';\n \n\t\t this.context = AudioContext.getContext();\n \n\t\t this.gain = this.context.createGain();\n\t\t this.gain.connect( this.context.destination );\n \n\t\t this.filter = null;\n \n\t\t this.timeDelta = 0;\n \n\t\t // private\n \n\t\t this._clock = new Clock();\n \n\t }\n \n\t getInput() {\n \n\t\t return this.gain;\n \n\t }\n \n\t removeFilter() {\n \n\t\t if ( this.filter !== null ) {\n \n\t\t\t this.gain.disconnect( this.filter );\n\t\t\t this.filter.disconnect( this.context.destination );\n\t\t\t this.gain.connect( this.context.destination );\n\t\t\t this.filter = null;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t getFilter() {\n \n\t\t return this.filter;\n \n\t }\n \n\t setFilter( value ) {\n \n\t\t if ( this.filter !== null ) {\n \n\t\t\t this.gain.disconnect( this.filter );\n\t\t\t this.filter.disconnect( this.context.destination );\n \n\t\t } else {\n \n\t\t\t this.gain.disconnect( this.context.destination );\n \n\t\t }\n \n\t\t this.filter = value;\n\t\t this.gain.connect( this.filter );\n\t\t this.filter.connect( this.context.destination );\n \n\t\t return this;\n \n\t }\n \n\t getMasterVolume() {\n \n\t\t return this.gain.gain.value;\n \n\t }\n \n\t setMasterVolume( value ) {\n \n\t\t this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n \n\t\t return this;\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t super.updateMatrixWorld( force );\n \n\t\t const listener = this.context.listener;\n\t\t const up = this.up;\n \n\t\t this.timeDelta = this._clock.getDelta();\n \n\t\t this.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n \n\t\t _orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n \n\t\t if ( listener.positionX ) {\n \n\t\t\t // code path for Chrome (see #14393)\n \n\t\t\t const endTime = this.context.currentTime + this.timeDelta;\n \n\t\t\t listener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\t listener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\t listener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\t listener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\t listener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\t listener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\t listener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t listener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t listener.upZ.linearRampToValueAtTime( up.z, endTime );\n \n\t\t } else {\n \n\t\t\t listener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\t listener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n \n\t\t }\n \n\t }\n \n }\n \n class Audio extends Object3D {\n \n\t constructor( listener ) {\n \n\t\t super();\n \n\t\t this.type = 'Audio';\n \n\t\t this.listener = listener;\n\t\t this.context = listener.context;\n \n\t\t this.gain = this.context.createGain();\n\t\t this.gain.connect( listener.getInput() );\n \n\t\t this.autoplay = false;\n \n\t\t this.buffer = null;\n\t\t this.detune = 0;\n\t\t this.loop = false;\n\t\t this.loopStart = 0;\n\t\t this.loopEnd = 0;\n\t\t this.offset = 0;\n\t\t this.duration = undefined;\n\t\t this.playbackRate = 1;\n\t\t this.isPlaying = false;\n\t\t this.hasPlaybackControl = true;\n\t\t this.source = null;\n\t\t this.sourceType = 'empty';\n \n\t\t this._startedAt = 0;\n\t\t this._progress = 0;\n\t\t this._connected = false;\n \n\t\t this.filters = [];\n \n\t }\n \n\t getOutput() {\n \n\t\t return this.gain;\n \n\t }\n \n\t setNodeSource( audioNode ) {\n \n\t\t this.hasPlaybackControl = false;\n\t\t this.sourceType = 'audioNode';\n\t\t this.source = audioNode;\n\t\t this.connect();\n \n\t\t return this;\n \n\t }\n \n\t setMediaElementSource( mediaElement ) {\n \n\t\t this.hasPlaybackControl = false;\n\t\t this.sourceType = 'mediaNode';\n\t\t this.source = this.context.createMediaElementSource( mediaElement );\n\t\t this.connect();\n \n\t\t return this;\n \n\t }\n \n\t setMediaStreamSource( mediaStream ) {\n \n\t\t this.hasPlaybackControl = false;\n\t\t this.sourceType = 'mediaStreamNode';\n\t\t this.source = this.context.createMediaStreamSource( mediaStream );\n\t\t this.connect();\n \n\t\t return this;\n \n\t }\n \n\t setBuffer( audioBuffer ) {\n \n\t\t this.buffer = audioBuffer;\n\t\t this.sourceType = 'buffer';\n \n\t\t if ( this.autoplay ) this.play();\n \n\t\t return this;\n \n\t }\n \n\t play( delay = 0 ) {\n \n\t\t if ( this.isPlaying === true ) {\n \n\t\t\t console.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t if ( this.hasPlaybackControl === false ) {\n \n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t this._startedAt = this.context.currentTime + delay;\n \n\t\t const source = this.context.createBufferSource();\n\t\t source.buffer = this.buffer;\n\t\t source.loop = this.loop;\n\t\t source.loopStart = this.loopStart;\n\t\t source.loopEnd = this.loopEnd;\n\t\t source.onended = this.onEnded.bind( this );\n\t\t source.start( this._startedAt, this._progress + this.offset, this.duration );\n \n\t\t this.isPlaying = true;\n \n\t\t this.source = source;\n \n\t\t this.setDetune( this.detune );\n\t\t this.setPlaybackRate( this.playbackRate );\n \n\t\t return this.connect();\n \n\t }\n \n\t pause() {\n \n\t\t if ( this.hasPlaybackControl === false ) {\n \n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t if ( this.isPlaying === true ) {\n \n\t\t\t // update current progress\n \n\t\t\t this._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n \n\t\t\t if ( this.loop === true ) {\n \n\t\t\t\t // ensure _progress does not exceed duration with looped audios\n \n\t\t\t\t this._progress = this._progress % ( this.duration || this.buffer.duration );\n \n\t\t\t }\n \n\t\t\t this.source.stop();\n\t\t\t this.source.onended = null;\n \n\t\t\t this.isPlaying = false;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t stop() {\n \n\t\t if ( this.hasPlaybackControl === false ) {\n \n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t this._progress = 0;\n \n\t\t this.source.stop();\n\t\t this.source.onended = null;\n\t\t this.isPlaying = false;\n \n\t\t return this;\n \n\t }\n \n\t connect() {\n \n\t\t if ( this.filters.length > 0 ) {\n \n\t\t\t this.source.connect( this.filters[ 0 ] );\n \n\t\t\t for ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n \n\t\t\t\t this.filters[ i - 1 ].connect( this.filters[ i ] );\n \n\t\t\t }\n \n\t\t\t this.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n \n\t\t } else {\n \n\t\t\t this.source.connect( this.getOutput() );\n \n\t\t }\n \n\t\t this._connected = true;\n \n\t\t return this;\n \n\t }\n \n\t disconnect() {\n \n\t\t if ( this.filters.length > 0 ) {\n \n\t\t\t this.source.disconnect( this.filters[ 0 ] );\n \n\t\t\t for ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n \n\t\t\t\t this.filters[ i - 1 ].disconnect( this.filters[ i ] );\n \n\t\t\t }\n \n\t\t\t this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n \n\t\t } else {\n \n\t\t\t this.source.disconnect( this.getOutput() );\n \n\t\t }\n \n\t\t this._connected = false;\n \n\t\t return this;\n \n\t }\n \n\t getFilters() {\n \n\t\t return this.filters;\n \n\t }\n \n\t setFilters( value ) {\n \n\t\t if ( ! value ) value = [];\n \n\t\t if ( this._connected === true ) {\n \n\t\t\t this.disconnect();\n\t\t\t this.filters = value.slice();\n\t\t\t this.connect();\n \n\t\t } else {\n \n\t\t\t this.filters = value.slice();\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setDetune( value ) {\n \n\t\t this.detune = value;\n \n\t\t if ( this.source.detune === undefined ) return; // only set detune when available\n \n\t\t if ( this.isPlaying === true ) {\n \n\t\t\t this.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t getDetune() {\n \n\t\t return this.detune;\n \n\t }\n \n\t getFilter() {\n \n\t\t return this.getFilters()[ 0 ];\n \n\t }\n \n\t setFilter( filter ) {\n \n\t\t return this.setFilters( filter ? [ filter ] : [] );\n \n\t }\n \n\t setPlaybackRate( value ) {\n \n\t\t if ( this.hasPlaybackControl === false ) {\n \n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t this.playbackRate = value;\n \n\t\t if ( this.isPlaying === true ) {\n \n\t\t\t this.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t getPlaybackRate() {\n \n\t\t return this.playbackRate;\n \n\t }\n \n\t onEnded() {\n \n\t\t this.isPlaying = false;\n \n\t }\n \n\t getLoop() {\n \n\t\t if ( this.hasPlaybackControl === false ) {\n \n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t return false;\n \n\t\t }\n \n\t\t return this.loop;\n \n\t }\n \n\t setLoop( value ) {\n \n\t\t if ( this.hasPlaybackControl === false ) {\n \n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t this.loop = value;\n \n\t\t if ( this.isPlaying === true ) {\n \n\t\t\t this.source.loop = this.loop;\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setLoopStart( value ) {\n \n\t\t this.loopStart = value;\n \n\t\t return this;\n \n\t }\n \n\t setLoopEnd( value ) {\n \n\t\t this.loopEnd = value;\n \n\t\t return this;\n \n\t }\n \n\t getVolume() {\n \n\t\t return this.gain.gain.value;\n \n\t }\n \n\t setVolume( value ) {\n \n\t\t this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n \n\t\t return this;\n \n\t }\n \n }\n \n const _position = /*@__PURE__*/ new Vector3();\n const _quaternion = /*@__PURE__*/ new Quaternion();\n const _scale = /*@__PURE__*/ new Vector3();\n const _orientation = /*@__PURE__*/ new Vector3();\n \n class PositionalAudio extends Audio {\n \n\t constructor( listener ) {\n \n\t\t super( listener );\n \n\t\t this.panner = this.context.createPanner();\n\t\t this.panner.panningModel = 'HRTF';\n\t\t this.panner.connect( this.gain );\n \n\t }\n \n\t getOutput() {\n \n\t\t return this.panner;\n \n\t }\n \n\t getRefDistance() {\n \n\t\t return this.panner.refDistance;\n \n\t }\n \n\t setRefDistance( value ) {\n \n\t\t this.panner.refDistance = value;\n \n\t\t return this;\n \n\t }\n \n\t getRolloffFactor() {\n \n\t\t return this.panner.rolloffFactor;\n \n\t }\n \n\t setRolloffFactor( value ) {\n \n\t\t this.panner.rolloffFactor = value;\n \n\t\t return this;\n \n\t }\n \n\t getDistanceModel() {\n \n\t\t return this.panner.distanceModel;\n \n\t }\n \n\t setDistanceModel( value ) {\n \n\t\t this.panner.distanceModel = value;\n \n\t\t return this;\n \n\t }\n \n\t getMaxDistance() {\n \n\t\t return this.panner.maxDistance;\n \n\t }\n \n\t setMaxDistance( value ) {\n \n\t\t this.panner.maxDistance = value;\n \n\t\t return this;\n \n\t }\n \n\t setDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n \n\t\t this.panner.coneInnerAngle = coneInnerAngle;\n\t\t this.panner.coneOuterAngle = coneOuterAngle;\n\t\t this.panner.coneOuterGain = coneOuterGain;\n \n\t\t return this;\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t super.updateMatrixWorld( force );\n \n\t\t if ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n \n\t\t this.matrixWorld.decompose( _position, _quaternion, _scale );\n \n\t\t _orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n \n\t\t const panner = this.panner;\n \n\t\t if ( panner.positionX ) {\n \n\t\t\t // code path for Chrome and Firefox (see #14393)\n \n\t\t\t const endTime = this.context.currentTime + this.listener.timeDelta;\n \n\t\t\t panner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\t panner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\t panner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\t panner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\t panner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\t panner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n \n\t\t } else {\n \n\t\t\t panner.setPosition( _position.x, _position.y, _position.z );\n\t\t\t panner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n \n\t\t }\n \n\t }\n \n }\n \n class AudioAnalyser {\n \n\t constructor( audio, fftSize = 2048 ) {\n \n\t\t this.analyser = audio.context.createAnalyser();\n\t\t this.analyser.fftSize = fftSize;\n \n\t\t this.data = new Uint8Array( this.analyser.frequencyBinCount );\n \n\t\t audio.getOutput().connect( this.analyser );\n \n\t }\n \n \n\t getFrequencyData() {\n \n\t\t this.analyser.getByteFrequencyData( this.data );\n \n\t\t return this.data;\n \n\t }\n \n\t getAverageFrequency() {\n \n\t\t let value = 0;\n\t\t const data = this.getFrequencyData();\n \n\t\t for ( let i = 0; i < data.length; i ++ ) {\n \n\t\t\t value += data[ i ];\n \n\t\t }\n \n\t\t return value / data.length;\n \n\t }\n \n }\n \n class PropertyMixer {\n \n\t constructor( binding, typeName, valueSize ) {\n \n\t\t this.binding = binding;\n\t\t this.valueSize = valueSize;\n \n\t\t let mixFunction,\n\t\t\t mixFunctionAdditive,\n\t\t\t setIdentity;\n \n\t\t // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t //\n\t\t // interpolators can use .buffer as their .result\n\t\t // the data then goes to 'incoming'\n\t\t //\n\t\t // 'accu0' and 'accu1' are used frame-interleaved for\n\t\t // the cumulative result and are compared to detect\n\t\t // changes\n\t\t //\n\t\t // 'orig' stores the original state of the property\n\t\t //\n\t\t // 'add' is used for additive cumulative results\n\t\t //\n\t\t // 'work' is optional and is only present for quaternion types. It is used\n\t\t // to store intermediate quaternion multiplication results\n \n\t\t switch ( typeName ) {\n \n\t\t\t case 'quaternion':\n\t\t\t\t mixFunction = this._slerp;\n\t\t\t\t mixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t setIdentity = this._setAdditiveIdentityQuaternion;\n \n\t\t\t\t this.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\t this._workIndex = 5;\n\t\t\t\t break;\n \n\t\t\t case 'string':\n\t\t\t case 'bool':\n\t\t\t\t mixFunction = this._select;\n \n\t\t\t\t // Use the regular mix function and for additive on these types,\n\t\t\t\t // additive is not relevant for non-numeric types\n\t\t\t\t mixFunctionAdditive = this._select;\n \n\t\t\t\t setIdentity = this._setAdditiveIdentityOther;\n \n\t\t\t\t this.buffer = new Array( valueSize * 5 );\n\t\t\t\t break;\n \n\t\t\t default:\n\t\t\t\t mixFunction = this._lerp;\n\t\t\t\t mixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t setIdentity = this._setAdditiveIdentityNumeric;\n \n\t\t\t\t this.buffer = new Float64Array( valueSize * 5 );\n \n\t\t }\n \n\t\t this._mixBufferRegion = mixFunction;\n\t\t this._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t this._setIdentity = setIdentity;\n\t\t this._origIndex = 3;\n\t\t this._addIndex = 4;\n \n\t\t this.cumulativeWeight = 0;\n\t\t this.cumulativeWeightAdditive = 0;\n \n\t\t this.useCount = 0;\n\t\t this.referenceCount = 0;\n \n\t }\n \n\t // accumulate data in the 'incoming' region into 'accu<i>'\n\t accumulate( accuIndex, weight ) {\n \n\t\t // note: happily accumulating nothing when weight = 0, the caller knows\n\t\t // the weight and shouldn't have made the call in the first place\n \n\t\t const buffer = this.buffer,\n\t\t\t stride = this.valueSize,\n\t\t\t offset = accuIndex * stride + stride;\n \n\t\t let currentWeight = this.cumulativeWeight;\n \n\t\t if ( currentWeight === 0 ) {\n \n\t\t\t // accuN := incoming * weight\n \n\t\t\t for ( let i = 0; i !== stride; ++ i ) {\n \n\t\t\t\t buffer[ offset + i ] = buffer[ i ];\n \n\t\t\t }\n \n\t\t\t currentWeight = weight;\n \n\t\t } else {\n \n\t\t\t // accuN := accuN + incoming * weight\n \n\t\t\t currentWeight += weight;\n\t\t\t const mix = weight / currentWeight;\n\t\t\t this._mixBufferRegion( buffer, offset, 0, mix, stride );\n \n\t\t }\n \n\t\t this.cumulativeWeight = currentWeight;\n \n\t }\n \n\t // accumulate data in the 'incoming' region into 'add'\n\t accumulateAdditive( weight ) {\n \n\t\t const buffer = this.buffer,\n\t\t\t stride = this.valueSize,\n\t\t\t offset = stride * this._addIndex;\n \n\t\t if ( this.cumulativeWeightAdditive === 0 ) {\n \n\t\t\t // add = identity\n \n\t\t\t this._setIdentity();\n \n\t\t }\n \n\t\t // add := add + incoming * weight\n \n\t\t this._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\t this.cumulativeWeightAdditive += weight;\n \n\t }\n \n\t // apply the state of 'accu<i>' to the binding when accus differ\n\t apply( accuIndex ) {\n \n\t\t const stride = this.valueSize,\n\t\t\t buffer = this.buffer,\n\t\t\t offset = accuIndex * stride + stride,\n \n\t\t\t weight = this.cumulativeWeight,\n\t\t\t weightAdditive = this.cumulativeWeightAdditive,\n \n\t\t\t binding = this.binding;\n \n\t\t this.cumulativeWeight = 0;\n\t\t this.cumulativeWeightAdditive = 0;\n \n\t\t if ( weight < 1 ) {\n \n\t\t\t // accuN := accuN + original * ( 1 - cumulativeWeight )\n \n\t\t\t const originalValueOffset = stride * this._origIndex;\n \n\t\t\t this._mixBufferRegion(\n\t\t\t\t buffer, offset, originalValueOffset, 1 - weight, stride );\n \n\t\t }\n \n\t\t if ( weightAdditive > 0 ) {\n \n\t\t\t // accuN := accuN + additive accuN\n \n\t\t\t this._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n \n\t\t }\n \n\t\t for ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n \n\t\t\t if ( buffer[ i ] !== buffer[ i + stride ] ) {\n \n\t\t\t\t // value has changed -> update scene graph\n \n\t\t\t\t binding.setValue( buffer, offset );\n\t\t\t\t break;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t // remember the state of the bound property and copy it to both accus\n\t saveOriginalState() {\n \n\t\t const binding = this.binding;\n \n\t\t const buffer = this.buffer,\n\t\t\t stride = this.valueSize,\n \n\t\t\t originalValueOffset = stride * this._origIndex;\n \n\t\t binding.getValue( buffer, originalValueOffset );\n \n\t\t // accu[0..1] := orig -- initially detect changes against the original\n\t\t for ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n \n\t\t\t buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n \n\t\t }\n \n\t\t // Add to identity for additive\n\t\t this._setIdentity();\n \n\t\t this.cumulativeWeight = 0;\n\t\t this.cumulativeWeightAdditive = 0;\n \n\t }\n \n\t // apply the state previously taken via 'saveOriginalState' to the binding\n\t restoreOriginalState() {\n \n\t\t const originalValueOffset = this.valueSize * 3;\n\t\t this.binding.setValue( this.buffer, originalValueOffset );\n \n\t }\n \n\t _setAdditiveIdentityNumeric() {\n \n\t\t const startIndex = this._addIndex * this.valueSize;\n\t\t const endIndex = startIndex + this.valueSize;\n \n\t\t for ( let i = startIndex; i < endIndex; i ++ ) {\n \n\t\t\t this.buffer[ i ] = 0;\n \n\t\t }\n \n\t }\n \n\t _setAdditiveIdentityQuaternion() {\n \n\t\t this._setAdditiveIdentityNumeric();\n\t\t this.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n \n\t }\n \n\t _setAdditiveIdentityOther() {\n \n\t\t const startIndex = this._origIndex * this.valueSize;\n\t\t const targetIndex = this._addIndex * this.valueSize;\n \n\t\t for ( let i = 0; i < this.valueSize; i ++ ) {\n \n\t\t\t this.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n \n\t\t }\n \n\t }\n \n \n\t // mix functions\n \n\t _select( buffer, dstOffset, srcOffset, t, stride ) {\n \n\t\t if ( t >= 0.5 ) {\n \n\t\t\t for ( let i = 0; i !== stride; ++ i ) {\n \n\t\t\t\t buffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t _slerp( buffer, dstOffset, srcOffset, t ) {\n \n\t\t Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n \n\t }\n \n\t _slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n \n\t\t const workOffset = this._workIndex * stride;\n \n\t\t // Store result in intermediate buffer offset\n\t\t Quaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n \n\t\t // Slerp to the intermediate result\n\t\t Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n \n\t }\n \n\t _lerp( buffer, dstOffset, srcOffset, t, stride ) {\n \n\t\t const s = 1 - t;\n \n\t\t for ( let i = 0; i !== stride; ++ i ) {\n \n\t\t\t const j = dstOffset + i;\n \n\t\t\t buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n \n\t\t }\n \n\t }\n \n\t _lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n \n\t\t for ( let i = 0; i !== stride; ++ i ) {\n \n\t\t\t const j = dstOffset + i;\n \n\t\t\t buffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n \n\t\t }\n \n\t }\n \n }\n \n // Characters [].:/ are reserved for track binding syntax.\n const _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n const _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n \n // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n // only latin characters, and the unicode \\p{L} is not yet supported. So\n // instead, we exclude reserved characters and match everything else.\n const _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n const _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n \n // Parent directories, delimited by '/' or ':'. Currently unused, but must\n // be matched to parse the rest of the track name.\n const _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n \n // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n const _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n \n // Object on target node, and accessor. May not contain reserved\n // characters. Accessor may contain any character except closing bracket.\n const _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n \n // Property and accessor. May not contain reserved characters. Accessor may\n // contain any non-bracket characters.\n const _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n \n const _trackRe = new RegExp( ''\n\t + '^'\n\t + _directoryRe\n\t + _nodeRe\n\t + _objectRe\n\t + _propertyRe\n\t + '$'\n );\n \n const _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n \n class Composite {\n \n\t constructor( targetGroup, path, optionalParsedPath ) {\n \n\t\t const parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n \n\t\t this._targetGroup = targetGroup;\n\t\t this._bindings = targetGroup.subscribe_( path, parsedPath );\n \n\t }\n \n\t getValue( array, offset ) {\n \n\t\t this.bind(); // bind all binding\n \n\t\t const firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t binding = this._bindings[ firstValidIndex ];\n \n\t\t // and only call .getValue on the first\n\t\t if ( binding !== undefined ) binding.getValue( array, offset );\n \n\t }\n \n\t setValue( array, offset ) {\n \n\t\t const bindings = this._bindings;\n \n\t\t for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n \n\t\t\t bindings[ i ].setValue( array, offset );\n \n\t\t }\n \n\t }\n \n\t bind() {\n \n\t\t const bindings = this._bindings;\n \n\t\t for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n \n\t\t\t bindings[ i ].bind();\n \n\t\t }\n \n\t }\n \n\t unbind() {\n \n\t\t const bindings = this._bindings;\n \n\t\t for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n \n\t\t\t bindings[ i ].unbind();\n \n\t\t }\n \n\t }\n \n }\n \n // Note: This class uses a State pattern on a per-method basis:\n // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n // prototype version of these methods with one that represents\n // the bound state. When the property is not found, the methods\n // become no-ops.\n class PropertyBinding {\n \n\t constructor( rootNode, path, parsedPath ) {\n \n\t\t this.path = path;\n\t\t this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n \n\t\t this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n \n\t\t this.rootNode = rootNode;\n \n\t\t // initial state of these methods that calls 'bind'\n\t\t this.getValue = this._getValue_unbound;\n\t\t this.setValue = this._setValue_unbound;\n \n\t }\n \n \n\t static create( root, path, parsedPath ) {\n \n\t\t if ( ! ( root && root.isAnimationObjectGroup ) ) {\n \n\t\t\t return new PropertyBinding( root, path, parsedPath );\n \n\t\t } else {\n \n\t\t\t return new PropertyBinding.Composite( root, path, parsedPath );\n \n\t\t }\n \n\t }\n \n\t /**\n\t  * Replaces spaces with underscores and removes unsupported characters from\n\t  * node names, to ensure compatibility with parseTrackName().\n\t  *\n\t  * @param {string} name Node name to be sanitized.\n\t  * @return {string}\n\t  */\n\t static sanitizeNodeName( name ) {\n \n\t\t return name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n \n\t }\n \n\t static parseTrackName( trackName ) {\n \n\t\t const matches = _trackRe.exec( trackName );\n \n\t\t if ( ! matches ) {\n \n\t\t\t throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n \n\t\t }\n \n\t\t const results = {\n\t\t\t // directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t nodeName: matches[ 2 ],\n\t\t\t objectName: matches[ 3 ],\n\t\t\t objectIndex: matches[ 4 ],\n\t\t\t propertyName: matches[ 5 ], // required\n\t\t\t propertyIndex: matches[ 6 ]\n\t\t };\n \n\t\t const lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n \n\t\t if ( lastDot !== undefined && lastDot !== - 1 ) {\n \n\t\t\t const objectName = results.nodeName.substring( lastDot + 1 );\n \n\t\t\t // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t // 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t // include '.' characters).\n\t\t\t if ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n \n\t\t\t\t results.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t results.objectName = objectName;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( results.propertyName === null || results.propertyName.length === 0 ) {\n \n\t\t\t throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n \n\t\t }\n \n\t\t return results;\n \n\t }\n \n\t static findNode( root, nodeName ) {\n \n\t\t if ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n \n\t\t\t return root;\n \n\t\t }\n \n\t\t // search into skeleton bones.\n\t\t if ( root.skeleton ) {\n \n\t\t\t const bone = root.skeleton.getBoneByName( nodeName );\n \n\t\t\t if ( bone !== undefined ) {\n \n\t\t\t\t return bone;\n \n\t\t\t }\n \n\t\t }\n \n\t\t // search into node subtree.\n\t\t if ( root.children ) {\n \n\t\t\t const searchNodeSubtree = function ( children ) {\n \n\t\t\t\t for ( let i = 0; i < children.length; i ++ ) {\n \n\t\t\t\t\t const childNode = children[ i ];\n \n\t\t\t\t\t if ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n \n\t\t\t\t\t\t return childNode;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t const result = searchNodeSubtree( childNode.children );\n \n\t\t\t\t\t if ( result ) return result;\n \n\t\t\t\t }\n \n\t\t\t\t return null;\n \n\t\t\t };\n \n\t\t\t const subTreeNode = searchNodeSubtree( root.children );\n \n\t\t\t if ( subTreeNode ) {\n \n\t\t\t\t return subTreeNode;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return null;\n \n\t }\n \n\t // these are used to \"bind\" a nonexistent property\n\t _getValue_unavailable() {}\n\t _setValue_unavailable() {}\n \n\t // Getters\n \n\t _getValue_direct( buffer, offset ) {\n \n\t\t buffer[ offset ] = this.node[ this.propertyName ];\n \n\t }\n \n\t _getValue_array( buffer, offset ) {\n \n\t\t const source = this.resolvedProperty;\n \n\t\t for ( let i = 0, n = source.length; i !== n; ++ i ) {\n \n\t\t\t buffer[ offset ++ ] = source[ i ];\n \n\t\t }\n \n\t }\n \n\t _getValue_arrayElement( buffer, offset ) {\n \n\t\t buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n \n\t }\n \n\t _getValue_toArray( buffer, offset ) {\n \n\t\t this.resolvedProperty.toArray( buffer, offset );\n \n\t }\n \n\t // Direct\n \n\t _setValue_direct( buffer, offset ) {\n \n\t\t this.targetObject[ this.propertyName ] = buffer[ offset ];\n \n\t }\n \n\t _setValue_direct_setNeedsUpdate( buffer, offset ) {\n \n\t\t this.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t this.targetObject.needsUpdate = true;\n \n\t }\n \n\t _setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n\t\t this.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\n \n\t }\n \n\t // EntireArray\n \n\t _setValue_array( buffer, offset ) {\n \n\t\t const dest = this.resolvedProperty;\n \n\t\t for ( let i = 0, n = dest.length; i !== n; ++ i ) {\n \n\t\t\t dest[ i ] = buffer[ offset ++ ];\n \n\t\t }\n \n\t }\n \n\t _setValue_array_setNeedsUpdate( buffer, offset ) {\n \n\t\t const dest = this.resolvedProperty;\n \n\t\t for ( let i = 0, n = dest.length; i !== n; ++ i ) {\n \n\t\t\t dest[ i ] = buffer[ offset ++ ];\n \n\t\t }\n \n\t\t this.targetObject.needsUpdate = true;\n \n\t }\n \n\t _setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n\t\t const dest = this.resolvedProperty;\n \n\t\t for ( let i = 0, n = dest.length; i !== n; ++ i ) {\n \n\t\t\t dest[ i ] = buffer[ offset ++ ];\n \n\t\t }\n \n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\n \n\t }\n \n\t // ArrayElement\n \n\t _setValue_arrayElement( buffer, offset ) {\n \n\t\t this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n \n\t }\n \n\t _setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n \n\t\t this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t this.targetObject.needsUpdate = true;\n \n\t }\n \n\t _setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n\t\t this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\n \n\t }\n \n\t // HasToFromArray\n \n\t _setValue_fromArray( buffer, offset ) {\n \n\t\t this.resolvedProperty.fromArray( buffer, offset );\n \n\t }\n \n\t _setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n \n\t\t this.resolvedProperty.fromArray( buffer, offset );\n\t\t this.targetObject.needsUpdate = true;\n \n\t }\n \n\t _setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n \n\t\t this.resolvedProperty.fromArray( buffer, offset );\n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\n \n\t }\n \n\t _getValue_unbound( targetArray, offset ) {\n \n\t\t this.bind();\n\t\t this.getValue( targetArray, offset );\n \n\t }\n \n\t _setValue_unbound( sourceArray, offset ) {\n \n\t\t this.bind();\n\t\t this.setValue( sourceArray, offset );\n \n\t }\n \n\t // create getter / setter pair for a property in the scene graph\n\t bind() {\n \n\t\t let targetObject = this.node;\n\t\t const parsedPath = this.parsedPath;\n \n\t\t const objectName = parsedPath.objectName;\n\t\t const propertyName = parsedPath.propertyName;\n\t\t let propertyIndex = parsedPath.propertyIndex;\n \n\t\t if ( ! targetObject ) {\n \n\t\t\t targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n \n\t\t\t this.node = targetObject;\n \n\t\t }\n \n\t\t // set fail state so we can just 'return' on error\n\t\t this.getValue = this._getValue_unavailable;\n\t\t this.setValue = this._setValue_unavailable;\n \n\t\t // ensure there is a value node\n\t\t if ( ! targetObject ) {\n \n\t\t\t console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t return;\n \n\t\t }\n \n\t\t if ( objectName ) {\n \n\t\t\t let objectIndex = parsedPath.objectIndex;\n \n\t\t\t // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t switch ( objectName ) {\n \n\t\t\t\t case 'materials':\n \n\t\t\t\t\t if ( ! targetObject.material ) {\n \n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t return;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( ! targetObject.material.materials ) {\n \n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t return;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t targetObject = targetObject.material.materials;\n \n\t\t\t\t\t break;\n \n\t\t\t\t case 'bones':\n \n\t\t\t\t\t if ( ! targetObject.skeleton ) {\n \n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t return;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t // and convert the integer string to a true integer.\n \n\t\t\t\t\t targetObject = targetObject.skeleton.bones;\n \n\t\t\t\t\t // support resolving morphTarget names into indices.\n\t\t\t\t\t for ( let i = 0; i < targetObject.length; i ++ ) {\n \n\t\t\t\t\t\t if ( targetObject[ i ].name === objectIndex ) {\n \n\t\t\t\t\t\t\t objectIndex = i;\n\t\t\t\t\t\t\t break;\n \n\t\t\t\t\t\t }\n \n\t\t\t\t\t }\n \n\t\t\t\t\t break;\n \n\t\t\t\t default:\n \n\t\t\t\t\t if ( targetObject[ objectName ] === undefined ) {\n \n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t return;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t targetObject = targetObject[ objectName ];\n \n\t\t\t }\n \n \n\t\t\t if ( objectIndex !== undefined ) {\n \n\t\t\t\t if ( targetObject[ objectIndex ] === undefined ) {\n \n\t\t\t\t\t console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t return;\n \n\t\t\t\t }\n \n\t\t\t\t targetObject = targetObject[ objectIndex ];\n \n\t\t\t }\n \n\t\t }\n \n\t\t // resolve property\n\t\t const nodeProperty = targetObject[ propertyName ];\n \n\t\t if ( nodeProperty === undefined ) {\n \n\t\t\t const nodeName = parsedPath.nodeName;\n \n\t\t\t console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t '.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t return;\n \n\t\t }\n \n\t\t // determine versioning scheme\n\t\t let versioning = this.Versioning.None;\n \n\t\t this.targetObject = targetObject;\n \n\t\t if ( targetObject.needsUpdate !== undefined ) { // material\n \n\t\t\t versioning = this.Versioning.NeedsUpdate;\n \n\t\t } else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n \n\t\t\t versioning = this.Versioning.MatrixWorldNeedsUpdate;\n \n\t\t }\n \n\t\t // determine how the property gets bound\n\t\t let bindingType = this.BindingType.Direct;\n \n\t\t if ( propertyIndex !== undefined ) {\n \n\t\t\t // access a sub element of the property array (only primitives are supported right now)\n \n\t\t\t if ( propertyName === 'morphTargetInfluences' ) {\n \n\t\t\t\t // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n \n\t\t\t\t // support resolving morphTarget names into indices.\n\t\t\t\t if ( ! targetObject.geometry ) {\n \n\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t return;\n \n\t\t\t\t }\n \n\t\t\t\t if ( targetObject.geometry.isBufferGeometry ) {\n \n\t\t\t\t\t if ( ! targetObject.geometry.morphAttributes ) {\n \n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t return;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t if ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n \n\t\t\t\t\t\t propertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n \n\t\t\t\t\t }\n \n \n\t\t\t\t } else {\n \n\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\t return;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t bindingType = this.BindingType.ArrayElement;\n \n\t\t\t this.resolvedProperty = nodeProperty;\n\t\t\t this.propertyIndex = propertyIndex;\n \n\t\t } else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n \n\t\t\t // must use copy for Object3D.Euler/Quaternion\n \n\t\t\t bindingType = this.BindingType.HasFromToArray;\n \n\t\t\t this.resolvedProperty = nodeProperty;\n \n\t\t } else if ( Array.isArray( nodeProperty ) ) {\n \n\t\t\t bindingType = this.BindingType.EntireArray;\n \n\t\t\t this.resolvedProperty = nodeProperty;\n \n\t\t } else {\n \n\t\t\t this.propertyName = propertyName;\n \n\t\t }\n \n\t\t // select getter / setter\n\t\t this.getValue = this.GetterByBindingType[ bindingType ];\n\t\t this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n \n\t }\n \n\t unbind() {\n \n\t\t this.node = null;\n \n\t\t // back to the prototype version of getValue / setValue\n\t\t // note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t this.getValue = this._getValue_unbound;\n\t\t this.setValue = this._setValue_unbound;\n \n\t }\n \n }\n \n PropertyBinding.Composite = Composite;\n \n PropertyBinding.prototype.BindingType = {\n\t Direct: 0,\n\t EntireArray: 1,\n\t ArrayElement: 2,\n\t HasFromToArray: 3\n };\n \n PropertyBinding.prototype.Versioning = {\n\t None: 0,\n\t NeedsUpdate: 1,\n\t MatrixWorldNeedsUpdate: 2\n };\n \n PropertyBinding.prototype.GetterByBindingType = [\n \n\t PropertyBinding.prototype._getValue_direct,\n\t PropertyBinding.prototype._getValue_array,\n\t PropertyBinding.prototype._getValue_arrayElement,\n\t PropertyBinding.prototype._getValue_toArray,\n \n ];\n \n PropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n \n\t [\n\t\t // Direct\n\t\t PropertyBinding.prototype._setValue_direct,\n\t\t PropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\t PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n \n\t ], [\n \n\t\t // EntireArray\n \n\t\t PropertyBinding.prototype._setValue_array,\n\t\t PropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\t PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n \n\t ], [\n \n\t\t // ArrayElement\n\t\t PropertyBinding.prototype._setValue_arrayElement,\n\t\t PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\t PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n \n\t ], [\n \n\t\t // HasToFromArray\n\t\t PropertyBinding.prototype._setValue_fromArray,\n\t\t PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\t PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n \n\t ]\n \n ];\n \n /**\n  *\n  * A group of objects that receives a shared animation state.\n  *\n  * Usage:\n  *\n  *  - Add objects you would otherwise pass as 'root' to the\n  *    constructor or the .clipAction method of AnimationMixer.\n  *\n  *  - Instead pass this object as 'root'.\n  *\n  *  - You can also add and remove objects later when the mixer\n  *    is running.\n  *\n  * Note:\n  *\n  *    Objects of this class appear as one object to the mixer,\n  *    so cache control of the individual objects must be done\n  *    on the group.\n  *\n  * Limitation:\n  *\n  *  - The animated properties must be compatible among the\n  *    all objects in the group.\n  *\n  *  - A single property can either be controlled through a\n  *    target group or directly, but not both.\n  */\n \n class AnimationObjectGroup {\n \n\t constructor() {\n \n\t\t this.uuid = generateUUID();\n \n\t\t // cached objects followed by the active ones\n\t\t this._objects = Array.prototype.slice.call( arguments );\n \n\t\t this.nCachedObjects_ = 0; // threshold\n\t\t // note: read by PropertyBinding.Composite\n \n\t\t const indices = {};\n\t\t this._indicesByUUID = indices; // for bookkeeping\n \n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n\t\t\t indices[ arguments[ i ].uuid ] = i;\n \n\t\t }\n \n\t\t this._paths = []; // inside: string\n\t\t this._parsedPaths = []; // inside: { we don't care, here }\n\t\t this._bindings = []; // inside: Array< PropertyBinding >\n\t\t this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n \n\t\t const scope = this;\n \n\t\t this.stats = {\n \n\t\t\t objects: {\n\t\t\t\t get total() {\n \n\t\t\t\t\t return scope._objects.length;\n \n\t\t\t\t },\n\t\t\t\t get inUse() {\n \n\t\t\t\t\t return this.total - scope.nCachedObjects_;\n \n\t\t\t\t }\n\t\t\t },\n\t\t\t get bindingsPerObject() {\n \n\t\t\t\t return scope._bindings.length;\n \n\t\t\t }\n \n\t\t };\n \n\t }\n \n\t add() {\n \n\t\t const objects = this._objects,\n\t\t\t indicesByUUID = this._indicesByUUID,\n\t\t\t paths = this._paths,\n\t\t\t parsedPaths = this._parsedPaths,\n\t\t\t bindings = this._bindings,\n\t\t\t nBindings = bindings.length;\n \n\t\t let knownObject = undefined,\n\t\t\t nObjects = objects.length,\n\t\t\t nCachedObjects = this.nCachedObjects_;\n \n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n\t\t\t const object = arguments[ i ],\n\t\t\t\t uuid = object.uuid;\n\t\t\t let index = indicesByUUID[ uuid ];\n \n\t\t\t if ( index === undefined ) {\n \n\t\t\t\t // unknown object -> add it to the ACTIVE region\n \n\t\t\t\t index = nObjects ++;\n\t\t\t\t indicesByUUID[ uuid ] = index;\n\t\t\t\t objects.push( object );\n \n\t\t\t\t // accounting is done, now do the same for all bindings\n \n\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n\t\t\t\t\t bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n \n\t\t\t\t }\n \n\t\t\t } else if ( index < nCachedObjects ) {\n \n\t\t\t\t knownObject = objects[ index ];\n \n\t\t\t\t // move existing object to the ACTIVE region\n \n\t\t\t\t const firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t lastCachedObject = objects[ firstActiveIndex ];\n \n\t\t\t\t indicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t objects[ index ] = lastCachedObject;\n \n\t\t\t\t indicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t objects[ firstActiveIndex ] = object;\n \n\t\t\t\t // accounting is done, now do the same for all bindings\n \n\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n\t\t\t\t\t const bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t lastCached = bindingsForPath[ firstActiveIndex ];\n \n\t\t\t\t\t let binding = bindingsForPath[ index ];\n \n\t\t\t\t\t bindingsForPath[ index ] = lastCached;\n \n\t\t\t\t\t if ( binding === undefined ) {\n \n\t\t\t\t\t\t // since we do not bother to create new bindings\n\t\t\t\t\t\t // for objects that are cached, the binding may\n\t\t\t\t\t\t // or may not exist\n \n\t\t\t\t\t\t binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t bindingsForPath[ firstActiveIndex ] = binding;\n \n\t\t\t\t }\n \n\t\t\t } else if ( objects[ index ] !== knownObject ) {\n \n\t\t\t\t console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t 'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n \n\t\t\t } // else the object is already where we want it to be\n \n\t\t } // for arguments\n \n\t\t this.nCachedObjects_ = nCachedObjects;\n \n\t }\n \n\t remove() {\n \n\t\t const objects = this._objects,\n\t\t\t indicesByUUID = this._indicesByUUID,\n\t\t\t bindings = this._bindings,\n\t\t\t nBindings = bindings.length;\n \n\t\t let nCachedObjects = this.nCachedObjects_;\n \n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n\t\t\t const object = arguments[ i ],\n\t\t\t\t uuid = object.uuid,\n\t\t\t\t index = indicesByUUID[ uuid ];\n \n\t\t\t if ( index !== undefined && index >= nCachedObjects ) {\n \n\t\t\t\t // move existing object into the CACHED region\n \n\t\t\t\t const lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t firstActiveObject = objects[ lastCachedIndex ];\n \n\t\t\t\t indicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t objects[ index ] = firstActiveObject;\n \n\t\t\t\t indicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t objects[ lastCachedIndex ] = object;\n \n\t\t\t\t // accounting is done, now do the same for all bindings\n \n\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n\t\t\t\t\t const bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t firstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t binding = bindingsForPath[ index ];\n \n\t\t\t\t\t bindingsForPath[ index ] = firstActive;\n\t\t\t\t\t bindingsForPath[ lastCachedIndex ] = binding;\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t } // for arguments\n \n\t\t this.nCachedObjects_ = nCachedObjects;\n \n\t }\n \n\t // remove & forget\n\t uncache() {\n \n\t\t const objects = this._objects,\n\t\t\t indicesByUUID = this._indicesByUUID,\n\t\t\t bindings = this._bindings,\n\t\t\t nBindings = bindings.length;\n \n\t\t let nCachedObjects = this.nCachedObjects_,\n\t\t\t nObjects = objects.length;\n \n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n \n\t\t\t const object = arguments[ i ],\n\t\t\t\t uuid = object.uuid,\n\t\t\t\t index = indicesByUUID[ uuid ];\n \n\t\t\t if ( index !== undefined ) {\n \n\t\t\t\t delete indicesByUUID[ uuid ];\n \n\t\t\t\t if ( index < nCachedObjects ) {\n \n\t\t\t\t\t // object is cached, shrink the CACHED region\n \n\t\t\t\t\t const firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t lastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t lastIndex = -- nObjects,\n\t\t\t\t\t\t lastObject = objects[ lastIndex ];\n \n\t\t\t\t\t // last cached object takes this object's place\n\t\t\t\t\t indicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t objects[ index ] = lastCachedObject;\n \n\t\t\t\t\t // last object goes to the activated slot and pop\n\t\t\t\t\t indicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t objects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t objects.pop();\n \n\t\t\t\t\t // accounting is done, now do the same for all bindings\n \n\t\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n\t\t\t\t\t\t const bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t lastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t last = bindingsForPath[ lastIndex ];\n \n\t\t\t\t\t\t bindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t bindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t bindingsForPath.pop();\n \n\t\t\t\t\t }\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // object is active, just swap with the last and pop\n \n\t\t\t\t\t const lastIndex = -- nObjects,\n\t\t\t\t\t\t lastObject = objects[ lastIndex ];\n \n\t\t\t\t\t if ( lastIndex > 0 ) {\n \n\t\t\t\t\t\t indicesByUUID[ lastObject.uuid ] = index;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t objects[ index ] = lastObject;\n\t\t\t\t\t objects.pop();\n \n\t\t\t\t\t // accounting is done, now do the same for all bindings\n \n\t\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\n \n\t\t\t\t\t\t const bindingsForPath = bindings[ j ];\n \n\t\t\t\t\t\t bindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t bindingsForPath.pop();\n \n\t\t\t\t\t }\n \n\t\t\t\t } // cached or active\n \n\t\t\t } // if object is known\n \n\t\t } // for arguments\n \n\t\t this.nCachedObjects_ = nCachedObjects;\n \n\t }\n \n\t // Internal interface used by befriended PropertyBinding.Composite:\n \n\t subscribe_( path, parsedPath ) {\n \n\t\t // returns an array of bindings for the given path that is changed\n\t\t // according to the contained objects in the group\n \n\t\t const indicesByPath = this._bindingsIndicesByPath;\n\t\t let index = indicesByPath[ path ];\n\t\t const bindings = this._bindings;\n \n\t\t if ( index !== undefined ) return bindings[ index ];\n \n\t\t const paths = this._paths,\n\t\t\t parsedPaths = this._parsedPaths,\n\t\t\t objects = this._objects,\n\t\t\t nObjects = objects.length,\n\t\t\t nCachedObjects = this.nCachedObjects_,\n\t\t\t bindingsForPath = new Array( nObjects );\n \n\t\t index = bindings.length;\n \n\t\t indicesByPath[ path ] = index;\n \n\t\t paths.push( path );\n\t\t parsedPaths.push( parsedPath );\n\t\t bindings.push( bindingsForPath );\n \n\t\t for ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n \n\t\t\t const object = objects[ i ];\n\t\t\t bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n \n\t\t }\n \n\t\t return bindingsForPath;\n \n\t }\n \n\t unsubscribe_( path ) {\n \n\t\t // tells the group to forget about a property path and no longer\n\t\t // update the array previously obtained with 'subscribe_'\n \n\t\t const indicesByPath = this._bindingsIndicesByPath,\n\t\t\t index = indicesByPath[ path ];\n \n\t\t if ( index !== undefined ) {\n \n\t\t\t const paths = this._paths,\n\t\t\t\t parsedPaths = this._parsedPaths,\n\t\t\t\t bindings = this._bindings,\n\t\t\t\t lastBindingsIndex = bindings.length - 1,\n\t\t\t\t lastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t lastBindingsPath = path[ lastBindingsIndex ];\n \n\t\t\t indicesByPath[ lastBindingsPath ] = index;\n \n\t\t\t bindings[ index ] = lastBindings;\n\t\t\t bindings.pop();\n \n\t\t\t parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t parsedPaths.pop();\n \n\t\t\t paths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t paths.pop();\n \n\t\t }\n \n\t }\n \n }\n \n AnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n \n class AnimationAction {\n \n\t constructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n \n\t\t this._mixer = mixer;\n\t\t this._clip = clip;\n\t\t this._localRoot = localRoot;\n\t\t this.blendMode = blendMode;\n \n\t\t const tracks = clip.tracks,\n\t\t\t nTracks = tracks.length,\n\t\t\t interpolants = new Array( nTracks );\n \n\t\t const interpolantSettings = {\n\t\t\t endingStart: ZeroCurvatureEnding,\n\t\t\t endingEnd: ZeroCurvatureEnding\n\t\t };\n \n\t\t for ( let i = 0; i !== nTracks; ++ i ) {\n \n\t\t\t const interpolant = tracks[ i ].createInterpolant( null );\n\t\t\t interpolants[ i ] = interpolant;\n\t\t\t interpolant.settings = interpolantSettings;\n \n\t\t }\n \n\t\t this._interpolantSettings = interpolantSettings;\n \n\t\t this._interpolants = interpolants; // bound by the mixer\n \n\t\t // inside: PropertyMixer (managed by the mixer)\n\t\t this._propertyBindings = new Array( nTracks );\n \n\t\t this._cacheIndex = null; // for the memory manager\n\t\t this._byClipCacheIndex = null; // for the memory manager\n \n\t\t this._timeScaleInterpolant = null;\n\t\t this._weightInterpolant = null;\n \n\t\t this.loop = LoopRepeat;\n\t\t this._loopCount = - 1;\n \n\t\t // global mixer time when the action is to be started\n\t\t // it's set back to 'null' upon start of the action\n\t\t this._startTime = null;\n \n\t\t // scaled local time of the action\n\t\t // gets clamped or wrapped to 0..clip.duration according to loop\n\t\t this.time = 0;\n \n\t\t this.timeScale = 1;\n\t\t this._effectiveTimeScale = 1;\n \n\t\t this.weight = 1;\n\t\t this._effectiveWeight = 1;\n \n\t\t this.repetitions = Infinity; // no. of repetitions when looping\n \n\t\t this.paused = false; // true -> zero effective time scale\n\t\t this.enabled = true; // false -> zero effective weight\n \n\t\t this.clampWhenFinished = false;// keep feeding the last frame?\n \n\t\t this.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\t this.zeroSlopeAtEnd = true;// clips for start, loop and end\n \n\t }\n \n\t // State & Scheduling\n \n\t play() {\n \n\t\t this._mixer._activateAction( this );\n \n\t\t return this;\n \n\t }\n \n\t stop() {\n \n\t\t this._mixer._deactivateAction( this );\n \n\t\t return this.reset();\n \n\t }\n \n\t reset() {\n \n\t\t this.paused = false;\n\t\t this.enabled = true;\n \n\t\t this.time = 0; // restart clip\n\t\t this._loopCount = - 1;// forget previous loops\n\t\t this._startTime = null;// forget scheduling\n \n\t\t return this.stopFading().stopWarping();\n \n\t }\n \n\t isRunning() {\n \n\t\t return this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t this._startTime === null && this._mixer._isActiveAction( this );\n \n\t }\n \n\t // return true when play has been called\n\t isScheduled() {\n \n\t\t return this._mixer._isActiveAction( this );\n \n\t }\n \n\t startAt( time ) {\n \n\t\t this._startTime = time;\n \n\t\t return this;\n \n\t }\n \n\t setLoop( mode, repetitions ) {\n \n\t\t this.loop = mode;\n\t\t this.repetitions = repetitions;\n \n\t\t return this;\n \n\t }\n \n\t // Weight\n \n\t // set the weight stopping any scheduled fading\n\t // although .enabled = false yields an effective weight of zero, this\n\t // method does *not* change .enabled, because it would be confusing\n\t setEffectiveWeight( weight ) {\n \n\t\t this.weight = weight;\n \n\t\t // note: same logic as when updated at runtime\n\t\t this._effectiveWeight = this.enabled ? weight : 0;\n \n\t\t return this.stopFading();\n \n\t }\n \n\t // return the weight considering fading and .enabled\n\t getEffectiveWeight() {\n \n\t\t return this._effectiveWeight;\n \n\t }\n \n\t fadeIn( duration ) {\n \n\t\t return this._scheduleFading( duration, 0, 1 );\n \n\t }\n \n\t fadeOut( duration ) {\n \n\t\t return this._scheduleFading( duration, 1, 0 );\n \n\t }\n \n\t crossFadeFrom( fadeOutAction, duration, warp ) {\n \n\t\t fadeOutAction.fadeOut( duration );\n\t\t this.fadeIn( duration );\n \n\t\t if ( warp ) {\n \n\t\t\t const fadeInDuration = this._clip.duration,\n\t\t\t\t fadeOutDuration = fadeOutAction._clip.duration,\n \n\t\t\t\t startEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t endStartRatio = fadeInDuration / fadeOutDuration;\n \n\t\t\t fadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t this.warp( endStartRatio, 1.0, duration );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t crossFadeTo( fadeInAction, duration, warp ) {\n \n\t\t return fadeInAction.crossFadeFrom( this, duration, warp );\n \n\t }\n \n\t stopFading() {\n \n\t\t const weightInterpolant = this._weightInterpolant;\n \n\t\t if ( weightInterpolant !== null ) {\n \n\t\t\t this._weightInterpolant = null;\n\t\t\t this._mixer._takeBackControlInterpolant( weightInterpolant );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // Time Scale Control\n \n\t // set the time scale stopping any scheduled warping\n\t // although .paused = true yields an effective time scale of zero, this\n\t // method does *not* change .paused, because it would be confusing\n\t setEffectiveTimeScale( timeScale ) {\n \n\t\t this.timeScale = timeScale;\n\t\t this._effectiveTimeScale = this.paused ? 0 : timeScale;\n \n\t\t return this.stopWarping();\n \n\t }\n \n\t // return the time scale considering warping and .paused\n\t getEffectiveTimeScale() {\n \n\t\t return this._effectiveTimeScale;\n \n\t }\n \n\t setDuration( duration ) {\n \n\t\t this.timeScale = this._clip.duration / duration;\n \n\t\t return this.stopWarping();\n \n\t }\n \n\t syncWith( action ) {\n \n\t\t this.time = action.time;\n\t\t this.timeScale = action.timeScale;\n \n\t\t return this.stopWarping();\n \n\t }\n \n\t halt( duration ) {\n \n\t\t return this.warp( this._effectiveTimeScale, 0, duration );\n \n\t }\n \n\t warp( startTimeScale, endTimeScale, duration ) {\n \n\t\t const mixer = this._mixer,\n\t\t\t now = mixer.time,\n\t\t\t timeScale = this.timeScale;\n \n\t\t let interpolant = this._timeScaleInterpolant;\n \n\t\t if ( interpolant === null ) {\n \n\t\t\t interpolant = mixer._lendControlInterpolant();\n\t\t\t this._timeScaleInterpolant = interpolant;\n \n\t\t }\n \n\t\t const times = interpolant.parameterPositions,\n\t\t\t values = interpolant.sampleValues;\n \n\t\t times[ 0 ] = now;\n\t\t times[ 1 ] = now + duration;\n \n\t\t values[ 0 ] = startTimeScale / timeScale;\n\t\t values[ 1 ] = endTimeScale / timeScale;\n \n\t\t return this;\n \n\t }\n \n\t stopWarping() {\n \n\t\t const timeScaleInterpolant = this._timeScaleInterpolant;\n \n\t\t if ( timeScaleInterpolant !== null ) {\n \n\t\t\t this._timeScaleInterpolant = null;\n\t\t\t this._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // Object Accessors\n \n\t getMixer() {\n \n\t\t return this._mixer;\n \n\t }\n \n\t getClip() {\n \n\t\t return this._clip;\n \n\t }\n \n\t getRoot() {\n \n\t\t return this._localRoot || this._mixer._root;\n \n\t }\n \n\t // Interna\n \n\t _update( time, deltaTime, timeDirection, accuIndex ) {\n \n\t\t // called by the mixer\n \n\t\t if ( ! this.enabled ) {\n \n\t\t\t // call ._updateWeight() to update ._effectiveWeight\n \n\t\t\t this._updateWeight( time );\n\t\t\t return;\n \n\t\t }\n \n\t\t const startTime = this._startTime;\n \n\t\t if ( startTime !== null ) {\n \n\t\t\t // check for scheduled start of action\n \n\t\t\t const timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t if ( timeRunning < 0 || timeDirection === 0 ) {\n \n\t\t\t\t return; // yet to come / don't decide when delta = 0\n \n\t\t\t }\n \n\t\t\t // start\n \n\t\t\t this._startTime = null; // unschedule\n\t\t\t deltaTime = timeDirection * timeRunning;\n \n\t\t }\n \n\t\t // apply time scale and advance time\n \n\t\t deltaTime *= this._updateTimeScale( time );\n\t\t const clipTime = this._updateTime( deltaTime );\n \n\t\t // note: _updateTime may disable the action resulting in\n\t\t // an effective weight of 0\n \n\t\t const weight = this._updateWeight( time );\n \n\t\t if ( weight > 0 ) {\n \n\t\t\t const interpolants = this._interpolants;\n\t\t\t const propertyMixers = this._propertyBindings;\n \n\t\t\t switch ( this.blendMode ) {\n \n\t\t\t\t case AdditiveAnimationBlendMode:\n \n\t\t\t\t\t for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n \n\t\t\t\t\t\t interpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\t propertyMixers[ j ].accumulateAdditive( weight );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t break;\n \n\t\t\t\t case NormalAnimationBlendMode:\n\t\t\t\t default:\n \n\t\t\t\t\t for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n \n\t\t\t\t\t\t interpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\t propertyMixers[ j ].accumulate( accuIndex, weight );\n \n\t\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t _updateWeight( time ) {\n \n\t\t let weight = 0;\n \n\t\t if ( this.enabled ) {\n \n\t\t\t weight = this.weight;\n\t\t\t const interpolant = this._weightInterpolant;\n \n\t\t\t if ( interpolant !== null ) {\n \n\t\t\t\t const interpolantValue = interpolant.evaluate( time )[ 0 ];\n \n\t\t\t\t weight *= interpolantValue;\n \n\t\t\t\t if ( time > interpolant.parameterPositions[ 1 ] ) {\n \n\t\t\t\t\t this.stopFading();\n \n\t\t\t\t\t if ( interpolantValue === 0 ) {\n \n\t\t\t\t\t\t // faded out, disable\n\t\t\t\t\t\t this.enabled = false;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t this._effectiveWeight = weight;\n\t\t return weight;\n \n\t }\n \n\t _updateTimeScale( time ) {\n \n\t\t let timeScale = 0;\n \n\t\t if ( ! this.paused ) {\n \n\t\t\t timeScale = this.timeScale;\n \n\t\t\t const interpolant = this._timeScaleInterpolant;\n \n\t\t\t if ( interpolant !== null ) {\n \n\t\t\t\t const interpolantValue = interpolant.evaluate( time )[ 0 ];\n \n\t\t\t\t timeScale *= interpolantValue;\n \n\t\t\t\t if ( time > interpolant.parameterPositions[ 1 ] ) {\n \n\t\t\t\t\t this.stopWarping();\n \n\t\t\t\t\t if ( timeScale === 0 ) {\n \n\t\t\t\t\t\t // motion has halted, pause\n\t\t\t\t\t\t this.paused = true;\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t // warp done - apply final time scale\n\t\t\t\t\t\t this.timeScale = timeScale;\n \n\t\t\t\t\t }\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t }\n \n\t\t this._effectiveTimeScale = timeScale;\n\t\t return timeScale;\n \n\t }\n \n\t _updateTime( deltaTime ) {\n \n\t\t const duration = this._clip.duration;\n\t\t const loop = this.loop;\n \n\t\t let time = this.time + deltaTime;\n\t\t let loopCount = this._loopCount;\n \n\t\t const pingPong = ( loop === LoopPingPong );\n \n\t\t if ( deltaTime === 0 ) {\n \n\t\t\t if ( loopCount === - 1 ) return time;\n \n\t\t\t return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n \n\t\t }\n \n\t\t if ( loop === LoopOnce ) {\n \n\t\t\t if ( loopCount === - 1 ) {\n \n\t\t\t\t // just started\n \n\t\t\t\t this._loopCount = 0;\n\t\t\t\t this._setEndings( true, true, false );\n \n\t\t\t }\n \n\t\t\t handle_stop: {\n \n\t\t\t\t if ( time >= duration ) {\n \n\t\t\t\t\t time = duration;\n \n\t\t\t\t } else if ( time < 0 ) {\n \n\t\t\t\t\t time = 0;\n \n\t\t\t\t } else {\n \n\t\t\t\t\t this.time = time;\n \n\t\t\t\t\t break handle_stop;\n \n\t\t\t\t }\n \n\t\t\t\t if ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t else this.enabled = false;\n \n\t\t\t\t this.time = time;\n \n\t\t\t\t this._mixer.dispatchEvent( {\n\t\t\t\t\t type: 'finished', action: this,\n\t\t\t\t\t direction: deltaTime < 0 ? - 1 : 1\n\t\t\t\t } );\n \n\t\t\t }\n \n\t\t } else { // repetitive Repeat or PingPong\n \n\t\t\t if ( loopCount === - 1 ) {\n \n\t\t\t\t // just started\n \n\t\t\t\t if ( deltaTime >= 0 ) {\n \n\t\t\t\t\t loopCount = 0;\n \n\t\t\t\t\t this._setEndings( true, this.repetitions === 0, pingPong );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // when looping in reverse direction, the initial\n\t\t\t\t\t // transition through zero counts as a repetition,\n\t\t\t\t\t // so leave loopCount at -1\n \n\t\t\t\t\t this._setEndings( this.repetitions === 0, true, pingPong );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t if ( time >= duration || time < 0 ) {\n \n\t\t\t\t // wrap around\n \n\t\t\t\t const loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t time -= duration * loopDelta;\n \n\t\t\t\t loopCount += Math.abs( loopDelta );\n \n\t\t\t\t const pending = this.repetitions - loopCount;\n \n\t\t\t\t if ( pending <= 0 ) {\n \n\t\t\t\t\t // have to stop (switch state, clamp time, fire event)\n \n\t\t\t\t\t if ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\t else this.enabled = false;\n \n\t\t\t\t\t time = deltaTime > 0 ? duration : 0;\n \n\t\t\t\t\t this.time = time;\n \n\t\t\t\t\t this._mixer.dispatchEvent( {\n\t\t\t\t\t\t type: 'finished', action: this,\n\t\t\t\t\t\t direction: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t } );\n \n\t\t\t\t } else {\n \n\t\t\t\t\t // keep running\n \n\t\t\t\t\t if ( pending === 1 ) {\n \n\t\t\t\t\t\t // entering the last round\n \n\t\t\t\t\t\t const atStart = deltaTime < 0;\n\t\t\t\t\t\t this._setEndings( atStart, ! atStart, pingPong );\n \n\t\t\t\t\t } else {\n \n\t\t\t\t\t\t this._setEndings( false, false, pingPong );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t this._loopCount = loopCount;\n \n\t\t\t\t\t this.time = time;\n \n\t\t\t\t\t this._mixer.dispatchEvent( {\n\t\t\t\t\t\t type: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t } );\n \n\t\t\t\t }\n \n\t\t\t } else {\n \n\t\t\t\t this.time = time;\n \n\t\t\t }\n \n\t\t\t if ( pingPong && ( loopCount & 1 ) === 1 ) {\n \n\t\t\t\t // invert time for the \"pong round\"\n \n\t\t\t\t return duration - time;\n \n\t\t\t }\n \n\t\t }\n \n\t\t return time;\n \n\t }\n \n\t _setEndings( atStart, atEnd, pingPong ) {\n \n\t\t const settings = this._interpolantSettings;\n \n\t\t if ( pingPong ) {\n \n\t\t\t settings.endingStart = ZeroSlopeEnding;\n\t\t\t settings.endingEnd = ZeroSlopeEnding;\n \n\t\t } else {\n \n\t\t\t // assuming for LoopOnce atStart == atEnd == true\n \n\t\t\t if ( atStart ) {\n \n\t\t\t\t settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n \n\t\t\t } else {\n \n\t\t\t\t settings.endingStart = WrapAroundEnding;\n \n\t\t\t }\n \n\t\t\t if ( atEnd ) {\n \n\t\t\t\t settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n \n\t\t\t } else {\n \n\t\t\t\t settings.endingEnd \t = WrapAroundEnding;\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t _scheduleFading( duration, weightNow, weightThen ) {\n \n\t\t const mixer = this._mixer, now = mixer.time;\n\t\t let interpolant = this._weightInterpolant;\n \n\t\t if ( interpolant === null ) {\n \n\t\t\t interpolant = mixer._lendControlInterpolant();\n\t\t\t this._weightInterpolant = interpolant;\n \n\t\t }\n \n\t\t const times = interpolant.parameterPositions,\n\t\t\t values = interpolant.sampleValues;\n \n\t\t times[ 0 ] = now;\n\t\t values[ 0 ] = weightNow;\n\t\t times[ 1 ] = now + duration;\n\t\t values[ 1 ] = weightThen;\n \n\t\t return this;\n \n\t }\n \n }\n \n class AnimationMixer extends EventDispatcher {\n \n\t constructor( root ) {\n \n\t\t super();\n \n\t\t this._root = root;\n\t\t this._initMemoryManager();\n\t\t this._accuIndex = 0;\n\t\t this.time = 0;\n\t\t this.timeScale = 1.0;\n \n\t }\n \n\t _bindAction( action, prototypeAction ) {\n \n\t\t const root = action._localRoot || this._root,\n\t\t\t tracks = action._clip.tracks,\n\t\t\t nTracks = tracks.length,\n\t\t\t bindings = action._propertyBindings,\n\t\t\t interpolants = action._interpolants,\n\t\t\t rootUuid = root.uuid,\n\t\t\t bindingsByRoot = this._bindingsByRootAndName;\n \n\t\t let bindingsByName = bindingsByRoot[ rootUuid ];\n \n\t\t if ( bindingsByName === undefined ) {\n \n\t\t\t bindingsByName = {};\n\t\t\t bindingsByRoot[ rootUuid ] = bindingsByName;\n \n\t\t }\n \n\t\t for ( let i = 0; i !== nTracks; ++ i ) {\n \n\t\t\t const track = tracks[ i ],\n\t\t\t\t trackName = track.name;\n \n\t\t\t let binding = bindingsByName[ trackName ];\n \n\t\t\t if ( binding !== undefined ) {\n \n\t\t\t\t bindings[ i ] = binding;\n \n\t\t\t } else {\n \n\t\t\t\t binding = bindings[ i ];\n \n\t\t\t\t if ( binding !== undefined ) {\n \n\t\t\t\t\t // existing binding, make sure the cache knows\n \n\t\t\t\t\t if ( binding._cacheIndex === null ) {\n \n\t\t\t\t\t\t ++ binding.referenceCount;\n\t\t\t\t\t\t this._addInactiveBinding( binding, rootUuid, trackName );\n \n\t\t\t\t\t }\n \n\t\t\t\t\t continue;\n \n\t\t\t\t }\n \n\t\t\t\t const path = prototypeAction && prototypeAction.\n\t\t\t\t\t _propertyBindings[ i ].binding.parsedPath;\n \n\t\t\t\t binding = new PropertyMixer(\n\t\t\t\t\t PropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t track.ValueTypeName, track.getValueSize() );\n \n\t\t\t\t ++ binding.referenceCount;\n\t\t\t\t this._addInactiveBinding( binding, rootUuid, trackName );\n \n\t\t\t\t bindings[ i ] = binding;\n \n\t\t\t }\n \n\t\t\t interpolants[ i ].resultBuffer = binding.buffer;\n \n\t\t }\n \n\t }\n \n\t _activateAction( action ) {\n \n\t\t if ( ! this._isActiveAction( action ) ) {\n \n\t\t\t if ( action._cacheIndex === null ) {\n \n\t\t\t\t // this action has been forgotten by the cache, but the user\n\t\t\t\t // appears to be still using it -> rebind\n \n\t\t\t\t const rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t clipUuid = action._clip.uuid,\n\t\t\t\t\t actionsForClip = this._actionsByClip[ clipUuid ];\n \n\t\t\t\t this._bindAction( action,\n\t\t\t\t\t actionsForClip && actionsForClip.knownActions[ 0 ] );\n \n\t\t\t\t this._addInactiveAction( action, clipUuid, rootUuid );\n \n\t\t\t }\n \n\t\t\t const bindings = action._propertyBindings;\n \n\t\t\t // increment reference counts / sort out state\n\t\t\t for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n \n\t\t\t\t const binding = bindings[ i ];\n \n\t\t\t\t if ( binding.useCount ++ === 0 ) {\n \n\t\t\t\t\t this._lendBinding( binding );\n\t\t\t\t\t binding.saveOriginalState();\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t this._lendAction( action );\n \n\t\t }\n \n\t }\n \n\t _deactivateAction( action ) {\n \n\t\t if ( this._isActiveAction( action ) ) {\n \n\t\t\t const bindings = action._propertyBindings;\n \n\t\t\t // decrement reference counts / sort out state\n\t\t\t for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n \n\t\t\t\t const binding = bindings[ i ];\n \n\t\t\t\t if ( -- binding.useCount === 0 ) {\n \n\t\t\t\t\t binding.restoreOriginalState();\n\t\t\t\t\t this._takeBackBinding( binding );\n \n\t\t\t\t }\n \n\t\t\t }\n \n\t\t\t this._takeBackAction( action );\n \n\t\t }\n \n\t }\n \n\t // Memory manager\n \n\t _initMemoryManager() {\n \n\t\t this._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t this._nActiveActions = 0;\n \n\t\t this._actionsByClip = {};\n\t\t // inside:\n\t\t // {\n\t\t // \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t // \tactionByRoot: AnimationAction - lookup\n\t\t // }\n \n \n\t\t this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t this._nActiveBindings = 0;\n \n\t\t this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n \n \n\t\t this._controlInterpolants = []; // same game as above\n\t\t this._nActiveControlInterpolants = 0;\n \n\t\t const scope = this;\n \n\t\t this.stats = {\n \n\t\t\t actions: {\n\t\t\t\t get total() {\n \n\t\t\t\t\t return scope._actions.length;\n \n\t\t\t\t },\n\t\t\t\t get inUse() {\n \n\t\t\t\t\t return scope._nActiveActions;\n \n\t\t\t\t }\n\t\t\t },\n\t\t\t bindings: {\n\t\t\t\t get total() {\n \n\t\t\t\t\t return scope._bindings.length;\n \n\t\t\t\t },\n\t\t\t\t get inUse() {\n \n\t\t\t\t\t return scope._nActiveBindings;\n \n\t\t\t\t }\n\t\t\t },\n\t\t\t controlInterpolants: {\n\t\t\t\t get total() {\n \n\t\t\t\t\t return scope._controlInterpolants.length;\n \n\t\t\t\t },\n\t\t\t\t get inUse() {\n \n\t\t\t\t\t return scope._nActiveControlInterpolants;\n \n\t\t\t\t }\n\t\t\t }\n \n\t\t };\n \n\t }\n \n\t // Memory management for AnimationAction objects\n \n\t _isActiveAction( action ) {\n \n\t\t const index = action._cacheIndex;\n\t\t return index !== null && index < this._nActiveActions;\n \n\t }\n \n\t _addInactiveAction( action, clipUuid, rootUuid ) {\n \n\t\t const actions = this._actions,\n\t\t\t actionsByClip = this._actionsByClip;\n \n\t\t let actionsForClip = actionsByClip[ clipUuid ];\n \n\t\t if ( actionsForClip === undefined ) {\n \n\t\t\t actionsForClip = {\n \n\t\t\t\t knownActions: [ action ],\n\t\t\t\t actionByRoot: {}\n \n\t\t\t };\n \n\t\t\t action._byClipCacheIndex = 0;\n \n\t\t\t actionsByClip[ clipUuid ] = actionsForClip;\n \n\t\t } else {\n \n\t\t\t const knownActions = actionsForClip.knownActions;\n \n\t\t\t action._byClipCacheIndex = knownActions.length;\n\t\t\t knownActions.push( action );\n \n\t\t }\n \n\t\t action._cacheIndex = actions.length;\n\t\t actions.push( action );\n \n\t\t actionsForClip.actionByRoot[ rootUuid ] = action;\n \n\t }\n \n\t _removeInactiveAction( action ) {\n \n\t\t const actions = this._actions,\n\t\t\t lastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t cacheIndex = action._cacheIndex;\n \n\t\t lastInactiveAction._cacheIndex = cacheIndex;\n\t\t actions[ cacheIndex ] = lastInactiveAction;\n\t\t actions.pop();\n \n\t\t action._cacheIndex = null;\n \n \n\t\t const clipUuid = action._clip.uuid,\n\t\t\t actionsByClip = this._actionsByClip,\n\t\t\t actionsForClip = actionsByClip[ clipUuid ],\n\t\t\t knownActionsForClip = actionsForClip.knownActions,\n \n\t\t\t lastKnownAction =\n\t\t\t\t knownActionsForClip[ knownActionsForClip.length - 1 ],\n \n\t\t\t byClipCacheIndex = action._byClipCacheIndex;\n \n\t\t lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t knownActionsForClip.pop();\n \n\t\t action._byClipCacheIndex = null;\n \n \n\t\t const actionByRoot = actionsForClip.actionByRoot,\n\t\t\t rootUuid = ( action._localRoot || this._root ).uuid;\n \n\t\t delete actionByRoot[ rootUuid ];\n \n\t\t if ( knownActionsForClip.length === 0 ) {\n \n\t\t\t delete actionsByClip[ clipUuid ];\n \n\t\t }\n \n\t\t this._removeInactiveBindingsForAction( action );\n \n\t }\n \n\t _removeInactiveBindingsForAction( action ) {\n \n\t\t const bindings = action._propertyBindings;\n \n\t\t for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n \n\t\t\t const binding = bindings[ i ];\n \n\t\t\t if ( -- binding.referenceCount === 0 ) {\n \n\t\t\t\t this._removeInactiveBinding( binding );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t _lendAction( action ) {\n \n\t\t // [ active actions |  inactive actions  ]\n\t\t // [  active actions >| inactive actions ]\n\t\t //                 s        a\n\t\t //                  <-swap->\n\t\t //                 a        s\n \n\t\t const actions = this._actions,\n\t\t\t prevIndex = action._cacheIndex,\n \n\t\t\t lastActiveIndex = this._nActiveActions ++,\n \n\t\t\t firstInactiveAction = actions[ lastActiveIndex ];\n \n\t\t action._cacheIndex = lastActiveIndex;\n\t\t actions[ lastActiveIndex ] = action;\n \n\t\t firstInactiveAction._cacheIndex = prevIndex;\n\t\t actions[ prevIndex ] = firstInactiveAction;\n \n\t }\n \n\t _takeBackAction( action ) {\n \n\t\t // [  active actions  | inactive actions ]\n\t\t // [ active actions |< inactive actions  ]\n\t\t //        a        s\n\t\t //         <-swap->\n\t\t //        s        a\n \n\t\t const actions = this._actions,\n\t\t\t prevIndex = action._cacheIndex,\n \n\t\t\t firstInactiveIndex = -- this._nActiveActions,\n \n\t\t\t lastActiveAction = actions[ firstInactiveIndex ];\n \n\t\t action._cacheIndex = firstInactiveIndex;\n\t\t actions[ firstInactiveIndex ] = action;\n \n\t\t lastActiveAction._cacheIndex = prevIndex;\n\t\t actions[ prevIndex ] = lastActiveAction;\n \n\t }\n \n\t // Memory management for PropertyMixer objects\n \n\t _addInactiveBinding( binding, rootUuid, trackName ) {\n \n\t\t const bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t bindings = this._bindings;\n \n\t\t let bindingByName = bindingsByRoot[ rootUuid ];\n \n\t\t if ( bindingByName === undefined ) {\n \n\t\t\t bindingByName = {};\n\t\t\t bindingsByRoot[ rootUuid ] = bindingByName;\n \n\t\t }\n \n\t\t bindingByName[ trackName ] = binding;\n \n\t\t binding._cacheIndex = bindings.length;\n\t\t bindings.push( binding );\n \n\t }\n \n\t _removeInactiveBinding( binding ) {\n \n\t\t const bindings = this._bindings,\n\t\t\t propBinding = binding.binding,\n\t\t\t rootUuid = propBinding.rootNode.uuid,\n\t\t\t trackName = propBinding.path,\n\t\t\t bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t bindingByName = bindingsByRoot[ rootUuid ],\n \n\t\t\t lastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t cacheIndex = binding._cacheIndex;\n \n\t\t lastInactiveBinding._cacheIndex = cacheIndex;\n\t\t bindings[ cacheIndex ] = lastInactiveBinding;\n\t\t bindings.pop();\n \n\t\t delete bindingByName[ trackName ];\n \n\t\t if ( Object.keys( bindingByName ).length === 0 ) {\n \n\t\t\t delete bindingsByRoot[ rootUuid ];\n \n\t\t }\n \n\t }\n \n\t _lendBinding( binding ) {\n \n\t\t const bindings = this._bindings,\n\t\t\t prevIndex = binding._cacheIndex,\n \n\t\t\t lastActiveIndex = this._nActiveBindings ++,\n \n\t\t\t firstInactiveBinding = bindings[ lastActiveIndex ];\n \n\t\t binding._cacheIndex = lastActiveIndex;\n\t\t bindings[ lastActiveIndex ] = binding;\n \n\t\t firstInactiveBinding._cacheIndex = prevIndex;\n\t\t bindings[ prevIndex ] = firstInactiveBinding;\n \n\t }\n \n\t _takeBackBinding( binding ) {\n \n\t\t const bindings = this._bindings,\n\t\t\t prevIndex = binding._cacheIndex,\n \n\t\t\t firstInactiveIndex = -- this._nActiveBindings,\n \n\t\t\t lastActiveBinding = bindings[ firstInactiveIndex ];\n \n\t\t binding._cacheIndex = firstInactiveIndex;\n\t\t bindings[ firstInactiveIndex ] = binding;\n \n\t\t lastActiveBinding._cacheIndex = prevIndex;\n\t\t bindings[ prevIndex ] = lastActiveBinding;\n \n\t }\n \n \n\t // Memory management of Interpolants for weight and time scale\n \n\t _lendControlInterpolant() {\n \n\t\t const interpolants = this._controlInterpolants,\n\t\t\t lastActiveIndex = this._nActiveControlInterpolants ++;\n \n\t\t let interpolant = interpolants[ lastActiveIndex ];\n \n\t\t if ( interpolant === undefined ) {\n \n\t\t\t interpolant = new LinearInterpolant(\n\t\t\t\t new Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t 1, this._controlInterpolantsResultBuffer );\n \n\t\t\t interpolant.__cacheIndex = lastActiveIndex;\n\t\t\t interpolants[ lastActiveIndex ] = interpolant;\n \n\t\t }\n \n\t\t return interpolant;\n \n\t }\n \n\t _takeBackControlInterpolant( interpolant ) {\n \n\t\t const interpolants = this._controlInterpolants,\n\t\t\t prevIndex = interpolant.__cacheIndex,\n \n\t\t\t firstInactiveIndex = -- this._nActiveControlInterpolants,\n \n\t\t\t lastActiveInterpolant = interpolants[ firstInactiveIndex ];\n \n\t\t interpolant.__cacheIndex = firstInactiveIndex;\n\t\t interpolants[ firstInactiveIndex ] = interpolant;\n \n\t\t lastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t interpolants[ prevIndex ] = lastActiveInterpolant;\n \n\t }\n \n\t // return an action for a clip optionally using a custom root target\n\t // object (this method allocates a lot of dynamic memory in case a\n\t // previously unknown clip/root combination is specified)\n\t clipAction( clip, optionalRoot, blendMode ) {\n \n\t\t const root = optionalRoot || this._root,\n\t\t\t rootUuid = root.uuid;\n \n\t\t let clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n \n\t\t const clipUuid = clipObject !== null ? clipObject.uuid : clip;\n \n\t\t const actionsForClip = this._actionsByClip[ clipUuid ];\n\t\t let prototypeAction = null;\n \n\t\t if ( blendMode === undefined ) {\n \n\t\t\t if ( clipObject !== null ) {\n \n\t\t\t\t blendMode = clipObject.blendMode;\n \n\t\t\t } else {\n \n\t\t\t\t blendMode = NormalAnimationBlendMode;\n \n\t\t\t }\n \n\t\t }\n \n\t\t if ( actionsForClip !== undefined ) {\n \n\t\t\t const existingAction = actionsForClip.actionByRoot[ rootUuid ];\n \n\t\t\t if ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n \n\t\t\t\t return existingAction;\n \n\t\t\t }\n \n\t\t\t // we know the clip, so we don't have to parse all\n\t\t\t // the bindings again but can just copy\n\t\t\t prototypeAction = actionsForClip.knownActions[ 0 ];\n \n\t\t\t // also, take the clip from the prototype action\n\t\t\t if ( clipObject === null )\n\t\t\t\t clipObject = prototypeAction._clip;\n \n\t\t }\n \n\t\t // clip must be known when specified via string\n\t\t if ( clipObject === null ) return null;\n \n\t\t // allocate all resources required to run it\n\t\t const newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n \n\t\t this._bindAction( newAction, prototypeAction );\n \n\t\t // and make the action known to the memory manager\n\t\t this._addInactiveAction( newAction, clipUuid, rootUuid );\n \n\t\t return newAction;\n \n\t }\n \n\t // get an existing action\n\t existingAction( clip, optionalRoot ) {\n \n\t\t const root = optionalRoot || this._root,\n\t\t\t rootUuid = root.uuid,\n \n\t\t\t clipObject = typeof clip === 'string' ?\n\t\t\t\t AnimationClip.findByName( root, clip ) : clip,\n \n\t\t\t clipUuid = clipObject ? clipObject.uuid : clip,\n \n\t\t\t actionsForClip = this._actionsByClip[ clipUuid ];\n \n\t\t if ( actionsForClip !== undefined ) {\n \n\t\t\t return actionsForClip.actionByRoot[ rootUuid ] || null;\n \n\t\t }\n \n\t\t return null;\n \n\t }\n \n\t // deactivates all previously scheduled actions\n\t stopAllAction() {\n \n\t\t const actions = this._actions,\n\t\t\t nActions = this._nActiveActions;\n \n\t\t for ( let i = nActions - 1; i >= 0; -- i ) {\n \n\t\t\t actions[ i ].stop();\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // advance the time and update apply the animation\n\t update( deltaTime ) {\n \n\t\t deltaTime *= this.timeScale;\n \n\t\t const actions = this._actions,\n\t\t\t nActions = this._nActiveActions,\n \n\t\t\t time = this.time += deltaTime,\n\t\t\t timeDirection = Math.sign( deltaTime ),\n \n\t\t\t accuIndex = this._accuIndex ^= 1;\n \n\t\t // run active actions\n \n\t\t for ( let i = 0; i !== nActions; ++ i ) {\n \n\t\t\t const action = actions[ i ];\n \n\t\t\t action._update( time, deltaTime, timeDirection, accuIndex );\n \n\t\t }\n \n\t\t // update scene graph\n \n\t\t const bindings = this._bindings,\n\t\t\t nBindings = this._nActiveBindings;\n \n\t\t for ( let i = 0; i !== nBindings; ++ i ) {\n \n\t\t\t bindings[ i ].apply( accuIndex );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t // Allows you to seek to a specific time in an animation.\n\t setTime( timeInSeconds ) {\n \n\t\t this.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\t for ( let i = 0; i < this._actions.length; i ++ ) {\n \n\t\t\t this._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n \n\t\t }\n \n\t\t return this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n \n\t }\n \n\t // return this mixer's root target object\n\t getRoot() {\n \n\t\t return this._root;\n \n\t }\n \n\t // free all resources specific to a particular clip\n\t uncacheClip( clip ) {\n \n\t\t const actions = this._actions,\n\t\t\t clipUuid = clip.uuid,\n\t\t\t actionsByClip = this._actionsByClip,\n\t\t\t actionsForClip = actionsByClip[ clipUuid ];\n \n\t\t if ( actionsForClip !== undefined ) {\n \n\t\t\t // note: just calling _removeInactiveAction would mess up the\n\t\t\t // iteration state and also require updating the state we can\n\t\t\t // just throw away\n \n\t\t\t const actionsToRemove = actionsForClip.knownActions;\n \n\t\t\t for ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n \n\t\t\t\t const action = actionsToRemove[ i ];\n \n\t\t\t\t this._deactivateAction( action );\n \n\t\t\t\t const cacheIndex = action._cacheIndex,\n\t\t\t\t\t lastInactiveAction = actions[ actions.length - 1 ];\n \n\t\t\t\t action._cacheIndex = null;\n\t\t\t\t action._byClipCacheIndex = null;\n \n\t\t\t\t lastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t actions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t actions.pop();\n \n\t\t\t\t this._removeInactiveBindingsForAction( action );\n \n\t\t\t }\n \n\t\t\t delete actionsByClip[ clipUuid ];\n \n\t\t }\n \n\t }\n \n\t // free all resources specific to a particular root target object\n\t uncacheRoot( root ) {\n \n\t\t const rootUuid = root.uuid,\n\t\t\t actionsByClip = this._actionsByClip;\n \n\t\t for ( const clipUuid in actionsByClip ) {\n \n\t\t\t const actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t action = actionByRoot[ rootUuid ];\n \n\t\t\t if ( action !== undefined ) {\n \n\t\t\t\t this._deactivateAction( action );\n\t\t\t\t this._removeInactiveAction( action );\n \n\t\t\t }\n \n\t\t }\n \n\t\t const bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t bindingByName = bindingsByRoot[ rootUuid ];\n \n\t\t if ( bindingByName !== undefined ) {\n \n\t\t\t for ( const trackName in bindingByName ) {\n \n\t\t\t\t const binding = bindingByName[ trackName ];\n\t\t\t\t binding.restoreOriginalState();\n\t\t\t\t this._removeInactiveBinding( binding );\n \n\t\t\t }\n \n\t\t }\n \n\t }\n \n\t // remove a targeted clip from the cache\n\t uncacheAction( clip, optionalRoot ) {\n \n\t\t const action = this.existingAction( clip, optionalRoot );\n \n\t\t if ( action !== null ) {\n \n\t\t\t this._deactivateAction( action );\n\t\t\t this._removeInactiveAction( action );\n \n\t\t }\n \n\t }\n \n }\n \n AnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n \n class Uniform {\n \n\t constructor( value ) {\n \n\t\t if ( typeof value === 'string' ) {\n \n\t\t\t console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\t value = arguments[ 1 ];\n \n\t\t }\n \n\t\t this.value = value;\n \n\t }\n \n\t clone() {\n \n\t\t return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n \n\t }\n \n }\n \n class InstancedInterleavedBuffer extends InterleavedBuffer {\n \n\t constructor( array, stride, meshPerAttribute = 1 ) {\n \n\t\t super( array, stride );\n \n\t\t this.meshPerAttribute = meshPerAttribute;\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source );\n \n\t\t this.meshPerAttribute = source.meshPerAttribute;\n \n\t\t return this;\n \n\t }\n \n\t clone( data ) {\n \n\t\t const ib = super.clone( data );\n \n\t\t ib.meshPerAttribute = this.meshPerAttribute;\n \n\t\t return ib;\n \n\t }\n \n\t toJSON( data ) {\n \n\t\t const json = super.toJSON( data );\n \n\t\t json.isInstancedInterleavedBuffer = true;\n\t\t json.meshPerAttribute = this.meshPerAttribute;\n \n\t\t return json;\n \n\t }\n \n }\n \n InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n \n class GLBufferAttribute {\n \n\t constructor( buffer, type, itemSize, elementSize, count ) {\n \n\t\t this.buffer = buffer;\n\t\t this.type = type;\n\t\t this.itemSize = itemSize;\n\t\t this.elementSize = elementSize;\n\t\t this.count = count;\n \n\t\t this.version = 0;\n \n\t }\n \n\t set needsUpdate( value ) {\n \n\t\t if ( value === true ) this.version ++;\n \n\t }\n \n\t setBuffer( buffer ) {\n \n\t\t this.buffer = buffer;\n \n\t\t return this;\n \n\t }\n \n\t setType( type, elementSize ) {\n \n\t\t this.type = type;\n\t\t this.elementSize = elementSize;\n \n\t\t return this;\n \n\t }\n \n\t setItemSize( itemSize ) {\n \n\t\t this.itemSize = itemSize;\n \n\t\t return this;\n \n\t }\n \n\t setCount( count ) {\n \n\t\t this.count = count;\n \n\t\t return this;\n \n\t }\n \n }\n \n GLBufferAttribute.prototype.isGLBufferAttribute = true;\n \n class Raycaster {\n \n\t constructor( origin, direction, near = 0, far = Infinity ) {\n \n\t\t this.ray = new Ray( origin, direction );\n\t\t // direction is assumed to be normalized (for accurate distance calculations)\n \n\t\t this.near = near;\n\t\t this.far = far;\n\t\t this.camera = null;\n\t\t this.layers = new Layers();\n \n\t\t this.params = {\n\t\t\t Mesh: {},\n\t\t\t Line: { threshold: 1 },\n\t\t\t LOD: {},\n\t\t\t Points: { threshold: 1 },\n\t\t\t Sprite: {}\n\t\t };\n \n\t }\n \n\t set( origin, direction ) {\n \n\t\t // direction is assumed to be normalized (for accurate distance calculations)\n \n\t\t this.ray.set( origin, direction );\n \n\t }\n \n\t setFromCamera( coords, camera ) {\n \n\t\t if ( camera && camera.isPerspectiveCamera ) {\n \n\t\t\t this.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\t this.camera = camera;\n \n\t\t } else if ( camera && camera.isOrthographicCamera ) {\n \n\t\t\t this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\t this.camera = camera;\n \n\t\t } else {\n \n\t\t\t console.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n \n\t\t }\n \n\t }\n \n\t intersectObject( object, recursive = false, intersects = [] ) {\n \n\t\t intersectObject( object, this, intersects, recursive );\n \n\t\t intersects.sort( ascSort );\n \n\t\t return intersects;\n \n\t }\n \n\t intersectObjects( objects, recursive = false, intersects = [] ) {\n \n\t\t for ( let i = 0, l = objects.length; i < l; i ++ ) {\n \n\t\t\t intersectObject( objects[ i ], this, intersects, recursive );\n \n\t\t }\n \n\t\t intersects.sort( ascSort );\n \n\t\t return intersects;\n \n\t }\n \n }\n \n function ascSort( a, b ) {\n \n\t return a.distance - b.distance;\n \n }\n \n function intersectObject( object, raycaster, intersects, recursive ) {\n \n\t if ( object.layers.test( raycaster.layers ) ) {\n \n\t\t object.raycast( raycaster, intersects );\n \n\t }\n \n\t if ( recursive === true ) {\n \n\t\t const children = object.children;\n \n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\n \n\t\t\t intersectObject( children[ i ], raycaster, intersects, true );\n \n\t\t }\n \n\t }\n \n }\n \n /**\n  * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n  *\n  * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n  * The azimuthal angle (theta) is measured from the positive z-axis.\n  */\n \n class Spherical {\n \n\t constructor( radius = 1, phi = 0, theta = 0 ) {\n \n\t\t this.radius = radius;\n\t\t this.phi = phi; // polar angle\n\t\t this.theta = theta; // azimuthal angle\n \n\t\t return this;\n \n\t }\n \n\t set( radius, phi, theta ) {\n \n\t\t this.radius = radius;\n\t\t this.phi = phi;\n\t\t this.theta = theta;\n \n\t\t return this;\n \n\t }\n \n\t copy( other ) {\n \n\t\t this.radius = other.radius;\n\t\t this.phi = other.phi;\n\t\t this.theta = other.theta;\n \n\t\t return this;\n \n\t }\n \n\t // restrict phi to be betwee EPS and PI-EPS\n\t makeSafe() {\n \n\t\t const EPS = 0.000001;\n\t\t this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n \n\t\t return this;\n \n\t }\n \n\t setFromVector3( v ) {\n \n\t\t return this.setFromCartesianCoords( v.x, v.y, v.z );\n \n\t }\n \n\t setFromCartesianCoords( x, y, z ) {\n \n\t\t this.radius = Math.sqrt( x * x + y * y + z * z );\n \n\t\t if ( this.radius === 0 ) {\n \n\t\t\t this.theta = 0;\n\t\t\t this.phi = 0;\n \n\t\t } else {\n \n\t\t\t this.theta = Math.atan2( x, z );\n\t\t\t this.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n /**\n  * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n  */\n \n class Cylindrical {\n \n\t constructor( radius = 1, theta = 0, y = 0 ) {\n \n\t\t this.radius = radius; // distance from the origin to a point in the x-z plane\n\t\t this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\t this.y = y; // height above the x-z plane\n \n\t\t return this;\n \n\t }\n \n\t set( radius, theta, y ) {\n \n\t\t this.radius = radius;\n\t\t this.theta = theta;\n\t\t this.y = y;\n \n\t\t return this;\n \n\t }\n \n\t copy( other ) {\n \n\t\t this.radius = other.radius;\n\t\t this.theta = other.theta;\n\t\t this.y = other.y;\n \n\t\t return this;\n \n\t }\n \n\t setFromVector3( v ) {\n \n\t\t return this.setFromCartesianCoords( v.x, v.y, v.z );\n \n\t }\n \n\t setFromCartesianCoords( x, y, z ) {\n \n\t\t this.radius = Math.sqrt( x * x + z * z );\n\t\t this.theta = Math.atan2( x, z );\n\t\t this.y = y;\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n const _vector$4 = /*@__PURE__*/ new Vector2();\n \n class Box2 {\n \n\t constructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n \n\t\t this.min = min;\n\t\t this.max = max;\n \n\t }\n \n\t set( min, max ) {\n \n\t\t this.min.copy( min );\n\t\t this.max.copy( max );\n \n\t\t return this;\n \n\t }\n \n\t setFromPoints( points ) {\n \n\t\t this.makeEmpty();\n \n\t\t for ( let i = 0, il = points.length; i < il; i ++ ) {\n \n\t\t\t this.expandByPoint( points[ i ] );\n \n\t\t }\n \n\t\t return this;\n \n\t }\n \n\t setFromCenterAndSize( center, size ) {\n \n\t\t const halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\t this.min.copy( center ).sub( halfSize );\n\t\t this.max.copy( center ).add( halfSize );\n \n\t\t return this;\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n\t copy( box ) {\n \n\t\t this.min.copy( box.min );\n\t\t this.max.copy( box.max );\n \n\t\t return this;\n \n\t }\n \n\t makeEmpty() {\n \n\t\t this.min.x = this.min.y = + Infinity;\n\t\t this.max.x = this.max.y = - Infinity;\n \n\t\t return this;\n \n\t }\n \n\t isEmpty() {\n \n\t\t // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n \n\t\t return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n \n\t }\n \n\t getCenter( target ) {\n \n\t\t return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n \n\t }\n \n\t getSize( target ) {\n \n\t\t return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n \n\t }\n \n\t expandByPoint( point ) {\n \n\t\t this.min.min( point );\n\t\t this.max.max( point );\n \n\t\t return this;\n \n\t }\n \n\t expandByVector( vector ) {\n \n\t\t this.min.sub( vector );\n\t\t this.max.add( vector );\n \n\t\t return this;\n \n\t }\n \n\t expandByScalar( scalar ) {\n \n\t\t this.min.addScalar( - scalar );\n\t\t this.max.addScalar( scalar );\n \n\t\t return this;\n \n\t }\n \n\t containsPoint( point ) {\n \n\t\t return point.x < this.min.x || point.x > this.max.x ||\n\t\t\t point.y < this.min.y || point.y > this.max.y ? false : true;\n \n\t }\n \n\t containsBox( box ) {\n \n\t\t return this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t this.min.y <= box.min.y && box.max.y <= this.max.y;\n \n\t }\n \n\t getParameter( point, target ) {\n \n\t\t // This can potentially have a divide by zero if the box\n\t\t // has a size dimension of 0.\n \n\t\t return target.set(\n\t\t\t ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t ( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t );\n \n\t }\n \n\t intersectsBox( box ) {\n \n\t\t // using 4 splitting planes to rule out intersections\n \n\t\t return box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n \n\t }\n \n\t clampPoint( point, target ) {\n \n\t\t return target.copy( point ).clamp( this.min, this.max );\n \n\t }\n \n\t distanceToPoint( point ) {\n \n\t\t const clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\t return clampedPoint.sub( point ).length();\n \n\t }\n \n\t intersect( box ) {\n \n\t\t this.min.max( box.min );\n\t\t this.max.min( box.max );\n \n\t\t return this;\n \n\t }\n \n\t union( box ) {\n \n\t\t this.min.min( box.min );\n\t\t this.max.max( box.max );\n \n\t\t return this;\n \n\t }\n \n\t translate( offset ) {\n \n\t\t this.min.add( offset );\n\t\t this.max.add( offset );\n \n\t\t return this;\n \n\t }\n \n\t equals( box ) {\n \n\t\t return box.min.equals( this.min ) && box.max.equals( this.max );\n \n\t }\n \n }\n \n Box2.prototype.isBox2 = true;\n \n const _startP = /*@__PURE__*/ new Vector3();\n const _startEnd = /*@__PURE__*/ new Vector3();\n \n class Line3 {\n \n\t constructor( start = new Vector3(), end = new Vector3() ) {\n \n\t\t this.start = start;\n\t\t this.end = end;\n \n\t }\n \n\t set( start, end ) {\n \n\t\t this.start.copy( start );\n\t\t this.end.copy( end );\n \n\t\t return this;\n \n\t }\n \n\t copy( line ) {\n \n\t\t this.start.copy( line.start );\n\t\t this.end.copy( line.end );\n \n\t\t return this;\n \n\t }\n \n\t getCenter( target ) {\n \n\t\t return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n \n\t }\n \n\t delta( target ) {\n \n\t\t return target.subVectors( this.end, this.start );\n \n\t }\n \n\t distanceSq() {\n \n\t\t return this.start.distanceToSquared( this.end );\n \n\t }\n \n\t distance() {\n \n\t\t return this.start.distanceTo( this.end );\n \n\t }\n \n\t at( t, target ) {\n \n\t\t return this.delta( target ).multiplyScalar( t ).add( this.start );\n \n\t }\n \n\t closestPointToPointParameter( point, clampToLine ) {\n \n\t\t _startP.subVectors( point, this.start );\n\t\t _startEnd.subVectors( this.end, this.start );\n \n\t\t const startEnd2 = _startEnd.dot( _startEnd );\n\t\t const startEnd_startP = _startEnd.dot( _startP );\n \n\t\t let t = startEnd_startP / startEnd2;\n \n\t\t if ( clampToLine ) {\n \n\t\t\t t = clamp( t, 0, 1 );\n \n\t\t }\n \n\t\t return t;\n \n\t }\n \n\t closestPointToPoint( point, clampToLine, target ) {\n \n\t\t const t = this.closestPointToPointParameter( point, clampToLine );\n \n\t\t return this.delta( target ).multiplyScalar( t ).add( this.start );\n \n\t }\n \n\t applyMatrix4( matrix ) {\n \n\t\t this.start.applyMatrix4( matrix );\n\t\t this.end.applyMatrix4( matrix );\n \n\t\t return this;\n \n\t }\n \n\t equals( line ) {\n \n\t\t return line.start.equals( this.start ) && line.end.equals( this.end );\n \n\t }\n \n\t clone() {\n \n\t\t return new this.constructor().copy( this );\n \n\t }\n \n }\n \n class ImmediateRenderObject extends Object3D {\n \n\t constructor( material ) {\n \n\t\t super();\n \n\t\t this.material = material;\n\t\t this.render = function ( /* renderCallback */ ) {};\n \n\t\t this.hasPositions = false;\n\t\t this.hasNormals = false;\n\t\t this.hasColors = false;\n\t\t this.hasUvs = false;\n \n\t\t this.positionArray = null;\n\t\t this.normalArray = null;\n\t\t this.colorArray = null;\n\t\t this.uvArray = null;\n \n\t\t this.count = 0;\n \n\t }\n \n }\n \n ImmediateRenderObject.prototype.isImmediateRenderObject = true;\n \n const _vector$3 = /*@__PURE__*/ new Vector3();\n \n class SpotLightHelper extends Object3D {\n \n\t constructor( light, color ) {\n \n\t\t super();\n\t\t this.light = light;\n\t\t this.light.updateMatrixWorld();\n \n\t\t this.matrix = light.matrixWorld;\n\t\t this.matrixAutoUpdate = false;\n \n\t\t this.color = color;\n \n\t\t const geometry = new BufferGeometry();\n \n\t\t const positions = [\n\t\t\t 0, 0, 0, \t0, 0, 1,\n\t\t\t 0, 0, 0, \t1, 0, 1,\n\t\t\t 0, 0, 0,\t- 1, 0, 1,\n\t\t\t 0, 0, 0, \t0, 1, 1,\n\t\t\t 0, 0, 0, \t0, - 1, 1\n\t\t ];\n \n\t\t for ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n \n\t\t\t const p1 = ( i / l ) * Math.PI * 2;\n\t\t\t const p2 = ( j / l ) * Math.PI * 2;\n \n\t\t\t positions.push(\n\t\t\t\t Math.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\t Math.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t );\n \n\t\t }\n \n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n \n\t\t const material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n \n\t\t this.cone = new LineSegments( geometry, material );\n\t\t this.add( this.cone );\n \n\t\t this.update();\n \n\t }\n \n\t dispose() {\n \n\t\t this.cone.geometry.dispose();\n\t\t this.cone.material.dispose();\n \n\t }\n \n\t update() {\n \n\t\t this.light.updateMatrixWorld();\n \n\t\t const coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t const coneWidth = coneLength * Math.tan( this.light.angle );\n \n\t\t this.cone.scale.set( coneWidth, coneWidth, coneLength );\n \n\t\t _vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n \n\t\t this.cone.lookAt( _vector$3 );\n \n\t\t if ( this.color !== undefined ) {\n \n\t\t\t this.cone.material.color.set( this.color );\n \n\t\t } else {\n \n\t\t\t this.cone.material.color.copy( this.light.color );\n \n\t\t }\n \n\t }\n \n }\n \n const _vector$2 = /*@__PURE__*/ new Vector3();\n const _boneMatrix = /*@__PURE__*/ new Matrix4();\n const _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n \n \n class SkeletonHelper extends LineSegments {\n \n\t constructor( object ) {\n \n\t\t const bones = getBoneList( object );\n \n\t\t const geometry = new BufferGeometry();\n \n\t\t const vertices = [];\n\t\t const colors = [];\n \n\t\t const color1 = new Color( 0, 0, 1 );\n\t\t const color2 = new Color( 0, 1, 0 );\n \n\t\t for ( let i = 0; i < bones.length; i ++ ) {\n \n\t\t\t const bone = bones[ i ];\n \n\t\t\t if ( bone.parent && bone.parent.isBone ) {\n \n\t\t\t\t vertices.push( 0, 0, 0 );\n\t\t\t\t vertices.push( 0, 0, 0 );\n\t\t\t\t colors.push( color1.r, color1.g, color1.b );\n\t\t\t\t colors.push( color2.r, color2.g, color2.b );\n \n\t\t\t }\n \n\t\t }\n \n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n\t\t const material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'SkeletonHelper';\n\t\t this.isSkeletonHelper = true;\n \n\t\t this.root = object;\n\t\t this.bones = bones;\n \n\t\t this.matrix = object.matrixWorld;\n\t\t this.matrixAutoUpdate = false;\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t const bones = this.bones;\n \n\t\t const geometry = this.geometry;\n\t\t const position = geometry.getAttribute( 'position' );\n \n\t\t _matrixWorldInv.copy( this.root.matrixWorld ).invert();\n \n\t\t for ( let i = 0, j = 0; i < bones.length; i ++ ) {\n \n\t\t\t const bone = bones[ i ];\n \n\t\t\t if ( bone.parent && bone.parent.isBone ) {\n \n\t\t\t\t _boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t _vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\t position.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n \n\t\t\t\t _boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t _vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\t position.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n \n\t\t\t\t j += 2;\n \n\t\t\t }\n \n\t\t }\n \n\t\t geometry.getAttribute( 'position' ).needsUpdate = true;\n \n\t\t super.updateMatrixWorld( force );\n \n\t }\n \n }\n \n \n function getBoneList( object ) {\n \n\t const boneList = [];\n \n\t if ( object && object.isBone ) {\n \n\t\t boneList.push( object );\n \n\t }\n \n\t for ( let i = 0; i < object.children.length; i ++ ) {\n \n\t\t boneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n \n\t }\n \n\t return boneList;\n \n }\n \n class PointLightHelper extends Mesh {\n \n\t constructor( light, sphereSize, color ) {\n \n\t\t const geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\t const material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n \n\t\t super( geometry, material );\n \n\t\t this.light = light;\n\t\t this.light.updateMatrixWorld();\n \n\t\t this.color = color;\n \n\t\t this.type = 'PointLightHelper';\n \n\t\t this.matrix = this.light.matrixWorld;\n\t\t this.matrixAutoUpdate = false;\n \n\t\t this.update();\n \n \n\t\t /*\n\t // TODO: delete this comment?\n\t const distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n \n\t this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n \n\t const d = light.distance;\n \n\t if ( d === 0.0 ) {\n \n\t\t this.lightDistance.visible = false;\n \n\t } else {\n \n\t\t this.lightDistance.scale.set( d, d, d );\n \n\t }\n \n\t this.add( this.lightDistance );\n\t */\n \n\t }\n \n\t dispose() {\n \n\t\t this.geometry.dispose();\n\t\t this.material.dispose();\n \n\t }\n \n\t update() {\n \n\t\t if ( this.color !== undefined ) {\n \n\t\t\t this.material.color.set( this.color );\n \n\t\t } else {\n \n\t\t\t this.material.color.copy( this.light.color );\n \n\t\t }\n \n\t\t /*\n\t\t const d = this.light.distance;\n \n\t\t if ( d === 0.0 ) {\n \n\t\t\t this.lightDistance.visible = false;\n \n\t\t } else {\n \n\t\t\t this.lightDistance.visible = true;\n\t\t\t this.lightDistance.scale.set( d, d, d );\n \n\t\t }\n\t\t */\n \n\t }\n \n }\n \n const _vector$1 = /*@__PURE__*/ new Vector3();\n const _color1 = /*@__PURE__*/ new Color();\n const _color2 = /*@__PURE__*/ new Color();\n \n class HemisphereLightHelper extends Object3D {\n \n\t constructor( light, size, color ) {\n \n\t\t super();\n\t\t this.light = light;\n\t\t this.light.updateMatrixWorld();\n \n\t\t this.matrix = light.matrixWorld;\n\t\t this.matrixAutoUpdate = false;\n \n\t\t this.color = color;\n \n\t\t const geometry = new OctahedronGeometry( size );\n\t\t geometry.rotateY( Math.PI * 0.5 );\n \n\t\t this.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\t if ( this.color === undefined ) this.material.vertexColors = true;\n \n\t\t const position = geometry.getAttribute( 'position' );\n\t\t const colors = new Float32Array( position.count * 3 );\n \n\t\t geometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n \n\t\t this.add( new Mesh( geometry, this.material ) );\n \n\t\t this.update();\n \n\t }\n \n\t dispose() {\n \n\t\t this.children[ 0 ].geometry.dispose();\n\t\t this.children[ 0 ].material.dispose();\n \n\t }\n \n\t update() {\n \n\t\t const mesh = this.children[ 0 ];\n \n\t\t if ( this.color !== undefined ) {\n \n\t\t\t this.material.color.set( this.color );\n \n\t\t } else {\n \n\t\t\t const colors = mesh.geometry.getAttribute( 'color' );\n \n\t\t\t _color1.copy( this.light.color );\n\t\t\t _color2.copy( this.light.groundColor );\n \n\t\t\t for ( let i = 0, l = colors.count; i < l; i ++ ) {\n \n\t\t\t\t const color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n \n\t\t\t\t colors.setXYZ( i, color.r, color.g, color.b );\n \n\t\t\t }\n \n\t\t\t colors.needsUpdate = true;\n \n\t\t }\n \n\t\t mesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n \n\t }\n \n }\n \n class GridHelper extends LineSegments {\n \n\t constructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n \n\t\t color1 = new Color( color1 );\n\t\t color2 = new Color( color2 );\n \n\t\t const center = divisions / 2;\n\t\t const step = size / divisions;\n\t\t const halfSize = size / 2;\n \n\t\t const vertices = [], colors = [];\n \n\t\t for ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n \n\t\t\t vertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\t vertices.push( k, 0, - halfSize, k, 0, halfSize );\n \n\t\t\t const color = i === center ? color1 : color2;\n \n\t\t\t color.toArray( colors, j ); j += 3;\n\t\t\t color.toArray( colors, j ); j += 3;\n\t\t\t color.toArray( colors, j ); j += 3;\n\t\t\t color.toArray( colors, j ); j += 3;\n \n\t\t }\n \n\t\t const geometry = new BufferGeometry();\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n\t\t const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'GridHelper';\n \n\t }\n \n }\n \n class PolarGridHelper extends LineSegments {\n \n\t constructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n \n\t\t color1 = new Color( color1 );\n\t\t color2 = new Color( color2 );\n \n\t\t const vertices = [];\n\t\t const colors = [];\n \n\t\t // create the radials\n \n\t\t for ( let i = 0; i <= radials; i ++ ) {\n \n\t\t\t const v = ( i / radials ) * ( Math.PI * 2 );\n \n\t\t\t const x = Math.sin( v ) * radius;\n\t\t\t const z = Math.cos( v ) * radius;\n \n\t\t\t vertices.push( 0, 0, 0 );\n\t\t\t vertices.push( x, 0, z );\n \n\t\t\t const color = ( i & 1 ) ? color1 : color2;\n \n\t\t\t colors.push( color.r, color.g, color.b );\n\t\t\t colors.push( color.r, color.g, color.b );\n \n\t\t }\n \n\t\t // create the circles\n \n\t\t for ( let i = 0; i <= circles; i ++ ) {\n \n\t\t\t const color = ( i & 1 ) ? color1 : color2;\n \n\t\t\t const r = radius - ( radius / circles * i );\n \n\t\t\t for ( let j = 0; j < divisions; j ++ ) {\n \n\t\t\t\t // first vertex\n \n\t\t\t\t let v = ( j / divisions ) * ( Math.PI * 2 );\n \n\t\t\t\t let x = Math.sin( v ) * r;\n\t\t\t\t let z = Math.cos( v ) * r;\n \n\t\t\t\t vertices.push( x, 0, z );\n\t\t\t\t colors.push( color.r, color.g, color.b );\n \n\t\t\t\t // second vertex\n \n\t\t\t\t v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n \n\t\t\t\t x = Math.sin( v ) * r;\n\t\t\t\t z = Math.cos( v ) * r;\n \n\t\t\t\t vertices.push( x, 0, z );\n\t\t\t\t colors.push( color.r, color.g, color.b );\n \n\t\t\t }\n \n\t\t }\n \n\t\t const geometry = new BufferGeometry();\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n\t\t const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'PolarGridHelper';\n \n\t }\n \n }\n \n const _v1 = /*@__PURE__*/ new Vector3();\n const _v2 = /*@__PURE__*/ new Vector3();\n const _v3 = /*@__PURE__*/ new Vector3();\n \n class DirectionalLightHelper extends Object3D {\n \n\t constructor( light, size, color ) {\n \n\t\t super();\n\t\t this.light = light;\n\t\t this.light.updateMatrixWorld();\n \n\t\t this.matrix = light.matrixWorld;\n\t\t this.matrixAutoUpdate = false;\n \n\t\t this.color = color;\n \n\t\t if ( size === undefined ) size = 1;\n \n\t\t let geometry = new BufferGeometry();\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t - size, size, 0,\n\t\t\t size, size, 0,\n\t\t\t size, - size, 0,\n\t\t\t - size, - size, 0,\n\t\t\t - size, size, 0\n\t\t ], 3 ) );\n \n\t\t const material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n \n\t\t this.lightPlane = new Line( geometry, material );\n\t\t this.add( this.lightPlane );\n \n\t\t geometry = new BufferGeometry();\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n \n\t\t this.targetLine = new Line( geometry, material );\n\t\t this.add( this.targetLine );\n \n\t\t this.update();\n \n\t }\n \n\t dispose() {\n \n\t\t this.lightPlane.geometry.dispose();\n\t\t this.lightPlane.material.dispose();\n\t\t this.targetLine.geometry.dispose();\n\t\t this.targetLine.material.dispose();\n \n\t }\n \n\t update() {\n \n\t\t _v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t _v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t _v3.subVectors( _v2, _v1 );\n \n\t\t this.lightPlane.lookAt( _v2 );\n \n\t\t if ( this.color !== undefined ) {\n \n\t\t\t this.lightPlane.material.color.set( this.color );\n\t\t\t this.targetLine.material.color.set( this.color );\n \n\t\t } else {\n \n\t\t\t this.lightPlane.material.color.copy( this.light.color );\n\t\t\t this.targetLine.material.color.copy( this.light.color );\n \n\t\t }\n \n\t\t this.targetLine.lookAt( _v2 );\n\t\t this.targetLine.scale.z = _v3.length();\n \n\t }\n \n }\n \n const _vector = /*@__PURE__*/ new Vector3();\n const _camera = /*@__PURE__*/ new Camera();\n \n /**\n  *\t- shows frustum, line of sight and up of the camera\n  *\t- suitable for fast updates\n  * \t- based on frustum visualization in lightgl.js shadowmap example\n  *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n  */\n \n class CameraHelper extends LineSegments {\n \n\t constructor( camera ) {\n \n\t\t const geometry = new BufferGeometry();\n\t\t const material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n \n\t\t const vertices = [];\n\t\t const colors = [];\n \n\t\t const pointMap = {};\n \n\t\t // colors\n \n\t\t const colorFrustum = new Color( 0xffaa00 );\n\t\t const colorCone = new Color( 0xff0000 );\n\t\t const colorUp = new Color( 0x00aaff );\n\t\t const colorTarget = new Color( 0xffffff );\n\t\t const colorCross = new Color( 0x333333 );\n \n\t\t // near\n \n\t\t addLine( 'n1', 'n2', colorFrustum );\n\t\t addLine( 'n2', 'n4', colorFrustum );\n\t\t addLine( 'n4', 'n3', colorFrustum );\n\t\t addLine( 'n3', 'n1', colorFrustum );\n \n\t\t // far\n \n\t\t addLine( 'f1', 'f2', colorFrustum );\n\t\t addLine( 'f2', 'f4', colorFrustum );\n\t\t addLine( 'f4', 'f3', colorFrustum );\n\t\t addLine( 'f3', 'f1', colorFrustum );\n \n\t\t // sides\n \n\t\t addLine( 'n1', 'f1', colorFrustum );\n\t\t addLine( 'n2', 'f2', colorFrustum );\n\t\t addLine( 'n3', 'f3', colorFrustum );\n\t\t addLine( 'n4', 'f4', colorFrustum );\n \n\t\t // cone\n \n\t\t addLine( 'p', 'n1', colorCone );\n\t\t addLine( 'p', 'n2', colorCone );\n\t\t addLine( 'p', 'n3', colorCone );\n\t\t addLine( 'p', 'n4', colorCone );\n \n\t\t // up\n \n\t\t addLine( 'u1', 'u2', colorUp );\n\t\t addLine( 'u2', 'u3', colorUp );\n\t\t addLine( 'u3', 'u1', colorUp );\n \n\t\t // target\n \n\t\t addLine( 'c', 't', colorTarget );\n\t\t addLine( 'p', 'c', colorCross );\n \n\t\t // cross\n \n\t\t addLine( 'cn1', 'cn2', colorCross );\n\t\t addLine( 'cn3', 'cn4', colorCross );\n \n\t\t addLine( 'cf1', 'cf2', colorCross );\n\t\t addLine( 'cf3', 'cf4', colorCross );\n \n\t\t function addLine( a, b, color ) {\n \n\t\t\t addPoint( a, color );\n\t\t\t addPoint( b, color );\n \n\t\t }\n \n\t\t function addPoint( id, color ) {\n \n\t\t\t vertices.push( 0, 0, 0 );\n\t\t\t colors.push( color.r, color.g, color.b );\n \n\t\t\t if ( pointMap[ id ] === undefined ) {\n \n\t\t\t\t pointMap[ id ] = [];\n \n\t\t\t }\n \n\t\t\t pointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n \n\t\t }\n \n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'CameraHelper';\n \n\t\t this.camera = camera;\n\t\t if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n \n\t\t this.matrix = camera.matrixWorld;\n\t\t this.matrixAutoUpdate = false;\n \n\t\t this.pointMap = pointMap;\n \n\t\t this.update();\n \n\t }\n \n\t update() {\n \n\t\t const geometry = this.geometry;\n\t\t const pointMap = this.pointMap;\n \n\t\t const w = 1, h = 1;\n \n\t\t // we need just camera projection matrix inverse\n\t\t // world matrix must be identity\n \n\t\t _camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n \n\t\t // center / target\n \n\t\t setPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\t setPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n \n\t\t // near\n \n\t\t setPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\t setPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\t setPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\t setPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n \n\t\t // far\n \n\t\t setPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\t setPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\t setPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\t setPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n \n\t\t // up\n \n\t\t setPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\t setPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\t setPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n \n\t\t // cross\n \n\t\t setPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\t setPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\t setPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\t setPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n \n\t\t setPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\t setPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\t setPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\t setPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n \n\t\t geometry.getAttribute( 'position' ).needsUpdate = true;\n \n\t }\n \n\t dispose() {\n \n\t\t this.geometry.dispose();\n\t\t this.material.dispose();\n \n\t }\n \n }\n \n \n function setPoint( point, pointMap, geometry, camera, x, y, z ) {\n \n\t _vector.set( x, y, z ).unproject( camera );\n \n\t const points = pointMap[ point ];\n \n\t if ( points !== undefined ) {\n \n\t\t const position = geometry.getAttribute( 'position' );\n \n\t\t for ( let i = 0, l = points.length; i < l; i ++ ) {\n \n\t\t\t position.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n \n\t\t }\n \n\t }\n \n }\n \n const _box = /*@__PURE__*/ new Box3();\n \n class BoxHelper extends LineSegments {\n \n\t constructor( object, color = 0xffff00 ) {\n \n\t\t const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\t const positions = new Float32Array( 8 * 3 );\n \n\t\t const geometry = new BufferGeometry();\n\t\t geometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\t geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n \n\t\t super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n \n\t\t this.object = object;\n\t\t this.type = 'BoxHelper';\n \n\t\t this.matrixAutoUpdate = false;\n \n\t\t this.update();\n \n\t }\n \n\t update( object ) {\n \n\t\t if ( object !== undefined ) {\n \n\t\t\t console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n \n\t\t }\n \n\t\t if ( this.object !== undefined ) {\n \n\t\t\t _box.setFromObject( this.object );\n \n\t\t }\n \n\t\t if ( _box.isEmpty() ) return;\n \n\t\t const min = _box.min;\n\t\t const max = _box.max;\n \n\t\t /*\n\t\t\t 5____4\n\t\t 1/___0/|\n\t\t | 6__|_7\n\t\t 2/___3/\n \n\t\t 0: max.x, max.y, max.z\n\t\t 1: min.x, max.y, max.z\n\t\t 2: min.x, min.y, max.z\n\t\t 3: max.x, min.y, max.z\n\t\t 4: max.x, max.y, min.z\n\t\t 5: min.x, max.y, min.z\n\t\t 6: min.x, min.y, min.z\n\t\t 7: max.x, min.y, min.z\n\t\t */\n \n\t\t const position = this.geometry.attributes.position;\n\t\t const array = position.array;\n \n\t\t array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\t array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\t array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\t array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\t array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\t array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\t array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\t array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n \n\t\t position.needsUpdate = true;\n \n\t\t this.geometry.computeBoundingSphere();\n \n \n\t }\n \n\t setFromObject( object ) {\n \n\t\t this.object = object;\n\t\t this.update();\n \n\t\t return this;\n \n\t }\n \n\t copy( source ) {\n \n\t\t LineSegments.prototype.copy.call( this, source );\n \n\t\t this.object = source.object;\n \n\t\t return this;\n \n\t }\n \n }\n \n class Box3Helper extends LineSegments {\n \n\t constructor( box, color = 0xffff00 ) {\n \n\t\t const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n \n\t\t const positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n \n\t\t const geometry = new BufferGeometry();\n \n\t\t geometry.setIndex( new BufferAttribute( indices, 1 ) );\n \n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n \n\t\t super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n \n\t\t this.box = box;\n \n\t\t this.type = 'Box3Helper';\n \n\t\t this.geometry.computeBoundingSphere();\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t const box = this.box;\n \n\t\t if ( box.isEmpty() ) return;\n \n\t\t box.getCenter( this.position );\n \n\t\t box.getSize( this.scale );\n \n\t\t this.scale.multiplyScalar( 0.5 );\n \n\t\t super.updateMatrixWorld( force );\n \n\t }\n \n }\n \n class PlaneHelper extends Line {\n \n\t constructor( plane, size = 1, hex = 0xffff00 ) {\n \n\t\t const color = hex;\n \n\t\t const positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n \n\t\t const geometry = new BufferGeometry();\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\t geometry.computeBoundingSphere();\n \n\t\t super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n \n\t\t this.type = 'PlaneHelper';\n \n\t\t this.plane = plane;\n \n\t\t this.size = size;\n \n\t\t const positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n \n\t\t const geometry2 = new BufferGeometry();\n\t\t geometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\t geometry2.computeBoundingSphere();\n \n\t\t this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n \n\t }\n \n\t updateMatrixWorld( force ) {\n \n\t\t let scale = - this.plane.constant;\n \n\t\t if ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n \n\t\t this.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n \n\t\t this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n \n\t\t this.lookAt( this.plane.normal );\n \n\t\t super.updateMatrixWorld( force );\n \n\t }\n \n }\n \n const _axis = /*@__PURE__*/ new Vector3();\n let _lineGeometry, _coneGeometry;\n \n class ArrowHelper extends Object3D {\n \n\t // dir is assumed to be normalized\n \n\t constructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n \n\t\t super();\n \n\t\t this.type = 'ArrowHelper';\n \n\t\t if ( _lineGeometry === undefined ) {\n \n\t\t\t _lineGeometry = new BufferGeometry();\n\t\t\t _lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n \n\t\t\t _coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t _coneGeometry.translate( 0, - 0.5, 0 );\n \n\t\t }\n \n\t\t this.position.copy( origin );\n \n\t\t this.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\t this.line.matrixAutoUpdate = false;\n\t\t this.add( this.line );\n \n\t\t this.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\t this.cone.matrixAutoUpdate = false;\n\t\t this.add( this.cone );\n \n\t\t this.setDirection( dir );\n\t\t this.setLength( length, headLength, headWidth );\n \n\t }\n \n\t setDirection( dir ) {\n \n\t\t // dir is assumed to be normalized\n \n\t\t if ( dir.y > 0.99999 ) {\n \n\t\t\t this.quaternion.set( 0, 0, 0, 1 );\n \n\t\t } else if ( dir.y < - 0.99999 ) {\n \n\t\t\t this.quaternion.set( 1, 0, 0, 0 );\n \n\t\t } else {\n \n\t\t\t _axis.set( dir.z, 0, - dir.x ).normalize();\n \n\t\t\t const radians = Math.acos( dir.y );\n \n\t\t\t this.quaternion.setFromAxisAngle( _axis, radians );\n \n\t\t }\n \n\t }\n \n\t setLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n \n\t\t this.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\t this.line.updateMatrix();\n \n\t\t this.cone.scale.set( headWidth, headLength, headWidth );\n\t\t this.cone.position.y = length;\n\t\t this.cone.updateMatrix();\n \n\t }\n \n\t setColor( color ) {\n \n\t\t this.line.material.color.set( color );\n\t\t this.cone.material.color.set( color );\n \n\t }\n \n\t copy( source ) {\n \n\t\t super.copy( source, false );\n \n\t\t this.line.copy( source.line );\n\t\t this.cone.copy( source.cone );\n \n\t\t return this;\n \n\t }\n \n }\n \n class AxesHelper extends LineSegments {\n \n\t constructor( size = 1 ) {\n \n\t\t const vertices = [\n\t\t\t 0, 0, 0,\tsize, 0, 0,\n\t\t\t 0, 0, 0,\t0, size, 0,\n\t\t\t 0, 0, 0,\t0, 0, size\n\t\t ];\n \n\t\t const colors = [\n\t\t\t 1, 0, 0,\t1, 0.6, 0,\n\t\t\t 0, 1, 0,\t0.6, 1, 0,\n\t\t\t 0, 0, 1,\t0, 0.6, 1\n\t\t ];\n \n\t\t const geometry = new BufferGeometry();\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n \n\t\t const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n \n\t\t super( geometry, material );\n \n\t\t this.type = 'AxesHelper';\n \n\t }\n \n\t dispose() {\n \n\t\t this.geometry.dispose();\n\t\t this.material.dispose();\n \n\t }\n \n }\n \n const _floatView = new Float32Array( 1 );\n const _int32View = new Int32Array( _floatView.buffer );\n \n class DataUtils {\n \n\t // Converts float32 to float16 (stored as uint16 value).\n \n\t static toHalfFloat( val ) {\n \n\t\t // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n \n\t\t /* This method is faster than the OpenEXR implementation (very often\n\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t * by James Tursa?s half-precision code. */\n \n\t\t _floatView[ 0 ] = val;\n\t\t const x = _int32View[ 0 ];\n \n\t\t let bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\t let m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\t const e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n \n\t\t /* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t * half, return signed zero. */\n\t\t if ( e < 103 ) return bits;\n \n\t\t /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\t if ( e > 142 ) {\n \n\t\t\t bits |= 0x7c00;\n\t\t\t /* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\n\t\t\t bits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\t return bits;\n \n\t\t }\n \n\t\t /* If exponent underflows but not too much, return a denormal */\n\t\t if ( e < 113 ) {\n \n\t\t\t m |= 0x0800;\n\t\t\t /* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t * to 1, which is OK. */\n\t\t\t bits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\t return bits;\n \n\t\t }\n \n\t\t bits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t /* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t * the exponent, which is OK. */\n\t\t bits += m & 1;\n\t\t return bits;\n \n\t }\n \n }\n \n const LOD_MIN = 4;\n const LOD_MAX = 8;\n const SIZE_MAX = Math.pow( 2, LOD_MAX );\n \n // The standard deviations (radians) associated with the extra mips. These are\n // chosen to approximate a Trowbridge-Reitz distribution function times the\n // geometric shadowing function. These sigma values squared must match the\n // variance #defines in cube_uv_reflection_fragment.glsl.js.\n const EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n \n const TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n \n // The maximum length of the blur for loop. Smaller sigmas will use fewer\n // samples and exit early, but not recompile the shader.\n const MAX_SAMPLES = 20;\n \n const ENCODINGS = {\n\t [ LinearEncoding ]: 0,\n\t [ sRGBEncoding ]: 1,\n\t [ RGBEEncoding ]: 2,\n\t [ RGBM7Encoding ]: 3,\n\t [ RGBM16Encoding ]: 4,\n\t [ RGBDEncoding ]: 5,\n\t [ GammaEncoding ]: 6\n };\n \n const backgroundMaterial = new MeshBasicMaterial( {\n\t side: BackSide,\n\t depthWrite: false,\n\t depthTest: false,\n } );\n const backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n \n const _flatCamera = /*@__PURE__*/ new OrthographicCamera();\n const { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\n const _clearColor = /*@__PURE__*/ new Color();\n let _oldTarget = null;\n \n // Golden Ratio\n const PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\n const INV_PHI = 1 / PHI;\n \n // Vertices of a dodecahedron (except the opposites, which represent the\n // same axis), used as axis directions evenly spread on a sphere.\n const _axisDirections = [\n\t /*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t /*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t /*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t /*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t /*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t /*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t /*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t /*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t /*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t /*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n \n /**\n  * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n  * (PMREM) from a cubeMap environment texture. This allows different levels of\n  * blur to be quickly accessed based on material roughness. It is packed into a\n  * special CubeUV format that allows us to perform custom interpolation so that\n  * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n  * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n  * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n  * higher roughness levels. In this way we maintain resolution to smoothly\n  * interpolate diffuse lighting while limiting sampling computation.\n  *\n  * Paper: Fast, Accurate Image-Based Lighting\n  * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n */\n \n function convertLinearToRGBE( color ) {\n \n\t const maxComponent = Math.max( color.r, color.g, color.b );\n\t const fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\t color.multiplyScalar( Math.pow( 2.0, - fExp ) );\n \n\t const alpha = ( fExp + 128.0 ) / 255.0;\n\t return alpha;\n \n }\n \n class PMREMGenerator {\n \n\t constructor( renderer ) {\n \n\t\t this._renderer = renderer;\n\t\t this._pingPongRenderTarget = null;\n \n\t\t this._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\t this._equirectShader = null;\n\t\t this._cubemapShader = null;\n \n\t\t this._compileMaterial( this._blurMaterial );\n \n\t }\n \n\t /**\n\t  * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t  * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t  * in radians to be applied to the scene before PMREM generation. Optional near\n\t  * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t  * is placed at the origin).\n\t  */\n\t fromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n \n\t\t _oldTarget = this._renderer.getRenderTarget();\n\t\t const cubeUVRenderTarget = this._allocateTargets();\n \n\t\t this._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\t if ( sigma > 0 ) {\n \n\t\t\t this._blur( cubeUVRenderTarget, 0, 0, sigma );\n \n\t\t }\n \n\t\t this._applyPMREM( cubeUVRenderTarget );\n\t\t this._cleanup( cubeUVRenderTarget );\n \n\t\t return cubeUVRenderTarget;\n \n\t }\n \n\t /**\n\t  * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t  * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t  * as this matches best with the 256 x 256 cubemap output.\n\t  */\n\t fromEquirectangular( equirectangular ) {\n \n\t\t return this._fromTexture( equirectangular );\n \n\t }\n \n\t /**\n\t  * Generates a PMREM from an cubemap texture, which can be either LDR\n\t  * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t  * as this matches best with the 256 x 256 cubemap output.\n\t  */\n\t fromCubemap( cubemap ) {\n \n\t\t return this._fromTexture( cubemap );\n \n\t }\n \n\t /**\n\t  * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t  * your texture's network fetch for increased concurrency.\n\t  */\n\t compileCubemapShader() {\n \n\t\t if ( this._cubemapShader === null ) {\n \n\t\t\t this._cubemapShader = _getCubemapShader();\n\t\t\t this._compileMaterial( this._cubemapShader );\n \n\t\t }\n \n\t }\n \n\t /**\n\t  * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t  * your texture's network fetch for increased concurrency.\n\t  */\n\t compileEquirectangularShader() {\n \n\t\t if ( this._equirectShader === null ) {\n \n\t\t\t this._equirectShader = _getEquirectShader();\n\t\t\t this._compileMaterial( this._equirectShader );\n \n\t\t }\n \n\t }\n \n\t /**\n\t  * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t  * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t  * one of them will cause any others to also become unusable.\n\t  */\n\t dispose() {\n \n\t\t this._blurMaterial.dispose();\n \n\t\t if ( this._cubemapShader !== null ) this._cubemapShader.dispose();\n\t\t if ( this._equirectShader !== null ) this._equirectShader.dispose();\n \n\t\t for ( let i = 0; i < _lodPlanes.length; i ++ ) {\n \n\t\t\t _lodPlanes[ i ].dispose();\n \n\t\t }\n \n\t }\n \n\t // private interface\n \n\t _cleanup( outputTarget ) {\n \n\t\t this._pingPongRenderTarget.dispose();\n\t\t this._renderer.setRenderTarget( _oldTarget );\n\t\t outputTarget.scissorTest = false;\n\t\t _setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n \n\t }\n \n\t _fromTexture( texture ) {\n \n\t\t _oldTarget = this._renderer.getRenderTarget();\n\t\t const cubeUVRenderTarget = this._allocateTargets( texture );\n\t\t this._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\t this._applyPMREM( cubeUVRenderTarget );\n\t\t this._cleanup( cubeUVRenderTarget );\n \n\t\t return cubeUVRenderTarget;\n \n\t }\n \n\t _allocateTargets( texture ) { // warning: null texture is valid\n \n\t\t const params = {\n\t\t\t magFilter: NearestFilter,\n\t\t\t minFilter: NearestFilter,\n\t\t\t generateMipmaps: false,\n\t\t\t type: UnsignedByteType,\n\t\t\t format: RGBEFormat,\n\t\t\t encoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\t depthBuffer: false\n\t\t };\n \n\t\t const cubeUVRenderTarget = _createRenderTarget( params );\n\t\t cubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t this._pingPongRenderTarget = _createRenderTarget( params );\n\t\t return cubeUVRenderTarget;\n \n\t }\n \n\t _compileMaterial( material ) {\n \n\t\t const tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\t this._renderer.compile( tmpMesh, _flatCamera );\n \n\t }\n \n\t _sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n \n\t\t const fov = 90;\n\t\t const aspect = 1;\n\t\t const cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\t const upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\t const forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\t const renderer = this._renderer;\n \n\t\t const originalAutoClear = renderer.autoClear;\n\t\t const outputEncoding = renderer.outputEncoding;\n\t\t const toneMapping = renderer.toneMapping;\n\t\t renderer.getClearColor( _clearColor );\n \n\t\t renderer.toneMapping = NoToneMapping;\n\t\t renderer.outputEncoding = LinearEncoding;\n\t\t renderer.autoClear = false;\n \n\t\t let useSolidColor = false;\n\t\t const background = scene.background;\n\t\t if ( background ) {\n \n\t\t\t if ( background.isColor ) {\n \n\t\t\t\t backgroundMaterial.color.copy( background ).convertSRGBToLinear();\n\t\t\t\t scene.background = null;\n \n\t\t\t\t const alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\t\t backgroundMaterial.opacity = alpha;\n\t\t\t\t useSolidColor = true;\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t backgroundMaterial.color.copy( _clearColor ).convertSRGBToLinear();\n \n\t\t\t const alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\t backgroundMaterial.opacity = alpha;\n\t\t\t useSolidColor = true;\n \n\t\t }\n \n \n\t\t for ( let i = 0; i < 6; i ++ ) {\n \n\t\t\t const col = i % 3;\n\t\t\t if ( col == 0 ) {\n \n\t\t\t\t cubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t cubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n \n\t\t\t } else if ( col == 1 ) {\n \n\t\t\t\t cubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\t cubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n \n\t\t\t } else {\n \n\t\t\t\t cubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\t cubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n \n\t\t\t }\n \n\t\t\t _setViewport( cubeUVRenderTarget,\n\t\t\t\t col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\t renderer.setRenderTarget( cubeUVRenderTarget );\n \n\t\t\t if ( useSolidColor ) {\n \n\t\t\t\t renderer.render( backgroundBox, cubeCamera );\n \n\t\t\t }\n \n\t\t\t renderer.render( scene, cubeCamera );\n \n\t\t }\n \n\t\t renderer.toneMapping = toneMapping;\n\t\t renderer.outputEncoding = outputEncoding;\n\t\t renderer.autoClear = originalAutoClear;\n \n\t }\n \n\t _textureToCubeUV( texture, cubeUVRenderTarget ) {\n \n\t\t const renderer = this._renderer;\n \n\t\t if ( texture.isCubeTexture ) {\n \n\t\t\t if ( this._cubemapShader == null ) {\n \n\t\t\t\t this._cubemapShader = _getCubemapShader();\n \n\t\t\t }\n \n\t\t } else {\n \n\t\t\t if ( this._equirectShader == null ) {\n \n\t\t\t\t this._equirectShader = _getEquirectShader();\n \n\t\t\t }\n \n\t\t }\n \n\t\t const material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t const mesh = new Mesh( _lodPlanes[ 0 ], material );\n \n\t\t const uniforms = material.uniforms;\n \n\t\t uniforms[ 'envMap' ].value = texture;\n \n\t\t if ( ! texture.isCubeTexture ) {\n \n\t\t\t uniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n \n\t\t }\n \n\t\t uniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\t uniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n \n\t\t _setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n \n\t\t renderer.setRenderTarget( cubeUVRenderTarget );\n\t\t renderer.render( mesh, _flatCamera );\n \n\t }\n \n\t _applyPMREM( cubeUVRenderTarget ) {\n \n\t\t const renderer = this._renderer;\n\t\t const autoClear = renderer.autoClear;\n\t\t renderer.autoClear = false;\n \n\t\t for ( let i = 1; i < TOTAL_LODS; i ++ ) {\n \n\t\t\t const sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n \n\t\t\t const poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n \n\t\t\t this._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n \n\t\t }\n \n\t\t renderer.autoClear = autoClear;\n \n\t }\n \n\t /**\n\t  * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t  * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t  * the blur latitudinally (around the poles), and then longitudinally (towards\n\t  * the poles) to approximate the orthogonally-separable blur. It is least\n\t  * accurate at the poles, but still does a decent job.\n\t  */\n\t _blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n \n\t\t const pingPongRenderTarget = this._pingPongRenderTarget;\n \n\t\t this._halfBlur(\n\t\t\t cubeUVRenderTarget,\n\t\t\t pingPongRenderTarget,\n\t\t\t lodIn,\n\t\t\t lodOut,\n\t\t\t sigma,\n\t\t\t 'latitudinal',\n\t\t\t poleAxis );\n \n\t\t this._halfBlur(\n\t\t\t pingPongRenderTarget,\n\t\t\t cubeUVRenderTarget,\n\t\t\t lodOut,\n\t\t\t lodOut,\n\t\t\t sigma,\n\t\t\t 'longitudinal',\n\t\t\t poleAxis );\n \n\t }\n \n\t _halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n \n\t\t const renderer = this._renderer;\n\t\t const blurMaterial = this._blurMaterial;\n \n\t\t if ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n \n\t\t\t console.error(\n\t\t\t\t 'blur direction must be either latitudinal or longitudinal!' );\n \n\t\t }\n \n\t\t // Number of standard deviations at which to cut off the discrete approximation.\n\t\t const STANDARD_DEVIATIONS = 3;\n \n\t\t const blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\t const blurUniforms = blurMaterial.uniforms;\n \n\t\t const pixels = _sizeLods[ lodIn ] - 1;\n\t\t const radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\t const sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t const samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n \n\t\t if ( samples > MAX_SAMPLES ) {\n \n\t\t\t console.warn( `sigmaRadians, ${\n\t\t\t\t sigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\t samples} samples when the maximum is set to ${MAX_SAMPLES}` );\n \n\t\t }\n \n\t\t const weights = [];\n\t\t let sum = 0;\n \n\t\t for ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n \n\t\t\t const x = i / sigmaPixels;\n\t\t\t const weight = Math.exp( - x * x / 2 );\n\t\t\t weights.push( weight );\n \n\t\t\t if ( i == 0 ) {\n \n\t\t\t\t sum += weight;\n \n\t\t\t } else if ( i < samples ) {\n \n\t\t\t\t sum += 2 * weight;\n \n\t\t\t }\n \n\t\t }\n \n\t\t for ( let i = 0; i < weights.length; i ++ ) {\n \n\t\t\t weights[ i ] = weights[ i ] / sum;\n \n\t\t }\n \n\t\t blurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\t blurUniforms[ 'samples' ].value = samples;\n\t\t blurUniforms[ 'weights' ].value = weights;\n\t\t blurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n \n\t\t if ( poleAxis ) {\n \n\t\t\t blurUniforms[ 'poleAxis' ].value = poleAxis;\n \n\t\t }\n \n\t\t blurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\t blurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\t blurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\t blurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n \n\t\t const outputSize = _sizeLods[ lodOut ];\n\t\t const x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\t const y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n \n\t\t _setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\t renderer.setRenderTarget( targetOut );\n\t\t renderer.render( blurMesh, _flatCamera );\n \n\t }\n \n }\n \n function _isLDR( texture ) {\n \n\t if ( texture === undefined || texture.type !== UnsignedByteType ) return false;\n \n\t return texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n \n }\n \n function _createPlanes() {\n \n\t const _lodPlanes = [];\n\t const _sizeLods = [];\n\t const _sigmas = [];\n \n\t let lod = LOD_MAX;\n \n\t for ( let i = 0; i < TOTAL_LODS; i ++ ) {\n \n\t\t const sizeLod = Math.pow( 2, lod );\n\t\t _sizeLods.push( sizeLod );\n\t\t let sigma = 1.0 / sizeLod;\n \n\t\t if ( i > LOD_MAX - LOD_MIN ) {\n \n\t\t\t sigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n \n\t\t } else if ( i == 0 ) {\n \n\t\t\t sigma = 0;\n \n\t\t }\n \n\t\t _sigmas.push( sigma );\n \n\t\t const texelSize = 1.0 / ( sizeLod - 1 );\n\t\t const min = - texelSize / 2;\n\t\t const max = 1 + texelSize / 2;\n\t\t const uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n \n\t\t const cubeFaces = 6;\n\t\t const vertices = 6;\n\t\t const positionSize = 3;\n\t\t const uvSize = 2;\n\t\t const faceIndexSize = 1;\n \n\t\t const position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\t const uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\t const faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n \n\t\t for ( let face = 0; face < cubeFaces; face ++ ) {\n \n\t\t\t const x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\t const y = face > 2 ? 0 : - 1;\n\t\t\t const coordinates = [\n\t\t\t\t x, y, 0,\n\t\t\t\t x + 2 / 3, y, 0,\n\t\t\t\t x + 2 / 3, y + 1, 0,\n\t\t\t\t x, y, 0,\n\t\t\t\t x + 2 / 3, y + 1, 0,\n\t\t\t\t x, y + 1, 0\n\t\t\t ];\n\t\t\t position.set( coordinates, positionSize * vertices * face );\n\t\t\t uv.set( uv1, uvSize * vertices * face );\n\t\t\t const fill = [ face, face, face, face, face, face ];\n\t\t\t faceIndex.set( fill, faceIndexSize * vertices * face );\n \n\t\t }\n \n\t\t const planes = new BufferGeometry();\n\t\t planes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\t planes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\t planes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t _lodPlanes.push( planes );\n \n\t\t if ( lod > LOD_MIN ) {\n \n\t\t\t lod --;\n \n\t\t }\n \n\t }\n \n\t return { _lodPlanes, _sizeLods, _sigmas };\n \n }\n \n function _createRenderTarget( params ) {\n \n\t const cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\t cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t cubeUVRenderTarget.scissorTest = true;\n\t return cubeUVRenderTarget;\n \n }\n \n function _setViewport( target, x, y, width, height ) {\n \n\t target.viewport.set( x, y, width, height );\n\t target.scissor.set( x, y, width, height );\n \n }\n \n function _getBlurShader( maxSamples ) {\n \n\t const weights = new Float32Array( maxSamples );\n\t const poleAxis = new Vector3( 0, 1, 0 );\n\t const shaderMaterial = new RawShaderMaterial( {\n \n\t\t name: 'SphericalGaussianBlur',\n \n\t\t defines: { 'n': maxSamples },\n \n\t\t uniforms: {\n\t\t\t 'envMap': { value: null },\n\t\t\t 'samples': { value: 1 },\n\t\t\t 'weights': { value: weights },\n\t\t\t 'latitudinal': { value: false },\n\t\t\t 'dTheta': { value: 0 },\n\t\t\t 'mipInt': { value: 0 },\n\t\t\t 'poleAxis': { value: poleAxis },\n\t\t\t 'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t 'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t },\n \n\t\t vertexShader: _getCommonVertexShader(),\n \n\t\t fragmentShader: /* glsl */`\n \n\t\t\t precision mediump float;\n\t\t\t precision mediump int;\n \n\t\t\t varying vec3 vOutputDirection;\n \n\t\t\t uniform sampler2D envMap;\n\t\t\t uniform int samples;\n\t\t\t uniform float weights[ n ];\n\t\t\t uniform bool latitudinal;\n\t\t\t uniform float dTheta;\n\t\t\t uniform float mipInt;\n\t\t\t uniform vec3 poleAxis;\n \n\t\t\t ${ _getEncodings() }\n \n\t\t\t #define ENVMAP_TYPE_CUBE_UV\n\t\t\t #include <cube_uv_reflection_fragment>\n \n\t\t\t vec3 getSample( float theta, vec3 axis ) {\n \n\t\t\t\t float cosTheta = cos( theta );\n\t\t\t\t // Rodrigues' axis-angle rotation\n\t\t\t\t vec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t + cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t + axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n \n\t\t\t\t return bilinearCubeUV( envMap, sampleDirection, mipInt );\n \n\t\t\t }\n \n\t\t\t void main() {\n \n\t\t\t\t vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n \n\t\t\t\t if ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n \n\t\t\t\t\t axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n \n\t\t\t\t }\n \n\t\t\t\t axis = normalize( axis );\n \n\t\t\t\t gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\t gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n \n\t\t\t\t for ( int i = 1; i < n; i++ ) {\n \n\t\t\t\t\t if ( i >= samples ) {\n \n\t\t\t\t\t\t break;\n \n\t\t\t\t\t }\n \n\t\t\t\t\t float theta = dTheta * float( i );\n\t\t\t\t\t gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\t gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n \n\t\t\t\t }\n \n\t\t\t\t gl_FragColor = linearToOutputTexel( gl_FragColor );\n \n\t\t\t }\n\t\t `,\n \n\t\t blending: NoBlending,\n\t\t depthTest: false,\n\t\t depthWrite: false\n \n\t } );\n \n\t return shaderMaterial;\n \n }\n \n function _getEquirectShader() {\n \n\t const texelSize = new Vector2( 1, 1 );\n\t const shaderMaterial = new RawShaderMaterial( {\n \n\t\t name: 'EquirectangularToCubeUV',\n \n\t\t uniforms: {\n\t\t\t 'envMap': { value: null },\n\t\t\t 'texelSize': { value: texelSize },\n\t\t\t 'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t 'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t },\n \n\t\t vertexShader: _getCommonVertexShader(),\n \n\t\t fragmentShader: /* glsl */`\n \n\t\t\t precision mediump float;\n\t\t\t precision mediump int;\n \n\t\t\t varying vec3 vOutputDirection;\n \n\t\t\t uniform sampler2D envMap;\n\t\t\t uniform vec2 texelSize;\n \n\t\t\t ${ _getEncodings() }\n \n\t\t\t #include <common>\n \n\t\t\t void main() {\n \n\t\t\t\t gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n \n\t\t\t\t vec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\t vec2 uv = equirectUv( outputDirection );\n \n\t\t\t\t vec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\t uv -= f * texelSize;\n\t\t\t\t vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\t uv.x += texelSize.x;\n\t\t\t\t vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\t uv.y += texelSize.y;\n\t\t\t\t vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\t uv.x -= texelSize.x;\n\t\t\t\t vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n \n\t\t\t\t vec3 tm = mix( tl, tr, f.x );\n\t\t\t\t vec3 bm = mix( bl, br, f.x );\n\t\t\t\t gl_FragColor.rgb = mix( tm, bm, f.y );\n \n\t\t\t\t gl_FragColor = linearToOutputTexel( gl_FragColor );\n \n\t\t\t }\n\t\t `,\n \n\t\t blending: NoBlending,\n\t\t depthTest: false,\n\t\t depthWrite: false\n \n\t } );\n \n\t return shaderMaterial;\n \n }\n \n function _getCubemapShader() {\n \n\t const shaderMaterial = new RawShaderMaterial( {\n \n\t\t name: 'CubemapToCubeUV',\n \n\t\t uniforms: {\n\t\t\t 'envMap': { value: null },\n\t\t\t 'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t 'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t },\n \n\t\t vertexShader: _getCommonVertexShader(),\n \n\t\t fragmentShader: /* glsl */`\n \n\t\t\t precision mediump float;\n\t\t\t precision mediump int;\n \n\t\t\t varying vec3 vOutputDirection;\n \n\t\t\t uniform samplerCube envMap;\n \n\t\t\t ${ _getEncodings() }\n \n\t\t\t void main() {\n \n\t\t\t\t gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\t gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\t gl_FragColor = linearToOutputTexel( gl_FragColor );\n \n\t\t\t }\n\t\t `,\n \n\t\t blending: NoBlending,\n\t\t depthTest: false,\n\t\t depthWrite: false\n \n\t } );\n \n\t return shaderMaterial;\n \n }\n \n function _getCommonVertexShader() {\n \n\t return /* glsl */`\n \n\t\t precision mediump float;\n\t\t precision mediump int;\n \n\t\t attribute vec3 position;\n\t\t attribute vec2 uv;\n\t\t attribute float faceIndex;\n \n\t\t varying vec3 vOutputDirection;\n \n\t\t // RH coordinate system; PMREM face-indexing convention\n\t\t vec3 getDirection( vec2 uv, float face ) {\n \n\t\t\t uv = 2.0 * uv - 1.0;\n \n\t\t\t vec3 direction = vec3( uv, 1.0 );\n \n\t\t\t if ( face == 0.0 ) {\n \n\t\t\t\t direction = direction.zyx; // ( 1, v, u ) pos x\n \n\t\t\t } else if ( face == 1.0 ) {\n \n\t\t\t\t direction = direction.xzy;\n\t\t\t\t direction.xz *= -1.0; // ( -u, 1, -v ) pos y\n \n\t\t\t } else if ( face == 2.0 ) {\n \n\t\t\t\t direction.x *= -1.0; // ( -u, v, 1 ) pos z\n \n\t\t\t } else if ( face == 3.0 ) {\n \n\t\t\t\t direction = direction.zyx;\n\t\t\t\t direction.xz *= -1.0; // ( -1, v, -u ) neg x\n \n\t\t\t } else if ( face == 4.0 ) {\n \n\t\t\t\t direction = direction.xzy;\n\t\t\t\t direction.xy *= -1.0; // ( -u, -1, v ) neg y\n \n\t\t\t } else if ( face == 5.0 ) {\n \n\t\t\t\t direction.z *= -1.0; // ( u, v, -1 ) neg z\n \n\t\t\t }\n \n\t\t\t return direction;\n \n\t\t }\n \n\t\t void main() {\n \n\t\t\t vOutputDirection = getDirection( uv, faceIndex );\n\t\t\t gl_Position = vec4( position, 1.0 );\n \n\t\t }\n\t `;\n \n }\n \n function _getEncodings() {\n \n\t return /* glsl */`\n \n\t\t uniform int inputEncoding;\n\t\t uniform int outputEncoding;\n \n\t\t #include <encodings_pars_fragment>\n \n\t\t vec4 inputTexelToLinear( vec4 value ) {\n \n\t\t\t if ( inputEncoding == 0 ) {\n \n\t\t\t\t return value;\n \n\t\t\t } else if ( inputEncoding == 1 ) {\n \n\t\t\t\t return sRGBToLinear( value );\n \n\t\t\t } else if ( inputEncoding == 2 ) {\n \n\t\t\t\t return RGBEToLinear( value );\n \n\t\t\t } else if ( inputEncoding == 3 ) {\n \n\t\t\t\t return RGBMToLinear( value, 7.0 );\n \n\t\t\t } else if ( inputEncoding == 4 ) {\n \n\t\t\t\t return RGBMToLinear( value, 16.0 );\n \n\t\t\t } else if ( inputEncoding == 5 ) {\n \n\t\t\t\t return RGBDToLinear( value, 256.0 );\n \n\t\t\t } else {\n \n\t\t\t\t return GammaToLinear( value, 2.2 );\n \n\t\t\t }\n \n\t\t }\n \n\t\t vec4 linearToOutputTexel( vec4 value ) {\n \n\t\t\t if ( outputEncoding == 0 ) {\n \n\t\t\t\t return value;\n \n\t\t\t } else if ( outputEncoding == 1 ) {\n \n\t\t\t\t return LinearTosRGB( value );\n \n\t\t\t } else if ( outputEncoding == 2 ) {\n \n\t\t\t\t return LinearToRGBE( value );\n \n\t\t\t } else if ( outputEncoding == 3 ) {\n \n\t\t\t\t return LinearToRGBM( value, 7.0 );\n \n\t\t\t } else if ( outputEncoding == 4 ) {\n \n\t\t\t\t return LinearToRGBM( value, 16.0 );\n \n\t\t\t } else if ( outputEncoding == 5 ) {\n \n\t\t\t\t return LinearToRGBD( value, 256.0 );\n \n\t\t\t } else {\n \n\t\t\t\t return LinearToGamma( value, 2.2 );\n \n\t\t\t }\n \n\t\t }\n \n\t\t vec4 envMapTexelToLinear( vec4 color ) {\n \n\t\t\t return inputTexelToLinear( color );\n \n\t\t }\n\t `;\n \n }\n \n const LineStrip = 0;\n const LinePieces = 1;\n const NoColors = 0;\n const FaceColors = 1;\n const VertexColors = 2;\n \n function MeshFaceMaterial( materials ) {\n \n\t console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t return materials;\n \n }\n \n function MultiMaterial( materials = [] ) {\n \n\t console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t materials.isMultiMaterial = true;\n\t materials.materials = materials;\n\t materials.clone = function () {\n \n\t\t return materials.slice();\n \n\t };\n \n\t return materials;\n \n }\n \n function PointCloud( geometry, material ) {\n \n\t console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t return new Points( geometry, material );\n \n }\n \n function Particle( material ) {\n \n\t console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t return new Sprite( material );\n \n }\n \n function ParticleSystem( geometry, material ) {\n \n\t console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t return new Points( geometry, material );\n \n }\n \n function PointCloudMaterial( parameters ) {\n \n\t console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t return new PointsMaterial( parameters );\n \n }\n \n function ParticleBasicMaterial( parameters ) {\n \n\t console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t return new PointsMaterial( parameters );\n \n }\n \n function ParticleSystemMaterial( parameters ) {\n \n\t console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t return new PointsMaterial( parameters );\n \n }\n \n function Vertex( x, y, z ) {\n \n\t console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t return new Vector3( x, y, z );\n \n }\n \n //\n \n function DynamicBufferAttribute( array, itemSize ) {\n \n\t console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\t return new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n \n }\n \n function Int8Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t return new Int8BufferAttribute( array, itemSize );\n \n }\n \n function Uint8Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t return new Uint8BufferAttribute( array, itemSize );\n \n }\n \n function Uint8ClampedAttribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t return new Uint8ClampedBufferAttribute( array, itemSize );\n \n }\n \n function Int16Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t return new Int16BufferAttribute( array, itemSize );\n \n }\n \n function Uint16Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t return new Uint16BufferAttribute( array, itemSize );\n \n }\n \n function Int32Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t return new Int32BufferAttribute( array, itemSize );\n \n }\n \n function Uint32Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t return new Uint32BufferAttribute( array, itemSize );\n \n }\n \n function Float32Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t return new Float32BufferAttribute( array, itemSize );\n \n }\n \n function Float64Attribute( array, itemSize ) {\n \n\t console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t return new Float64BufferAttribute( array, itemSize );\n \n }\n \n //\n \n Curve.create = function ( construct, getPoint ) {\n \n\t console.log( 'THREE.Curve.create() has been deprecated' );\n \n\t construct.prototype = Object.create( Curve.prototype );\n\t construct.prototype.constructor = construct;\n\t construct.prototype.getPoint = getPoint;\n \n\t return construct;\n \n };\n \n //\n \n Path.prototype.fromPoints = function ( points ) {\n \n\t console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t return this.setFromPoints( points );\n \n };\n \n //\n \n function AxisHelper( size ) {\n \n\t console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t return new AxesHelper( size );\n \n }\n \n function BoundingBoxHelper( object, color ) {\n \n\t console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t return new BoxHelper( object, color );\n \n }\n \n function EdgesHelper( object, hex ) {\n \n\t console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n \n }\n \n GridHelper.prototype.setColors = function () {\n \n\t console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n \n };\n \n SkeletonHelper.prototype.update = function () {\n \n\t console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n \n };\n \n function WireframeHelper( object, hex ) {\n \n\t console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n \n }\n \n //\n \n Loader.prototype.extractUrlBase = function ( url ) {\n \n\t console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t return LoaderUtils.extractUrlBase( url );\n \n };\n \n Loader.Handlers = {\n \n\t add: function ( /* regex, loader */ ) {\n \n\t\t console.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n \n\t },\n \n\t get: function ( /* file */ ) {\n \n\t\t console.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n \n\t }\n \n };\n \n function XHRLoader( manager ) {\n \n\t console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t return new FileLoader( manager );\n \n }\n \n function BinaryTextureLoader( manager ) {\n \n\t console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t return new DataTextureLoader( manager );\n \n }\n \n //\n \n Box2.prototype.center = function ( optionalTarget ) {\n \n\t console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t return this.getCenter( optionalTarget );\n \n };\n \n Box2.prototype.empty = function () {\n \n\t console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t return this.isEmpty();\n \n };\n \n Box2.prototype.isIntersectionBox = function ( box ) {\n \n\t console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t return this.intersectsBox( box );\n \n };\n \n Box2.prototype.size = function ( optionalTarget ) {\n \n\t console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t return this.getSize( optionalTarget );\n \n };\n \n //\n \n Box3.prototype.center = function ( optionalTarget ) {\n \n\t console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t return this.getCenter( optionalTarget );\n \n };\n \n Box3.prototype.empty = function () {\n \n\t console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t return this.isEmpty();\n \n };\n \n Box3.prototype.isIntersectionBox = function ( box ) {\n \n\t console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t return this.intersectsBox( box );\n \n };\n \n Box3.prototype.isIntersectionSphere = function ( sphere ) {\n \n\t console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t return this.intersectsSphere( sphere );\n \n };\n \n Box3.prototype.size = function ( optionalTarget ) {\n \n\t console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t return this.getSize( optionalTarget );\n \n };\n \n //\n \n Sphere.prototype.empty = function () {\n \n\t console.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\t return this.isEmpty();\n \n };\n \n //\n \n Frustum.prototype.setFromMatrix = function ( m ) {\n \n\t console.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\t return this.setFromProjectionMatrix( m );\n \n };\n \n //\n \n Line3.prototype.center = function ( optionalTarget ) {\n \n\t console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t return this.getCenter( optionalTarget );\n \n };\n \n //\n \n Matrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n \n\t console.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\t return this.toArray( array, offset );\n \n };\n \n Matrix3.prototype.multiplyVector3 = function ( vector ) {\n \n\t console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t return vector.applyMatrix3( this );\n \n };\n \n Matrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n \n\t console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n \n };\n \n Matrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n \n\t console.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\t return attribute.applyMatrix3( this );\n \n };\n \n Matrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n \n\t console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n \n };\n \n Matrix3.prototype.getInverse = function ( matrix ) {\n \n\t console.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\t return this.copy( matrix ).invert();\n \n };\n \n //\n \n Matrix4.prototype.extractPosition = function ( m ) {\n \n\t console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t return this.copyPosition( m );\n \n };\n \n Matrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n \n\t console.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\t return this.toArray( array, offset );\n \n };\n \n Matrix4.prototype.getPosition = function () {\n \n\t console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t return new Vector3().setFromMatrixColumn( this, 3 );\n \n };\n \n Matrix4.prototype.setRotationFromQuaternion = function ( q ) {\n \n\t console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t return this.makeRotationFromQuaternion( q );\n \n };\n \n Matrix4.prototype.multiplyToArray = function () {\n \n\t console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n \n };\n \n Matrix4.prototype.multiplyVector3 = function ( vector ) {\n \n\t console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t return vector.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.multiplyVector4 = function ( vector ) {\n \n\t console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t return vector.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n \n\t console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateAxis = function ( v ) {\n \n\t console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t v.transformDirection( this );\n \n };\n \n Matrix4.prototype.crossVector = function ( vector ) {\n \n\t console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t return vector.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.translate = function () {\n \n\t console.error( 'THREE.Matrix4: .translate() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateX = function () {\n \n\t console.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateY = function () {\n \n\t console.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateZ = function () {\n \n\t console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n \n };\n \n Matrix4.prototype.rotateByAxis = function () {\n \n\t console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n \n };\n \n Matrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n \n\t console.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\t return attribute.applyMatrix4( this );\n \n };\n \n Matrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n \n\t console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n \n };\n \n Matrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n \n\t console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t return this.makePerspective( left, right, top, bottom, near, far );\n \n };\n \n Matrix4.prototype.getInverse = function ( matrix ) {\n \n\t console.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\t return this.copy( matrix ).invert();\n \n };\n \n //\n \n Plane.prototype.isIntersectionLine = function ( line ) {\n \n\t console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t return this.intersectsLine( line );\n \n };\n \n //\n \n Quaternion.prototype.multiplyVector3 = function ( vector ) {\n \n\t console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t return vector.applyQuaternion( this );\n \n };\n \n Quaternion.prototype.inverse = function ( ) {\n \n\t console.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\t return this.invert();\n \n };\n \n //\n \n Ray.prototype.isIntersectionBox = function ( box ) {\n \n\t console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t return this.intersectsBox( box );\n \n };\n \n Ray.prototype.isIntersectionPlane = function ( plane ) {\n \n\t console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t return this.intersectsPlane( plane );\n \n };\n \n Ray.prototype.isIntersectionSphere = function ( sphere ) {\n \n\t console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t return this.intersectsSphere( sphere );\n \n };\n \n //\n \n Triangle.prototype.area = function () {\n \n\t console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t return this.getArea();\n \n };\n \n Triangle.prototype.barycoordFromPoint = function ( point, target ) {\n \n\t console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t return this.getBarycoord( point, target );\n \n };\n \n Triangle.prototype.midpoint = function ( target ) {\n \n\t console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t return this.getMidpoint( target );\n \n };\n \n Triangle.prototypenormal = function ( target ) {\n \n\t console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t return this.getNormal( target );\n \n };\n \n Triangle.prototype.plane = function ( target ) {\n \n\t console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t return this.getPlane( target );\n \n };\n \n Triangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n \n\t console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t return Triangle.getBarycoord( point, a, b, c, target );\n \n };\n \n Triangle.normal = function ( a, b, c, target ) {\n \n\t console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t return Triangle.getNormal( a, b, c, target );\n \n };\n \n //\n \n Shape.prototype.extractAllPoints = function ( divisions ) {\n \n\t console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t return this.extractPoints( divisions );\n \n };\n \n Shape.prototype.extrude = function ( options ) {\n \n\t console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t return new ExtrudeGeometry( this, options );\n \n };\n \n Shape.prototype.makeGeometry = function ( options ) {\n \n\t console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t return new ShapeGeometry( this, options );\n \n };\n \n //\n \n Vector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n \n\t console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t return this.fromBufferAttribute( attribute, index, offset );\n \n };\n \n Vector2.prototype.distanceToManhattan = function ( v ) {\n \n\t console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t return this.manhattanDistanceTo( v );\n \n };\n \n Vector2.prototype.lengthManhattan = function () {\n \n\t console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t return this.manhattanLength();\n \n };\n \n //\n \n Vector3.prototype.setEulerFromRotationMatrix = function () {\n \n\t console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n \n };\n \n Vector3.prototype.setEulerFromQuaternion = function () {\n \n\t console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n \n };\n \n Vector3.prototype.getPositionFromMatrix = function ( m ) {\n \n\t console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t return this.setFromMatrixPosition( m );\n \n };\n \n Vector3.prototype.getScaleFromMatrix = function ( m ) {\n \n\t console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t return this.setFromMatrixScale( m );\n \n };\n \n Vector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n \n\t console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t return this.setFromMatrixColumn( matrix, index );\n \n };\n \n Vector3.prototype.applyProjection = function ( m ) {\n \n\t console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t return this.applyMatrix4( m );\n \n };\n \n Vector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n \n\t console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t return this.fromBufferAttribute( attribute, index, offset );\n \n };\n \n Vector3.prototype.distanceToManhattan = function ( v ) {\n \n\t console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t return this.manhattanDistanceTo( v );\n \n };\n \n Vector3.prototype.lengthManhattan = function () {\n \n\t console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t return this.manhattanLength();\n \n };\n \n //\n \n Vector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n \n\t console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t return this.fromBufferAttribute( attribute, index, offset );\n \n };\n \n Vector4.prototype.lengthManhattan = function () {\n \n\t console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t return this.manhattanLength();\n \n };\n \n //\n \n Object3D.prototype.getChildByName = function ( name ) {\n \n\t console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t return this.getObjectByName( name );\n \n };\n \n Object3D.prototype.renderDepth = function () {\n \n\t console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n \n };\n \n Object3D.prototype.translate = function ( distance, axis ) {\n \n\t console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t return this.translateOnAxis( axis, distance );\n \n };\n \n Object3D.prototype.getWorldRotation = function () {\n \n\t console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n \n };\n \n Object3D.prototype.applyMatrix = function ( matrix ) {\n \n\t console.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t return this.applyMatrix4( matrix );\n \n };\n \n Object.defineProperties( Object3D.prototype, {\n \n\t eulerOrder: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t return this.rotation.order;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t this.rotation.order = value;\n \n\t\t }\n\t },\n\t useQuaternion: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n \n\t\t }\n\t }\n \n } );\n \n Mesh.prototype.setDrawMode = function () {\n \n\t console.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n \n };\n \n Object.defineProperties( Mesh.prototype, {\n \n\t drawMode: {\n\t\t get: function () {\n \n\t\t\t console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\t return TrianglesDrawMode;\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n \n\t\t }\n\t }\n \n } );\n \n SkinnedMesh.prototype.initBones = function () {\n \n\t console.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n \n };\n \n //\n \n PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n \n\t console.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t 'Use .setFocalLength and .filmGauge for a photographic setup.' );\n \n\t if ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\t this.setFocalLength( focalLength );\n \n };\n \n //\n \n Object.defineProperties( Light.prototype, {\n\t onlyShadow: {\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.Light: .onlyShadow has been removed.' );\n \n\t\t }\n\t },\n\t shadowCameraFov: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t this.shadow.camera.fov = value;\n \n\t\t }\n\t },\n\t shadowCameraLeft: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t this.shadow.camera.left = value;\n \n\t\t }\n\t },\n\t shadowCameraRight: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t this.shadow.camera.right = value;\n \n\t\t }\n\t },\n\t shadowCameraTop: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t this.shadow.camera.top = value;\n \n\t\t }\n\t },\n\t shadowCameraBottom: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t this.shadow.camera.bottom = value;\n \n\t\t }\n\t },\n\t shadowCameraNear: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t this.shadow.camera.near = value;\n \n\t\t }\n\t },\n\t shadowCameraFar: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t this.shadow.camera.far = value;\n \n\t\t }\n\t },\n\t shadowCameraVisible: {\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n \n\t\t }\n\t },\n\t shadowBias: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t this.shadow.bias = value;\n \n\t\t }\n\t },\n\t shadowDarkness: {\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n \n\t\t }\n\t },\n\t shadowMapWidth: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t this.shadow.mapSize.width = value;\n \n\t\t }\n\t },\n\t shadowMapHeight: {\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t this.shadow.mapSize.height = value;\n \n\t\t }\n\t }\n } );\n \n //\n \n Object.defineProperties( BufferAttribute.prototype, {\n \n\t length: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t return this.array.length;\n \n\t\t }\n\t },\n\t dynamic: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t return this.usage === DynamicDrawUsage;\n \n\t\t },\n\t\t set: function ( /* value */ ) {\n \n\t\t\t console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t this.setUsage( DynamicDrawUsage );\n \n\t\t }\n\t }\n \n } );\n \n BufferAttribute.prototype.setDynamic = function ( value ) {\n \n\t console.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t return this;\n \n };\n \n BufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n \n\t console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n \n },\n \n BufferAttribute.prototype.setArray = function ( /* array */ ) {\n \n\t console.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n \n };\n \n //\n \n BufferGeometry.prototype.addIndex = function ( index ) {\n \n\t console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t this.setIndex( index );\n \n };\n \n BufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n \n\t console.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n \n\t if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n \n\t\t console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n \n\t\t return this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n \n\t }\n \n\t if ( name === 'index' ) {\n \n\t\t console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t this.setIndex( attribute );\n \n\t\t return this;\n \n\t }\n \n\t return this.setAttribute( name, attribute );\n \n };\n \n BufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n \n\t if ( indexOffset !== undefined ) {\n \n\t\t console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n \n\t }\n \n\t console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t this.addGroup( start, count );\n \n };\n \n BufferGeometry.prototype.clearDrawCalls = function () {\n \n\t console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t this.clearGroups();\n \n };\n \n BufferGeometry.prototype.computeOffsets = function () {\n \n\t console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n \n };\n \n BufferGeometry.prototype.removeAttribute = function ( name ) {\n \n\t console.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n \n\t return this.deleteAttribute( name );\n \n };\n \n BufferGeometry.prototype.applyMatrix = function ( matrix ) {\n \n\t console.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\t return this.applyMatrix4( matrix );\n \n };\n \n Object.defineProperties( BufferGeometry.prototype, {\n \n\t drawcalls: {\n\t\t get: function () {\n \n\t\t\t console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t return this.groups;\n \n\t\t }\n\t },\n\t offsets: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t return this.groups;\n \n\t\t }\n\t }\n \n } );\n \n InterleavedBuffer.prototype.setDynamic = function ( value ) {\n \n\t console.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t return this;\n \n };\n \n InterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n \n\t console.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n \n };\n \n //\n \n ExtrudeGeometry.prototype.getArrays = function () {\n \n\t console.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n \n };\n \n ExtrudeGeometry.prototype.addShapeList = function () {\n \n\t console.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n \n };\n \n ExtrudeGeometry.prototype.addShape = function () {\n \n\t console.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n \n };\n \n //\n \n Scene.prototype.dispose = function () {\n \n\t console.error( 'THREE.Scene: .dispose() has been removed.' );\n \n };\n \n //\n \n Uniform.prototype.onUpdate = function () {\n \n\t console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t return this;\n \n };\n \n //\n \n Object.defineProperties( Material.prototype, {\n \n\t wrapAround: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.Material: .wrapAround has been removed.' );\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.Material: .wrapAround has been removed.' );\n \n\t\t }\n\t },\n \n\t overdraw: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.Material: .overdraw has been removed.' );\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.Material: .overdraw has been removed.' );\n \n\t\t }\n\t },\n \n\t wrapRGB: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t return new Color();\n \n\t\t }\n\t },\n \n\t shading: {\n\t\t get: function () {\n \n\t\t\t console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t this.flatShading = ( value === FlatShading );\n \n\t\t }\n\t },\n \n\t stencilMask: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t return this.stencilFuncMask;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t this.stencilFuncMask = value;\n \n\t\t }\n\t }\n \n } );\n \n Object.defineProperties( ShaderMaterial.prototype, {\n \n\t derivatives: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t return this.extensions.derivatives;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t this.extensions.derivatives = value;\n \n\t\t }\n\t }\n \n } );\n \n //\n \n WebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n \n\t console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t this.setRenderTarget( renderTarget );\n\t this.clear( color, depth, stencil );\n \n };\n \n WebGLRenderer.prototype.animate = function ( callback ) {\n \n\t console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t this.setAnimationLoop( callback );\n \n };\n \n WebGLRenderer.prototype.getCurrentRenderTarget = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t return this.getRenderTarget();\n \n };\n \n WebGLRenderer.prototype.getMaxAnisotropy = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t return this.capabilities.getMaxAnisotropy();\n \n };\n \n WebGLRenderer.prototype.getPrecision = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t return this.capabilities.precision;\n \n };\n \n WebGLRenderer.prototype.resetGLState = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t return this.state.reset();\n \n };\n \n WebGLRenderer.prototype.supportsFloatTextures = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t return this.extensions.get( 'OES_texture_float' );\n \n };\n \n WebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t return this.extensions.get( 'OES_texture_half_float' );\n \n };\n \n WebGLRenderer.prototype.supportsStandardDerivatives = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t return this.extensions.get( 'OES_standard_derivatives' );\n \n };\n \n WebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n \n };\n \n WebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n \n };\n \n WebGLRenderer.prototype.supportsBlendMinMax = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t return this.extensions.get( 'EXT_blend_minmax' );\n \n };\n \n WebGLRenderer.prototype.supportsVertexTextures = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t return this.capabilities.vertexTextures;\n \n };\n \n WebGLRenderer.prototype.supportsInstancedArrays = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t return this.extensions.get( 'ANGLE_instanced_arrays' );\n \n };\n \n WebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n \n\t console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t this.setScissorTest( boolean );\n \n };\n \n WebGLRenderer.prototype.initMaterial = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.addPrePlugin = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.addPostPlugin = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.updateShadowMap = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setFaceCulling = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.allocTextureUnit = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setTexture = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setTexture2D = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.setTextureCube = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n \n };\n \n WebGLRenderer.prototype.getActiveMipMapLevel = function () {\n \n\t console.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t return this.getActiveMipmapLevel();\n \n };\n \n Object.defineProperties( WebGLRenderer.prototype, {\n \n\t shadowMapEnabled: {\n\t\t get: function () {\n \n\t\t\t return this.shadowMap.enabled;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t this.shadowMap.enabled = value;\n \n\t\t }\n\t },\n\t shadowMapType: {\n\t\t get: function () {\n \n\t\t\t return this.shadowMap.type;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t this.shadowMap.type = value;\n \n\t\t }\n\t },\n\t shadowMapCullFace: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t return undefined;\n \n\t\t },\n\t\t set: function ( /* value */ ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n \n\t\t }\n\t },\n\t context: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\t return this.getContext();\n \n\t\t }\n\t },\n\t vr: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\t return this.xr;\n \n\t\t }\n\t },\n\t gammaInput: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\t return false;\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n \n\t\t }\n\t },\n\t gammaOutput: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t return false;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\t this.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n \n\t\t }\n\t },\n\t toneMappingWhitePoint: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\t return 1.0;\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n \n\t\t }\n\t },\n \n } );\n \n Object.defineProperties( WebGLShadowMap.prototype, {\n \n\t cullFace: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t return undefined;\n \n\t\t },\n\t\t set: function ( /* cullFace */ ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n \n\t\t }\n\t },\n\t renderReverseSided: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t return undefined;\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n \n\t\t }\n\t },\n\t renderSingleSided: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t return undefined;\n \n\t\t },\n\t\t set: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n \n\t\t }\n\t }\n \n } );\n \n function WebGLRenderTargetCube( width, height, options ) {\n \n\t console.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\t return new WebGLCubeRenderTarget( width, options );\n \n }\n \n //\n \n Object.defineProperties( WebGLRenderTarget.prototype, {\n \n\t wrapS: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t return this.texture.wrapS;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t this.texture.wrapS = value;\n \n\t\t }\n\t },\n\t wrapT: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t return this.texture.wrapT;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t this.texture.wrapT = value;\n \n\t\t }\n\t },\n\t magFilter: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t return this.texture.magFilter;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t this.texture.magFilter = value;\n \n\t\t }\n\t },\n\t minFilter: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t return this.texture.minFilter;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t this.texture.minFilter = value;\n \n\t\t }\n\t },\n\t anisotropy: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t return this.texture.anisotropy;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t this.texture.anisotropy = value;\n \n\t\t }\n\t },\n\t offset: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t return this.texture.offset;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t this.texture.offset = value;\n \n\t\t }\n\t },\n\t repeat: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t return this.texture.repeat;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t this.texture.repeat = value;\n \n\t\t }\n\t },\n\t format: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t return this.texture.format;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t this.texture.format = value;\n \n\t\t }\n\t },\n\t type: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t return this.texture.type;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t this.texture.type = value;\n \n\t\t }\n\t },\n\t generateMipmaps: {\n\t\t get: function () {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t return this.texture.generateMipmaps;\n \n\t\t },\n\t\t set: function ( value ) {\n \n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t this.texture.generateMipmaps = value;\n \n\t\t }\n\t }\n \n } );\n \n //\n \n Audio.prototype.load = function ( file ) {\n \n\t console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t const scope = this;\n\t const audioLoader = new AudioLoader();\n\t audioLoader.load( file, function ( buffer ) {\n \n\t\t scope.setBuffer( buffer );\n \n\t } );\n\t return this;\n \n };\n \n \n AudioAnalyser.prototype.getData = function () {\n \n\t console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t return this.getFrequencyData();\n \n };\n \n //\n \n CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n \n\t console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t return this.update( renderer, scene );\n \n };\n \n CubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n \n\t console.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\t return this.renderTarget.clear( renderer, color, depth, stencil );\n \n };\n \n ImageUtils.crossOrigin = undefined;\n \n ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n \n\t console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n \n\t const loader = new TextureLoader();\n\t loader.setCrossOrigin( this.crossOrigin );\n \n\t const texture = loader.load( url, onLoad, undefined, onError );\n \n\t if ( mapping ) texture.mapping = mapping;\n \n\t return texture;\n \n };\n \n ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n \n\t console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n \n\t const loader = new CubeTextureLoader();\n\t loader.setCrossOrigin( this.crossOrigin );\n \n\t const texture = loader.load( urls, onLoad, undefined, onError );\n \n\t if ( mapping ) texture.mapping = mapping;\n \n\t return texture;\n \n };\n \n ImageUtils.loadCompressedTexture = function () {\n \n\t console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n \n };\n \n ImageUtils.loadCompressedTextureCube = function () {\n \n\t console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n \n };\n \n //\n \n function CanvasRenderer() {\n \n\t console.error( 'THREE.CanvasRenderer has been removed' );\n \n }\n \n //\n \n function JSONLoader() {\n \n\t console.error( 'THREE.JSONLoader has been removed.' );\n \n }\n \n //\n \n const SceneUtils = {\n \n\t createMultiMaterialObject: function ( /* geometry, materials */ ) {\n \n\t\t console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n \n\t },\n \n\t detach: function ( /* child, parent, scene */ ) {\n \n\t\t console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n \n\t },\n \n\t attach: function ( /* child, scene, parent */ ) {\n \n\t\t console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n \n\t }\n \n };\n \n //\n \n function LensFlare() {\n \n\t console.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n \n }\n \n if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n \n\t /* eslint-disable no-undef */\n\t __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\t revision: REVISION,\n\t } } ) );\n\t /* eslint-enable no-undef */\n \n }\n \n if ( typeof window !== 'undefined' ) {\n \n\t if ( window.__THREE__ ) {\n \n\t\t console.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n \n\t } else {\n \n\t\t window.__THREE__ = REVISION;\n \n\t }\n \n }\n \n export { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GammaEncoding, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry as ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBIntegerFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry as TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, sRGBEncoding };\n ","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","import 'regenerator-runtime/runtime';\nimport * as THREE from './three.module.js';\n\n\t\t\timport Stats from './stats.module.js';\n\n\t\t\tlet stats, clock;\n\t\t\tlet scene, camera, renderer, mixer;\n\n\t\t\tinit();\n\t\t\tanimate();\n\n\t\t\tfunction init() {\n\n\t\t\t\tscene = new THREE.Scene();\n\n\t\t\t\t//\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 1000 );\n\t\t\t\tcamera.position.set( 25, 25, 50 );\n\t\t\t\tcamera.lookAt( scene.position );\n\n\t\t\t\t//\n\n\t\t\t\tconst axesHelper = new THREE.AxesHelper( 10 );\n\t\t\t\tscene.add( axesHelper );\n\n\t\t\t\t//\n\n\t\t\t\tconst geometry = new THREE.BoxGeometry( 5, 5, 5 );\n\t\t\t\tconst material = new THREE.MeshBasicMaterial( { color: 0xffffff, transparent: true } );\n\t\t\t\tconst mesh = new THREE.Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\n\t\t\t\t// create a keyframe track (i.e. a timed sequence of keyframes) for each animated property\n\t\t\t\t// Note: the keyframe track type should correspond to the type of the property being animated\n\n\t\t\t\t// POSITION\n\t\t\t\tconst positionKF = new THREE.VectorKeyframeTrack( '.position', [ 0, 1, 2 ], [ 0, 0, 0, 30, 0, 0, 0, 0, 0 ] );\n\n\t\t\t\t// SCALE\n\t\t\t\tconst scaleKF = new THREE.VectorKeyframeTrack( '.scale', [ 0, 1, 2 ], [ 1, 1, 1, 2, 2, 2, 1, 1, 1 ] );\n\n\t\t\t\t// ROTATION\n\t\t\t\t// Rotation should be performed using quaternions, using a THREE.QuaternionKeyframeTrack\n\t\t\t\t// Interpolating Euler angles (.rotation property) can be problematic and is currently not supported\n\n\t\t\t\t// set up rotation about x axis\n\t\t\t\tconst xAxis = new THREE.Vector3( 1, 0, 0 );\n\n\t\t\t\tconst qInitial = new THREE.Quaternion().setFromAxisAngle( xAxis, 0 );\n\t\t\t\tconst qFinal = new THREE.Quaternion().setFromAxisAngle( xAxis, Math.PI );\n\t\t\t\tconst quaternionKF = new THREE.QuaternionKeyframeTrack( '.quaternion', [ 0, 1, 2 ], [ qInitial.x, qInitial.y, qInitial.z, qInitial.w, qFinal.x, qFinal.y, qFinal.z, qFinal.w, qInitial.x, qInitial.y, qInitial.z, qInitial.w ] );\n\n\t\t\t\t// COLOR\n\t\t\t\tconst colorKF = new THREE.ColorKeyframeTrack( '.material.color', [ 0, 1, 2 ], [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ], THREE.InterpolateDiscrete );\n\n\t\t\t\t// OPACITY\n\t\t\t\tconst opacityKF = new THREE.NumberKeyframeTrack( '.material.opacity', [ 0, 1, 2 ], [ 1, 0, 1 ] );\n\n\t\t\t\t// create an animation sequence with the tracks\n\t\t\t\t// If a negative time value is passed, the duration will be calculated from the times of the passed tracks array\n\t\t\t\tconst clip = new THREE.AnimationClip( 'Action', 3, [ scaleKF, positionKF, quaternionKF, colorKF, opacityKF ] );\n\n\t\t\t\t// setup the THREE.AnimationMixer\n\t\t\t\tmixer = new THREE.AnimationMixer( mesh );\n\n\t\t\t\t// create a ClipAction and set it to play\n\t\t\t\tconst clipAction = mixer.clipAction( clip );\n\t\t\t\tclipAction.play();\n\n\t\t\t\t//\n\n\t\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\tdocument.body.appendChild( renderer.domElement );\n\n\t\t\t\t//\n\n\t\t\t\tstats = new Stats();\n\t\t\t\tdocument.body.appendChild( stats.dom );\n\n\t\t\t\t//\n\n\t\t\t\tclock = new THREE.Clock();\n\n\t\t\t\t//\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize );\n\n\t\t\t}\n\n\t\t\tfunction onWindowResize() {\n\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t\t}\n\n\t\t\tfunction animate() {\n\n\t\t\t\trequestAnimationFrame( animate );\n\n\t\t\t\trender();\n\n\t\t\t}\n\n\t\t\tfunction render() {\n\n\t\t\t\tconst delta = clock.getDelta();\n\n\t\t\t\tif ( mixer ) {\n\n\t\t\t\t\tmixer.update( delta );\n\n\t\t\t\t}\n\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t\tstats.update();\n\n\t\t\t}\n"]}